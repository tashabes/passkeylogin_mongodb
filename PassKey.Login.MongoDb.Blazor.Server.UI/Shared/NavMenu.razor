@using PassKey.Login.MongoDb.Blazor.Server.UI.Data
@using PassKey.Login.MongoDb.Blazor.Server.UI.Service
@inject PassKey.Login.MongoDb.Blazor.Server.UI.IService.IUserService userService
@inject PassKey.Login.MongoDb.Blazor.Server.UI.IService.ICompaniesService companiesService
@inject IJSRuntime jsRuntime



<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <img src="@company.FileName" alt="company logo" />
        <a class="navbar-brand" href=""></a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="home" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="timesheets">
                <span class="oi oi-timer" aria-hidden="true"></span> Time Sheets
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="payments">
                <span class="oi oi-british-pound" aria-hidden="true"></span> Payments
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="expenses">
                <span class="oi oi-list" aria-hidden="true"></span> Expenses
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="myaccount">
                <span class="oi oi-person" aria-hidden="true"></span> My Account
            </NavLink>
        </div>
    </nav>
</div>

@code {
    Users user = new Users();
    Companies company = new Companies();
    bool isLoaded = false; // Track whether data has been loaded.

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // Check if it's the first render and the data is not loaded yet.
        if (firstRender && !isLoaded)
        {
            string uniqueIdentifier = await jsRuntime.InvokeAsync<string>("localStorage.getItem", "userUniqueIdentifier");
            user = userService.GetUser(uniqueIdentifier);
            if (user != null)
            {
                company = companiesService.GetCompany(user.CompanyId);
            }
            // Mark the data as loaded to prevent subsequent calls.
            isLoaded = true;

            // Re-render the component to update the UI with the loaded data.
            StateHasChanged();
        }
    }

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}