{"SerializedFilePath":"C:\\Users\\NatashaAbel\\source\\repos\\PassKey.Login.MongoDb\\PassKey.Login.MongoDb.Blazor.Server.UI\\obj\\Debug\\net6.0\\project.razor.vs.json","FilePath":"C:\\Users\\NatashaAbel\\source\\repos\\PassKey.Login.MongoDb\\PassKey.Login.MongoDb.Blazor.Server.UI\\PassKey.Login.MongoDb.Blazor.Server.UI.csproj","Configuration":{"ConfigurationName":"MVC-3.0","LanguageVersion":"6.0","Extensions":[{"ExtensionName":"MVC-3.0"}]},"ProjectWorkspaceState":{"TagHelpers":[{"HashCode":-625661428,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Components.ModalDialog","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ModalDialog"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"OnClose"}}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Components","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Components.ModalDialog","Common.TypeNameIdentifier":"ModalDialog"}},{"HashCode":536830914,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Components.ModalDialog","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PassKey.Login.MongoDb.Blazor.Server.UI.Components.ModalDialog"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"OnClose","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"OnClose"}}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Components.ModalDialog","Common.TypeNameIdentifier":"ModalDialog"}},{"HashCode":1204378196,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.MainLayout","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MainLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Body","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"Body"}}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.MainLayout","Common.TypeNameIdentifier":"MainLayout"}},{"HashCode":541066617,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.MainLayout","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.MainLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Body","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"Body"}}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.MainLayout","Common.TypeNameIdentifier":"MainLayout"}},{"HashCode":-1397910845,"Kind":"Components.ChildContent","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.MainLayout.Body","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Body","ParentTag":"MainLayout"}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.MainLayout.Body","Common.TypeNameIdentifier":"MainLayout"}},{"HashCode":735519491,"Kind":"Components.ChildContent","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.MainLayout.Body","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Body","ParentTag":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.MainLayout"}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.MainLayout.Body","Common.TypeNameIdentifier":"MainLayout"}},{"HashCode":1178982644,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.SurveyPrompt","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SurveyPrompt"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Title"}}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.SurveyPrompt","Common.TypeNameIdentifier":"SurveyPrompt"}},{"HashCode":-234616047,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.SurveyPrompt","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.SurveyPrompt"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Title"}}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.SurveyPrompt","Common.TypeNameIdentifier":"SurveyPrompt"}},{"HashCode":-290376832,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.EmptyLayout","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EmptyLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Body","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"Body"}}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.EmptyLayout","Common.TypeNameIdentifier":"EmptyLayout"}},{"HashCode":2066435601,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.EmptyLayout","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.EmptyLayout"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Body","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"Body"}}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.EmptyLayout","Common.TypeNameIdentifier":"EmptyLayout"}},{"HashCode":301426526,"Kind":"Components.ChildContent","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.EmptyLayout.Body","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Body","ParentTag":"EmptyLayout"}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.EmptyLayout.Body","Common.TypeNameIdentifier":"EmptyLayout"}},{"HashCode":2138448797,"Kind":"Components.ChildContent","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.EmptyLayout.Body","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\">\r\n            <summary>\r\n            Gets the content to be rendered inside the layout.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Body","ParentTag":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.EmptyLayout"}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.EmptyLayout.Body","Common.TypeNameIdentifier":"EmptyLayout"}},{"HashCode":569942831,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.NavMenu","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NavMenu"}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.NavMenu","Common.TypeNameIdentifier":"NavMenu"}},{"HashCode":25557478,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.NavMenu","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.NavMenu"}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Shared.NavMenu","Common.TypeNameIdentifier":"NavMenu"}},{"HashCode":529225120,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.Graph","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Graph"}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.Graph","Common.TypeNameIdentifier":"Graph"}},{"HashCode":2037715618,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.Graph","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.Graph"}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.Graph","Common.TypeNameIdentifier":"Graph"}},{"HashCode":1841284854,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.Payments","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Payments"}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.Payments","Common.TypeNameIdentifier":"Payments"}},{"HashCode":-1411655720,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.Payments","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.Payments"}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.Payments","Common.TypeNameIdentifier":"Payments"}},{"HashCode":1325547555,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.TimeSheets","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TimeSheets"}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.TimeSheets","Common.TypeNameIdentifier":"TimeSheets"}},{"HashCode":-1442481519,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.TimeSheets","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.TimeSheets"}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.TimeSheets","Common.TypeNameIdentifier":"TimeSheets"}},{"HashCode":2051070520,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.MyAccount","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"MyAccount"}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.MyAccount","Common.TypeNameIdentifier":"MyAccount"}},{"HashCode":-544042608,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.MyAccount","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.MyAccount"}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.MyAccount","Common.TypeNameIdentifier":"MyAccount"}},{"HashCode":-991707755,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.Expenses","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Expenses"}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.Expenses","Common.TypeNameIdentifier":"Expenses"}},{"HashCode":1414886622,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.Expenses","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.Expenses"}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.Expenses","Common.TypeNameIdentifier":"Expenses"}},{"HashCode":422193172,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.Home","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Home"}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.Home","Common.TypeNameIdentifier":"Home"}},{"HashCode":816801236,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.Home","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.Home"}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.NavPages.Home","Common.TypeNameIdentifier":"Home"}},{"HashCode":-854840486,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.Register","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Register"}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.Register","Common.TypeNameIdentifier":"Register"}},{"HashCode":-116542104,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.Register","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.Register"}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.Register","Common.TypeNameIdentifier":"Register"}},{"HashCode":445600977,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.Index","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Index"}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.Index","Common.TypeNameIdentifier":"Index"}},{"HashCode":1299465587,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.Index","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.Index"}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.Pages.Index","Common.TypeNameIdentifier":"Index"}},{"HashCode":2090938524,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.App","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"App"}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.App","Common.TypeNameIdentifier":"App"}},{"HashCode":139846762,"Kind":"Components.Component","Name":"PassKey.Login.MongoDb.Blazor.Server.UI.App","AssemblyName":"PassKey.Login.MongoDb.Blazor.Server.UI","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PassKey.Login.MongoDb.Blazor.Server.UI.App"}],"Metadata":{"Common.TypeNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"PassKey.Login.MongoDb.Blazor.Server.UI.App","Common.TypeNameIdentifier":"App"}},{"HashCode":-1892692494,"Kind":"Components.Component","Name":"ChartJs.Blazor.Chart","AssemblyName":"ChartJs.Blazor","Documentation":"<member name=\"T:ChartJs.Blazor.Chart\">\r\n            <summary>\r\n            Represents a Chart.js chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Chart"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"SetupCompletedCallback","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:ChartJs.Blazor.Chart.SetupCompletedCallback\">\r\n            <summary>\r\n            This event is fired when the chart has been setup through interop and\r\n            the JavaScript chart object is available. Use this callback if you need to setup\r\n            custom JavaScript options or register plugins.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Common.PropertyName":"SetupCompletedCallback"}},{"Kind":"Components.Component","Name":"Config","TypeName":"ChartJs.Blazor.Common.ConfigBase","Documentation":"<member name=\"P:ChartJs.Blazor.Chart.Config\">\r\n            <summary>\r\n            Gets or sets the configuration of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::ChartJs.Blazor.Common.ConfigBase","Common.PropertyName":"Config"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32?","Documentation":"<member name=\"P:ChartJs.Blazor.Chart.Width\">\r\n            <summary>\r\n            Gets or sets the width of the canvas HTML element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32?","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32?","Documentation":"<member name=\"P:ChartJs.Blazor.Chart.Height\">\r\n            <summary>\r\n            Gets or sets the height of the canvas HTML element. Use <see langword=\"null\" /> when using <see cref=\"P:ChartJs.Blazor.Common.BaseConfigOptions.AspectRatio\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32?","Common.PropertyName":"Height"}}],"Metadata":{"Common.TypeNamespace":"ChartJs.Blazor","Runtime.Name":"Components.IComponent","Common.TypeName":"ChartJs.Blazor.Chart","Common.TypeNameIdentifier":"Chart"}},{"HashCode":-1387220556,"Kind":"Components.Component","Name":"ChartJs.Blazor.Chart","AssemblyName":"ChartJs.Blazor","Documentation":"<member name=\"T:ChartJs.Blazor.Chart\">\r\n            <summary>\r\n            Represents a Chart.js chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartJs.Blazor.Chart"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"SetupCompletedCallback","TypeName":"Microsoft.AspNetCore.Components.EventCallback","Documentation":"<member name=\"P:ChartJs.Blazor.Chart.SetupCompletedCallback\">\r\n            <summary>\r\n            This event is fired when the chart has been setup through interop and\r\n            the JavaScript chart object is available. Use this callback if you need to setup\r\n            custom JavaScript options or register plugins.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback","Common.PropertyName":"SetupCompletedCallback"}},{"Kind":"Components.Component","Name":"Config","TypeName":"ChartJs.Blazor.Common.ConfigBase","Documentation":"<member name=\"P:ChartJs.Blazor.Chart.Config\">\r\n            <summary>\r\n            Gets or sets the configuration of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::ChartJs.Blazor.Common.ConfigBase","Common.PropertyName":"Config"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Int32?","Documentation":"<member name=\"P:ChartJs.Blazor.Chart.Width\">\r\n            <summary>\r\n            Gets or sets the width of the canvas HTML element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32?","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Int32?","Documentation":"<member name=\"P:ChartJs.Blazor.Chart.Height\">\r\n            <summary>\r\n            Gets or sets the height of the canvas HTML element. Use <see langword=\"null\" /> when using <see cref=\"P:ChartJs.Blazor.Common.BaseConfigOptions.AspectRatio\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32?","Common.PropertyName":"Height"}}],"Metadata":{"Common.TypeNamespace":"ChartJs.Blazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"ChartJs.Blazor.Chart","Common.TypeNameIdentifier":"Chart"}},{"HashCode":1872116856,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartBorder\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartBorder.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Width\">\r\n            <summary>\r\n            Sets and gets the the width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartBorder","Common.TypeNameIdentifier":"AccumulationChartBorder"}},{"HashCode":-1460660414,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartBorder\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartBorder.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Width\">\r\n            <summary>\r\n            Sets and gets the the width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartBorder","Common.TypeNameIdentifier":"AccumulationChartBorder"}},{"HashCode":1270522771,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartBorder.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartBorder.ChildContent","Common.TypeNameIdentifier":"AccumulationChartBorder"}},{"HashCode":185202331,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartBorder.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartBorder.ChildContent","Common.TypeNameIdentifier":"AccumulationChartBorder"}},{"HashCode":1289087306,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartCenter","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartCenter\">\r\n            <summary>\r\n            Gets and sets Center of the Accumulation chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartCenter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartCenter.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"X","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartCenter.X\">\r\n            <summary>\r\n            X value of the center.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartCenter.Y\">\r\n            <summary>\r\n            Y value of the center.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Y"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartCenter","Common.TypeNameIdentifier":"AccumulationChartCenter"}},{"HashCode":-491047905,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartCenter","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartCenter\">\r\n            <summary>\r\n            Gets and sets Center of the Accumulation chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartCenter"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartCenter.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"X","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartCenter.X\">\r\n            <summary>\r\n            X value of the center.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartCenter.Y\">\r\n            <summary>\r\n            Y value of the center.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Y"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartCenter","Common.TypeNameIdentifier":"AccumulationChartCenter"}},{"HashCode":-278918042,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartCenter.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartCenter.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartCenter"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartCenter.ChildContent","Common.TypeNameIdentifier":"AccumulationChartCenter"}},{"HashCode":1983341290,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartCenter.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartCenter.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartCenter"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartCenter.ChildContent","Common.TypeNameIdentifier":"AccumulationChartCenter"}},{"HashCode":-830767437,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartEvents","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartEvents\">\r\n            <summary>\r\n            Gets and sets the events for the accumulation chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnPrintComplete","TypeName":"System.Action","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEvents.OnPrintComplete\">\r\n            <summary>\r\n            Triggers after the print completed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnPrintComplete"}},{"Kind":"Components.Component","Name":"OnExportComplete","TypeName":"System.Action<Syncfusion.Blazor.Charts.ExportEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEvents.OnExportComplete\">\r\n            <summary>\r\n            Triggers after the print completed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.ExportEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnExportComplete"}},{"Kind":"Components.Component","Name":"SizeChanged","TypeName":"System.Action<Syncfusion.Blazor.Charts.AccumulationResizeEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEvents.SizeChanged\">\r\n            <summary>\r\n            Triggers after resizing of chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.AccumulationResizeEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"SizeChanged"}},{"Kind":"Components.Component","Name":"TooltipRender","TypeName":"System.Action<Syncfusion.Blazor.Charts.TooltipRenderEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEvents.TooltipRender\">\r\n            <summary>\r\n            Triggers before the tooltip for series is rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.TooltipRenderEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"TooltipRender"}},{"Kind":"Components.Component","Name":"OnDataLabelRender","TypeName":"System.Action<Syncfusion.Blazor.Charts.AccumulationTextRenderEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEvents.OnDataLabelRender\">\r\n            <summary>\r\n            Triggers before series getting renderred.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.AccumulationTextRenderEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnDataLabelRender"}},{"Kind":"Components.Component","Name":"OnPointRender","TypeName":"System.Action<Syncfusion.Blazor.Charts.AccumulationPointRenderEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEvents.OnPointRender\">\r\n            <summary>\r\n            Triggeres before the point rendering.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.AccumulationPointRenderEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnPointRender"}},{"Kind":"Components.Component","Name":"OnLegendItemRender","TypeName":"System.Action<Syncfusion.Blazor.Charts.AccumulationLegendRenderEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEvents.OnLegendItemRender\">\r\n            <summary>\r\n            Triggers before legend getting rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.AccumulationLegendRenderEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnLegendItemRender"}},{"Kind":"Components.Component","Name":"OnLegendClick","TypeName":"System.Action<Syncfusion.Blazor.Charts.AccumulationLegendClickEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEvents.OnLegendClick\">\r\n            <summary>\r\n            Triggers when the legend item is clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.AccumulationLegendClickEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnLegendClick"}},{"Kind":"Components.Component","Name":"OnPointClick","TypeName":"System.Action<Syncfusion.Blazor.Charts.AccumulationPointEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEvents.OnPointClick\">\r\n            <summary>\r\n            Triggers when the point click.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.AccumulationPointEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnPointClick"}},{"Kind":"Components.Component","Name":"OnSelectionChanged","TypeName":"System.Action<Syncfusion.Blazor.Charts.AccumulationSelectionCompleteEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEvents.OnSelectionChanged\">\r\n            <summary>\r\n            Triggers after the selection is completed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.AccumulationSelectionCompleteEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnSelectionChanged"}},{"Kind":"Components.Component","Name":"Loaded","TypeName":"System.Action<Syncfusion.Blazor.Charts.AccumulationLoadedEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEvents.Loaded\">\r\n            <summary>\r\n            Triggers when the chart render completed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.AccumulationLoadedEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"Loaded"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartEvents","Common.TypeNameIdentifier":"AccumulationChartEvents"}},{"HashCode":1594303612,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartEvents","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartEvents\">\r\n            <summary>\r\n            Gets and sets the events for the accumulation chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnPrintComplete","TypeName":"System.Action","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEvents.OnPrintComplete\">\r\n            <summary>\r\n            Triggers after the print completed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnPrintComplete"}},{"Kind":"Components.Component","Name":"OnExportComplete","TypeName":"System.Action<Syncfusion.Blazor.Charts.ExportEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEvents.OnExportComplete\">\r\n            <summary>\r\n            Triggers after the print completed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.ExportEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnExportComplete"}},{"Kind":"Components.Component","Name":"SizeChanged","TypeName":"System.Action<Syncfusion.Blazor.Charts.AccumulationResizeEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEvents.SizeChanged\">\r\n            <summary>\r\n            Triggers after resizing of chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.AccumulationResizeEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"SizeChanged"}},{"Kind":"Components.Component","Name":"TooltipRender","TypeName":"System.Action<Syncfusion.Blazor.Charts.TooltipRenderEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEvents.TooltipRender\">\r\n            <summary>\r\n            Triggers before the tooltip for series is rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.TooltipRenderEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"TooltipRender"}},{"Kind":"Components.Component","Name":"OnDataLabelRender","TypeName":"System.Action<Syncfusion.Blazor.Charts.AccumulationTextRenderEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEvents.OnDataLabelRender\">\r\n            <summary>\r\n            Triggers before series getting renderred.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.AccumulationTextRenderEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnDataLabelRender"}},{"Kind":"Components.Component","Name":"OnPointRender","TypeName":"System.Action<Syncfusion.Blazor.Charts.AccumulationPointRenderEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEvents.OnPointRender\">\r\n            <summary>\r\n            Triggeres before the point rendering.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.AccumulationPointRenderEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnPointRender"}},{"Kind":"Components.Component","Name":"OnLegendItemRender","TypeName":"System.Action<Syncfusion.Blazor.Charts.AccumulationLegendRenderEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEvents.OnLegendItemRender\">\r\n            <summary>\r\n            Triggers before legend getting rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.AccumulationLegendRenderEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnLegendItemRender"}},{"Kind":"Components.Component","Name":"OnLegendClick","TypeName":"System.Action<Syncfusion.Blazor.Charts.AccumulationLegendClickEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEvents.OnLegendClick\">\r\n            <summary>\r\n            Triggers when the legend item is clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.AccumulationLegendClickEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnLegendClick"}},{"Kind":"Components.Component","Name":"OnPointClick","TypeName":"System.Action<Syncfusion.Blazor.Charts.AccumulationPointEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEvents.OnPointClick\">\r\n            <summary>\r\n            Triggers when the point click.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.AccumulationPointEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnPointClick"}},{"Kind":"Components.Component","Name":"OnSelectionChanged","TypeName":"System.Action<Syncfusion.Blazor.Charts.AccumulationSelectionCompleteEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEvents.OnSelectionChanged\">\r\n            <summary>\r\n            Triggers after the selection is completed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.AccumulationSelectionCompleteEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnSelectionChanged"}},{"Kind":"Components.Component","Name":"Loaded","TypeName":"System.Action<Syncfusion.Blazor.Charts.AccumulationLoadedEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEvents.Loaded\">\r\n            <summary>\r\n            Triggers when the chart render completed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.AccumulationLoadedEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"Loaded"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartEvents","Common.TypeNameIdentifier":"AccumulationChartEvents"}},{"HashCode":570112898,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartMargin","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartMargin\">\r\n            <summary>\r\n            Gets and sets the margin of the Accumulation chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartMargin"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartMargin.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Bottom","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin.Bottom\">\r\n            <summary>\r\n            Sets and gets the bottom margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Bottom"}},{"Kind":"Components.Component","Name":"Left","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin.Left\">\r\n            <summary>\r\n            Sets and gets the left margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Left"}},{"Kind":"Components.Component","Name":"Right","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin.Right\">\r\n            <summary>\r\n            Sets and gets the right margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Right"}},{"Kind":"Components.Component","Name":"Top","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin.Top\">\r\n            <summary>\r\n            Sets and gets the top margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Top"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartMargin","Common.TypeNameIdentifier":"AccumulationChartMargin"}},{"HashCode":1375285404,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartMargin","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartMargin\">\r\n            <summary>\r\n            Gets and sets the margin of the Accumulation chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartMargin"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartMargin.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Bottom","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin.Bottom\">\r\n            <summary>\r\n            Sets and gets the bottom margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Bottom"}},{"Kind":"Components.Component","Name":"Left","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin.Left\">\r\n            <summary>\r\n            Sets and gets the left margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Left"}},{"Kind":"Components.Component","Name":"Right","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin.Right\">\r\n            <summary>\r\n            Sets and gets the right margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Right"}},{"Kind":"Components.Component","Name":"Top","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin.Top\">\r\n            <summary>\r\n            Sets and gets the top margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Top"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartMargin","Common.TypeNameIdentifier":"AccumulationChartMargin"}},{"HashCode":1349548261,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartMargin.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartMargin.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartMargin"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartMargin.ChildContent","Common.TypeNameIdentifier":"AccumulationChartMargin"}},{"HashCode":-749165517,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartMargin.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartMargin.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartMargin"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartMargin.ChildContent","Common.TypeNameIdentifier":"AccumulationChartMargin"}},{"HashCode":-720090555,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex\">\r\n            <summary>\r\n            SelectedData in the accumulation chart appears inimitable from the rest of the data points.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartSelectedDataIndex"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Series","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonSelectedData.Series\">\r\n            <summary>\r\n            Sets and gets the series index for the seleceted data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Series"}},{"Kind":"Components.Component","Name":"Point","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonSelectedData.Point\">\r\n            <summary>\r\n            Sets and gets the point index for the seleceted data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Point"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex","Common.TypeNameIdentifier":"AccumulationChartSelectedDataIndex"}},{"HashCode":-419006235,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex\">\r\n            <summary>\r\n            SelectedData in the accumulation chart appears inimitable from the rest of the data points.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Series","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonSelectedData.Series\">\r\n            <summary>\r\n            Sets and gets the series index for the seleceted data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Series"}},{"Kind":"Components.Component","Name":"Point","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonSelectedData.Point\">\r\n            <summary>\r\n            Sets and gets the point index for the seleceted data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Point"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex","Common.TypeNameIdentifier":"AccumulationChartSelectedDataIndex"}},{"HashCode":-1592809944,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartSelectedDataIndex"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex.ChildContent","Common.TypeNameIdentifier":"AccumulationChartSelectedDataIndex"}},{"HashCode":-241103040,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndex.ChildContent","Common.TypeNameIdentifier":"AccumulationChartSelectedDataIndex"}},{"HashCode":-851274913,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes\">\r\n            <summary>\r\n            SelectedData in the accumulation chart appears inimitable from the rest of the data points.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartSelectedDataIndexes"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes","Common.TypeNameIdentifier":"AccumulationChartSelectedDataIndexes"}},{"HashCode":-752261036,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes\">\r\n            <summary>\r\n            SelectedData in the accumulation chart appears inimitable from the rest of the data points.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes","Common.TypeNameIdentifier":"AccumulationChartSelectedDataIndexes"}},{"HashCode":-527916351,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartSelectedDataIndexes"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes.ChildContent","Common.TypeNameIdentifier":"AccumulationChartSelectedDataIndexes"}},{"HashCode":1347317480,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSelectedDataIndexes.ChildContent","Common.TypeNameIdentifier":"AccumulationChartSelectedDataIndexes"}},{"HashCode":1067525814,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle\">\r\n            <summary>\r\n            Gets and sets the configurartion of the subTitle style in the Accumulation chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartSubTitleStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle.Size\">\r\n            <summary>\r\n            Unique size of the axis labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle.FontFamily\">\r\n            <summary>\r\n            FontFamily for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle.FontWeight\">\r\n            <summary>\r\n            FontFamily for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Color\">\r\n            <summary>\r\n            Sets and gets the color for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle","Common.TypeNameIdentifier":"AccumulationChartSubTitleStyle"}},{"HashCode":1944036171,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle\">\r\n            <summary>\r\n            Gets and sets the configurartion of the subTitle style in the Accumulation chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle.Size\">\r\n            <summary>\r\n            Unique size of the axis labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle.FontFamily\">\r\n            <summary>\r\n            FontFamily for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle.FontWeight\">\r\n            <summary>\r\n            FontFamily for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Color\">\r\n            <summary>\r\n            Sets and gets the color for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle","Common.TypeNameIdentifier":"AccumulationChartSubTitleStyle"}},{"HashCode":1693395013,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartSubTitleStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle.ChildContent","Common.TypeNameIdentifier":"AccumulationChartSubTitleStyle"}},{"HashCode":1573905337,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSubTitleStyle.ChildContent","Common.TypeNameIdentifier":"AccumulationChartSubTitleStyle"}},{"HashCode":-122513801,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartTitleStyle","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartTitleStyle\">\r\n            <summary>\r\n            Gets and sets the configurartion of the title style in the Accumulation chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartTitleStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTitleStyle.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTitleStyle.Size\">\r\n            <summary>\r\n            Unique size of the axis labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTitleStyle.FontFamily\">\r\n            <summary>\r\n            FontFamily for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTitleStyle.FontWeight\">\r\n            <summary>\r\n            FontFamily for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Color\">\r\n            <summary>\r\n            Sets and gets the color for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartTitleStyle","Common.TypeNameIdentifier":"AccumulationChartTitleStyle"}},{"HashCode":-171083128,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartTitleStyle","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartTitleStyle\">\r\n            <summary>\r\n            Gets and sets the configurartion of the title style in the Accumulation chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartTitleStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTitleStyle.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTitleStyle.Size\">\r\n            <summary>\r\n            Unique size of the axis labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTitleStyle.FontFamily\">\r\n            <summary>\r\n            FontFamily for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTitleStyle.FontWeight\">\r\n            <summary>\r\n            FontFamily for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Color\">\r\n            <summary>\r\n            Sets and gets the color for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartTitleStyle","Common.TypeNameIdentifier":"AccumulationChartTitleStyle"}},{"HashCode":533496906,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartTitleStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTitleStyle.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartTitleStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartTitleStyle.ChildContent","Common.TypeNameIdentifier":"AccumulationChartTitleStyle"}},{"HashCode":-670069317,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartTitleStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTitleStyle.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartTitleStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartTitleStyle.ChildContent","Common.TypeNameIdentifier":"AccumulationChartTitleStyle"}},{"HashCode":-2494904,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartAnnotation","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartAnnotation\">\r\n            <summary>\r\n            Annotation is a user defined HTML element that can be placed on chart\r\n            We can use annotations to pile up the visual elegance of the chart.\r\n            Specifies the customization of annotation.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartAnnotation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnnotation.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ContentTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnnotation.ContentTemplate\">\r\n            <summary>\r\n            Gets and sets the Template content of this annotation.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ContentTemplate"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnnotation.Content\">\r\n            <summary>\r\n            Content of the annotation, which accepts the id of the custom element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CoordinateUnits","TypeName":"Syncfusion.Blazor.Charts.Units","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnnotation.CoordinateUnits\">\r\n            <summary>\r\n            Specifies the coordinate units of the annotation. They are\r\n            Pixel - Annotation renders based on x and y pixel value.\r\n            Point - Annotation renders based on x and y axis value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Units","Common.PropertyName":"CoordinateUnits"}},{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnnotation.Description\">\r\n            <summary>\r\n            Information about annotation for assistive technology.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Description"}},{"Kind":"Components.Component","Name":"Region","TypeName":"Syncfusion.Blazor.Charts.Regions","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnnotation.Region\">\r\n            <summary>\r\n            Specifies the regions of the annotation. They are\r\n            Chart - Annotation renders based on chart coordinates.\r\n            Series - Annotation renders based on series coordinates.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Regions","Common.PropertyName":"Region"}},{"Kind":"Components.Component","Name":"X","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnnotation.X\">\r\n            <summary>\r\n            if set coordinateUnit as `Pixel` X specifies the axis value\r\n            else is specifies pixel or percentage of coordinate.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnnotation.Y\">\r\n            <summary>\r\n            if set coordinateUnit as `Pixel` Y specifies the axis value\r\n            else is specifies pixel or percentage of coordinate.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Y"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartAnnotation","Common.TypeNameIdentifier":"AccumulationChartAnnotation"}},{"HashCode":-253863864,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartAnnotation","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartAnnotation\">\r\n            <summary>\r\n            Annotation is a user defined HTML element that can be placed on chart\r\n            We can use annotations to pile up the visual elegance of the chart.\r\n            Specifies the customization of annotation.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartAnnotation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnnotation.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ContentTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnnotation.ContentTemplate\">\r\n            <summary>\r\n            Gets and sets the Template content of this annotation.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ContentTemplate"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnnotation.Content\">\r\n            <summary>\r\n            Content of the annotation, which accepts the id of the custom element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Content"}},{"Kind":"Components.Component","Name":"CoordinateUnits","TypeName":"Syncfusion.Blazor.Charts.Units","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnnotation.CoordinateUnits\">\r\n            <summary>\r\n            Specifies the coordinate units of the annotation. They are\r\n            Pixel - Annotation renders based on x and y pixel value.\r\n            Point - Annotation renders based on x and y axis value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Units","Common.PropertyName":"CoordinateUnits"}},{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnnotation.Description\">\r\n            <summary>\r\n            Information about annotation for assistive technology.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Description"}},{"Kind":"Components.Component","Name":"Region","TypeName":"Syncfusion.Blazor.Charts.Regions","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnnotation.Region\">\r\n            <summary>\r\n            Specifies the regions of the annotation. They are\r\n            Chart - Annotation renders based on chart coordinates.\r\n            Series - Annotation renders based on series coordinates.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Regions","Common.PropertyName":"Region"}},{"Kind":"Components.Component","Name":"X","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnnotation.X\">\r\n            <summary>\r\n            if set coordinateUnit as `Pixel` X specifies the axis value\r\n            else is specifies pixel or percentage of coordinate.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnnotation.Y\">\r\n            <summary>\r\n            if set coordinateUnit as `Pixel` Y specifies the axis value\r\n            else is specifies pixel or percentage of coordinate.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Y"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartAnnotation","Common.TypeNameIdentifier":"AccumulationChartAnnotation"}},{"HashCode":-892294274,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartAnnotation.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnnotation.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartAnnotation"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartAnnotation.ChildContent","Common.TypeNameIdentifier":"AccumulationChartAnnotation"}},{"HashCode":-2104171952,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartAnnotation.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnnotation.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartAnnotation"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartAnnotation.ChildContent","Common.TypeNameIdentifier":"AccumulationChartAnnotation"}},{"HashCode":-1733693939,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartAnnotation.ContentTemplate","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnnotation.ContentTemplate\">\r\n            <summary>\r\n            Gets and sets the Template content of this annotation.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ContentTemplate","ParentTag":"AccumulationChartAnnotation"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartAnnotation.ContentTemplate","Common.TypeNameIdentifier":"AccumulationChartAnnotation"}},{"HashCode":985792553,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartAnnotation.ContentTemplate","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnnotation.ContentTemplate\">\r\n            <summary>\r\n            Gets and sets the Template content of this annotation.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ContentTemplate","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartAnnotation"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartAnnotation.ContentTemplate","Common.TypeNameIdentifier":"AccumulationChartAnnotation"}},{"HashCode":715981249,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartAnnotations","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartAnnotations\">\r\n            <summary>\r\n            Annotations are user defined HTML element that can be placed on chart\r\n            We can use annotations to pile up the visual elegance of the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartAnnotations"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnnotations.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartAnnotations","Common.TypeNameIdentifier":"AccumulationChartAnnotations"}},{"HashCode":-686129092,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartAnnotations","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartAnnotations\">\r\n            <summary>\r\n            Annotations are user defined HTML element that can be placed on chart\r\n            We can use annotations to pile up the visual elegance of the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartAnnotations"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnnotations.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartAnnotations","Common.TypeNameIdentifier":"AccumulationChartAnnotations"}},{"HashCode":-1113454766,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartAnnotations.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnnotations.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartAnnotations"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartAnnotations.ChildContent","Common.TypeNameIdentifier":"AccumulationChartAnnotations"}},{"HashCode":-278532359,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartAnnotations.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnnotations.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartAnnotations"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartAnnotations.ChildContent","Common.TypeNameIdentifier":"AccumulationChartAnnotations"}},{"HashCode":-861905855,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartLegendBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartLegendBorder\">\r\n            <summary>\r\n            Gets and sets the border for that Accumulation Chart's legend.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartLegendBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendBorder.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Width\">\r\n            <summary>\r\n            Sets and gets the the width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendBorder","Common.TypeNameIdentifier":"AccumulationChartLegendBorder"}},{"HashCode":1351917193,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartLegendBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartLegendBorder\">\r\n            <summary>\r\n            Gets and sets the border for that Accumulation Chart's legend.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartLegendBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendBorder.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Width\">\r\n            <summary>\r\n            Sets and gets the the width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendBorder","Common.TypeNameIdentifier":"AccumulationChartLegendBorder"}},{"HashCode":678234699,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartLegendBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendBorder.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartLegendBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendBorder.ChildContent","Common.TypeNameIdentifier":"AccumulationChartLegendBorder"}},{"HashCode":1501815329,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartLegendBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendBorder.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartLegendBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendBorder.ChildContent","Common.TypeNameIdentifier":"AccumulationChartLegendBorder"}},{"HashCode":-1311253410,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartLegendFont","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartLegendFont\">\r\n            <summary>\r\n            Gets and sets the text style of the accumulation chart's texts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartLegendFont"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendFont.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendFont.Size\">\r\n            <summary>\r\n            Unique size of the axis labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendFont.FontFamily\">\r\n            <summary>\r\n            Unique font family of the legend text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendFont.FontWeight\">\r\n            <summary>\r\n            Unique font weight of the legend text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendFont.Color\">\r\n            <summary>\r\n            Unique font color of the legend text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendFont","Common.TypeNameIdentifier":"AccumulationChartLegendFont"}},{"HashCode":-555768719,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartLegendFont","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartLegendFont\">\r\n            <summary>\r\n            Gets and sets the text style of the accumulation chart's texts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartLegendFont"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendFont.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendFont.Size\">\r\n            <summary>\r\n            Unique size of the axis labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendFont.FontFamily\">\r\n            <summary>\r\n            Unique font family of the legend text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendFont.FontWeight\">\r\n            <summary>\r\n            Unique font weight of the legend text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendFont.Color\">\r\n            <summary>\r\n            Unique font color of the legend text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendFont","Common.TypeNameIdentifier":"AccumulationChartLegendFont"}},{"HashCode":-1911714279,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartLegendFont.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendFont.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartLegendFont"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendFont.ChildContent","Common.TypeNameIdentifier":"AccumulationChartLegendFont"}},{"HashCode":-1995024593,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartLegendFont.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendFont.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartLegendFont"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendFont.ChildContent","Common.TypeNameIdentifier":"AccumulationChartLegendFont"}},{"HashCode":-779698569,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartLegendMargin","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartLegendMargin\">\r\n            <summary>\r\n            Gets and set the margin for the Accumulation chart's margin.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartLegendMargin"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendMargin.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Bottom","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin.Bottom\">\r\n            <summary>\r\n            Sets and gets the bottom margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Bottom"}},{"Kind":"Components.Component","Name":"Left","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin.Left\">\r\n            <summary>\r\n            Sets and gets the left margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Left"}},{"Kind":"Components.Component","Name":"Right","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin.Right\">\r\n            <summary>\r\n            Sets and gets the right margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Right"}},{"Kind":"Components.Component","Name":"Top","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin.Top\">\r\n            <summary>\r\n            Sets and gets the top margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Top"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendMargin","Common.TypeNameIdentifier":"AccumulationChartLegendMargin"}},{"HashCode":11486312,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartLegendMargin","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartLegendMargin\">\r\n            <summary>\r\n            Gets and set the margin for the Accumulation chart's margin.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartLegendMargin"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendMargin.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Bottom","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin.Bottom\">\r\n            <summary>\r\n            Sets and gets the bottom margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Bottom"}},{"Kind":"Components.Component","Name":"Left","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin.Left\">\r\n            <summary>\r\n            Sets and gets the left margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Left"}},{"Kind":"Components.Component","Name":"Right","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin.Right\">\r\n            <summary>\r\n            Sets and gets the right margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Right"}},{"Kind":"Components.Component","Name":"Top","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin.Top\">\r\n            <summary>\r\n            Sets and gets the top margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Top"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendMargin","Common.TypeNameIdentifier":"AccumulationChartLegendMargin"}},{"HashCode":1362927518,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartLegendMargin.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendMargin.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartLegendMargin"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendMargin.ChildContent","Common.TypeNameIdentifier":"AccumulationChartLegendMargin"}},{"HashCode":1484730434,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartLegendMargin.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendMargin.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartLegendMargin"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendMargin.ChildContent","Common.TypeNameIdentifier":"AccumulationChartLegendMargin"}},{"HashCode":-980734519,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettings\">\r\n            <summary>\r\n            The option to customize the paging elements for arrow size and font styles for the paging number texts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartLegendPageSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettings.ChildContent\">\r\n            <summary>\r\n            Sets and gets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ArrowSize","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettings.ArrowSize\">\r\n            <summary>\r\n            Gets and sets the size of the legend paging arrows.\r\n            </summary>\r\n            <value>\r\n            Accepts a double value that specifies the size of the legend paging arrow. The default value is <b>13</b>.\r\n            </value> \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ArrowSize"}},{"Kind":"Components.Component","Name":"TextStyle","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettingsTextStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettings.TextStyle\">\r\n            <summary>\r\n            Gets and sets the font styles for the paging text.\r\n            </summary>\r\n            <value>\r\n            Accepts the instance of <see cref=\"T:Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettingsTextStyle\" /> value that specifies the styles for legend paging text.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettingsTextStyle","Common.PropertyName":"TextStyle"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettings","Common.TypeNameIdentifier":"AccumulationChartLegendPageSettings"}},{"HashCode":-2068405755,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettings\">\r\n            <summary>\r\n            The option to customize the paging elements for arrow size and font styles for the paging number texts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettings.ChildContent\">\r\n            <summary>\r\n            Sets and gets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ArrowSize","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettings.ArrowSize\">\r\n            <summary>\r\n            Gets and sets the size of the legend paging arrows.\r\n            </summary>\r\n            <value>\r\n            Accepts a double value that specifies the size of the legend paging arrow. The default value is <b>13</b>.\r\n            </value> \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ArrowSize"}},{"Kind":"Components.Component","Name":"TextStyle","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettingsTextStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettings.TextStyle\">\r\n            <summary>\r\n            Gets and sets the font styles for the paging text.\r\n            </summary>\r\n            <value>\r\n            Accepts the instance of <see cref=\"T:Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettingsTextStyle\" /> value that specifies the styles for legend paging text.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettingsTextStyle","Common.PropertyName":"TextStyle"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettings","Common.TypeNameIdentifier":"AccumulationChartLegendPageSettings"}},{"HashCode":1844994950,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettings.ChildContent\">\r\n            <summary>\r\n            Sets and gets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartLegendPageSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettings.ChildContent","Common.TypeNameIdentifier":"AccumulationChartLegendPageSettings"}},{"HashCode":-969619536,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettings.ChildContent\">\r\n            <summary>\r\n            Sets and gets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettings.ChildContent","Common.TypeNameIdentifier":"AccumulationChartLegendPageSettings"}},{"HashCode":1474755296,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettingsTextStyle","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettingsTextStyle\">\r\n            <summary>\r\n            Gets and sets the text style of the accumulation chart legend paging texts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartLegendPageSettingsTextStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettingsTextStyle.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettingsTextStyle.Size\">\r\n            <summary>\r\n            Unique size of the paging texts.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Color\">\r\n            <summary>\r\n            Sets and gets the color for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.FontFamily\">\r\n            <summary>\r\n            Sets and gets the font family for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.FontWeight\">\r\n            <summary>\r\n            Sets and gets the font weight for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettingsTextStyle","Common.TypeNameIdentifier":"AccumulationChartLegendPageSettingsTextStyle"}},{"HashCode":-1963559613,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettingsTextStyle","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettingsTextStyle\">\r\n            <summary>\r\n            Gets and sets the text style of the accumulation chart legend paging texts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettingsTextStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettingsTextStyle.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettingsTextStyle.Size\">\r\n            <summary>\r\n            Unique size of the paging texts.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Color\">\r\n            <summary>\r\n            Sets and gets the color for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.FontFamily\">\r\n            <summary>\r\n            Sets and gets the font family for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.FontWeight\">\r\n            <summary>\r\n            Sets and gets the font weight for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettingsTextStyle","Common.TypeNameIdentifier":"AccumulationChartLegendPageSettingsTextStyle"}},{"HashCode":1413390352,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettingsTextStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettingsTextStyle.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartLegendPageSettingsTextStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettingsTextStyle.ChildContent","Common.TypeNameIdentifier":"AccumulationChartLegendPageSettingsTextStyle"}},{"HashCode":1227667834,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettingsTextStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettingsTextStyle.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettingsTextStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettingsTextStyle.ChildContent","Common.TypeNameIdentifier":"AccumulationChartLegendPageSettingsTextStyle"}},{"HashCode":-1259009489,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartLegendSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings\">\r\n            <summary>\r\n            Legend is used to help readers understand the plotted data.\r\n            The chart legend shows information about the datasets that are appearing on the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartLegendSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.ChildContent\">\r\n            <summary>\r\n            Sets and gets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Alignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Alignment\">\r\n            <summary>\r\n            Legend in chart can be aligned as follows:\r\n             Near: Aligns the legend to the left of the chart.\r\n             Center: Aligns the legend to the center of the chart.\r\n             Far: Aligns the legend to the right of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"Alignment"}},{"Kind":"Components.Component","Name":"Background","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Background\">\r\n            <summary>\r\n            The background color of the legend that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Border\">\r\n            <summary>\r\n            Options to customize the border of the legend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartLegendBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Description\">\r\n            <summary>\r\n            Description for legends.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Description"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Height\">\r\n            <summary>\r\n            The height of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Location","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLocation","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Location\">\r\n            <summary>\r\n            Specifies the location of the legend, relative to the chart.\r\n            If x is 20, legend moves by 20 pixels to the right of the chart. It requires the `Position` to be `Custom`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartLocation","Common.PropertyName":"Location"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendMargin","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Margin\">\r\n            <summary>\r\n             Options to customize left, right, top and bottom margins of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartLegendMargin","Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Opacity\">\r\n            <summary>\r\n            Opacity of the legend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Padding\">\r\n            <summary>\r\n            Option to customize the padding around legend items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"ItemPadding","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.ItemPadding\">\r\n            <summary>\r\n            Option to customize the padding between legend items.\r\n            Applicable for top and bottom legend position only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ItemPadding"}},{"Kind":"Components.Component","Name":"Position","TypeName":"Syncfusion.Blazor.Charts.LegendPosition","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Position\">\r\n            <summary>\r\n            Position of the legend in the chart are,\r\n            Auto: Places the legend based on area type.\r\n            Top: Displays the legend at the top of the chart.\r\n            Left: Displays the legend at the left of the chart.\r\n            Bottom: Displays the legend at the bottom of the chart.\r\n            Right: Displays the legend at the right of the chart.\r\n            Custom: Displays the legend  based on the given x and y value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LegendPosition","Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"ShapeHeight","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.ShapeHeight\">\r\n            <summary>\r\n            Shape height of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ShapeHeight"}},{"Kind":"Components.Component","Name":"ShapePadding","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.ShapePadding\">\r\n            <summary>\r\n            Padding between the legend shape and text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ShapePadding"}},{"Kind":"Components.Component","Name":"ShapeWidth","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.ShapeWidth\">\r\n            <summary>\r\n            Shape width of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ShapeWidth"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.TabIndex\">\r\n            <summary>\r\n            TabIndex legendItem for the legend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TextStyle","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendFont","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.TextStyle\">\r\n            <summary>\r\n            Options to customize the legend text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartLegendFont","Common.PropertyName":"TextStyle"}},{"Kind":"Components.Component","Name":"ToggleVisibility","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.ToggleVisibility\">\r\n            <summary>\r\n            If set to true, series' visibility collapses based on the legend visibility.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ToggleVisibility"}},{"Kind":"Components.Component","Name":"EnableHighlight","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.EnableHighlight\">\r\n            <summary>\r\n            Enabling highlight for legend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableHighlight"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Visible\">\r\n            <summary>\r\n            If set to true, legend will be visible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Width\">\r\n            <summary>\r\n            The width of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"IsInversed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.IsInversed\">\r\n            <summary>\r\n            Gets or sets whether to inverse legend item content (image and text).\r\n            </summary>\r\n            <value> \r\n            true if the legend should be inversed; otherwise, false. \r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsInversed"}},{"Kind":"Components.Component","Name":"Reverse","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Reverse\">\r\n            <summary>\r\n            Gets or sets whether to reverse the legend items order.\r\n            </summary>\r\n            <value> \r\n            true if the legend should be reverse; otherwise, false. \r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Reverse"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.LabelOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.TextOverflow\">\r\n            <summary> \r\n             Gets and sets the text overflow behavior to employ when the individual legend text overflowing the legend bounds or \r\n             <see cref=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.MaximumLabelWidth\"> MaximumLabelWidth </see> \r\n            </summary> \r\n            <value> \r\n             One of the <see cref=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.TextOverflow\" /> enumeration.The default value is <see cref=\"F:Syncfusion.Blazor.LabelOverflow.Ellipse\" /> \r\n            </value> \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.LabelOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"TextWrap","TypeName":"Syncfusion.Blazor.TextWrap","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.TextWrap\">\r\n            <summary> \r\n             Gets and sets the text wrap behavior to employ when the individual legend text overflowing the legend bounds or <see cref=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.MaximumLabelWidth\"> MaximumLabelWidth </see> \r\n            </summary> \r\n            <value> \r\n             One of the <see cref=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.TextWrap\" /> enumeration. The default value is <see cref=\"F:Syncfusion.Blazor.TextWrap.Normal\" /> \r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.TextWrap","Common.PropertyName":"TextWrap"}},{"Kind":"Components.Component","Name":"MaximumLabelWidth","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.MaximumLabelWidth\">\r\n            <summary> \r\n             Gets and sets the maximum width of the individual legend item after which they get trimmed, wrapped or clipped. \r\n            </summary> \r\n            <value> \r\n             Specifies the maximum width for the legend text. The default value is <c>null</c>. \r\n            </value> \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MaximumLabelWidth"}},{"Kind":"Components.Component","Name":"PageSettings","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettings","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.PageSettings\">\r\n            <summary> \r\n            Gets and sets the option to customize the legend arrow size and font styles for paging number texts.\r\n            </summary>\r\n            <value>\r\n            Accept the instance of the <see cref=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.PageSettings\" /> value that specifies the customization options for paging elements in the legend.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettings","Common.PropertyName":"PageSettings"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendSettings","Common.TypeNameIdentifier":"AccumulationChartLegendSettings"}},{"HashCode":-937560918,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartLegendSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings\">\r\n            <summary>\r\n            Legend is used to help readers understand the plotted data.\r\n            The chart legend shows information about the datasets that are appearing on the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartLegendSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.ChildContent\">\r\n            <summary>\r\n            Sets and gets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Alignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Alignment\">\r\n            <summary>\r\n            Legend in chart can be aligned as follows:\r\n             Near: Aligns the legend to the left of the chart.\r\n             Center: Aligns the legend to the center of the chart.\r\n             Far: Aligns the legend to the right of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"Alignment"}},{"Kind":"Components.Component","Name":"Background","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Background\">\r\n            <summary>\r\n            The background color of the legend that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Border\">\r\n            <summary>\r\n            Options to customize the border of the legend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartLegendBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Description\">\r\n            <summary>\r\n            Description for legends.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Description"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Height\">\r\n            <summary>\r\n            The height of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Location","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLocation","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Location\">\r\n            <summary>\r\n            Specifies the location of the legend, relative to the chart.\r\n            If x is 20, legend moves by 20 pixels to the right of the chart. It requires the `Position` to be `Custom`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartLocation","Common.PropertyName":"Location"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendMargin","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Margin\">\r\n            <summary>\r\n             Options to customize left, right, top and bottom margins of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartLegendMargin","Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Opacity\">\r\n            <summary>\r\n            Opacity of the legend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Padding\">\r\n            <summary>\r\n            Option to customize the padding around legend items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"ItemPadding","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.ItemPadding\">\r\n            <summary>\r\n            Option to customize the padding between legend items.\r\n            Applicable for top and bottom legend position only.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ItemPadding"}},{"Kind":"Components.Component","Name":"Position","TypeName":"Syncfusion.Blazor.Charts.LegendPosition","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Position\">\r\n            <summary>\r\n            Position of the legend in the chart are,\r\n            Auto: Places the legend based on area type.\r\n            Top: Displays the legend at the top of the chart.\r\n            Left: Displays the legend at the left of the chart.\r\n            Bottom: Displays the legend at the bottom of the chart.\r\n            Right: Displays the legend at the right of the chart.\r\n            Custom: Displays the legend  based on the given x and y value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LegendPosition","Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"ShapeHeight","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.ShapeHeight\">\r\n            <summary>\r\n            Shape height of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ShapeHeight"}},{"Kind":"Components.Component","Name":"ShapePadding","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.ShapePadding\">\r\n            <summary>\r\n            Padding between the legend shape and text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ShapePadding"}},{"Kind":"Components.Component","Name":"ShapeWidth","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.ShapeWidth\">\r\n            <summary>\r\n            Shape width of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ShapeWidth"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.TabIndex\">\r\n            <summary>\r\n            TabIndex legendItem for the legend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TextStyle","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendFont","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.TextStyle\">\r\n            <summary>\r\n            Options to customize the legend text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartLegendFont","Common.PropertyName":"TextStyle"}},{"Kind":"Components.Component","Name":"ToggleVisibility","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.ToggleVisibility\">\r\n            <summary>\r\n            If set to true, series' visibility collapses based on the legend visibility.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ToggleVisibility"}},{"Kind":"Components.Component","Name":"EnableHighlight","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.EnableHighlight\">\r\n            <summary>\r\n            Enabling highlight for legend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableHighlight"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Visible\">\r\n            <summary>\r\n            If set to true, legend will be visible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Width\">\r\n            <summary>\r\n            The width of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"IsInversed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.IsInversed\">\r\n            <summary>\r\n            Gets or sets whether to inverse legend item content (image and text).\r\n            </summary>\r\n            <value> \r\n            true if the legend should be inversed; otherwise, false. \r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsInversed"}},{"Kind":"Components.Component","Name":"Reverse","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.Reverse\">\r\n            <summary>\r\n            Gets or sets whether to reverse the legend items order.\r\n            </summary>\r\n            <value> \r\n            true if the legend should be reverse; otherwise, false. \r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Reverse"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.LabelOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.TextOverflow\">\r\n            <summary> \r\n             Gets and sets the text overflow behavior to employ when the individual legend text overflowing the legend bounds or \r\n             <see cref=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.MaximumLabelWidth\"> MaximumLabelWidth </see> \r\n            </summary> \r\n            <value> \r\n             One of the <see cref=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.TextOverflow\" /> enumeration.The default value is <see cref=\"F:Syncfusion.Blazor.LabelOverflow.Ellipse\" /> \r\n            </value> \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.LabelOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"TextWrap","TypeName":"Syncfusion.Blazor.TextWrap","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.TextWrap\">\r\n            <summary> \r\n             Gets and sets the text wrap behavior to employ when the individual legend text overflowing the legend bounds or <see cref=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.MaximumLabelWidth\"> MaximumLabelWidth </see> \r\n            </summary> \r\n            <value> \r\n             One of the <see cref=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.TextWrap\" /> enumeration. The default value is <see cref=\"F:Syncfusion.Blazor.TextWrap.Normal\" /> \r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.TextWrap","Common.PropertyName":"TextWrap"}},{"Kind":"Components.Component","Name":"MaximumLabelWidth","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.MaximumLabelWidth\">\r\n            <summary> \r\n             Gets and sets the maximum width of the individual legend item after which they get trimmed, wrapped or clipped. \r\n            </summary> \r\n            <value> \r\n             Specifies the maximum width for the legend text. The default value is <c>null</c>. \r\n            </value> \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MaximumLabelWidth"}},{"Kind":"Components.Component","Name":"PageSettings","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettings","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.PageSettings\">\r\n            <summary> \r\n            Gets and sets the option to customize the legend arrow size and font styles for paging number texts.\r\n            </summary>\r\n            <value>\r\n            Accept the instance of the <see cref=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.PageSettings\" /> value that specifies the customization options for paging elements in the legend.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartLegendPageSettings","Common.PropertyName":"PageSettings"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendSettings","Common.TypeNameIdentifier":"AccumulationChartLegendSettings"}},{"HashCode":-723376608,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.ChildContent\">\r\n            <summary>\r\n            Sets and gets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartLegendSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.ChildContent","Common.TypeNameIdentifier":"AccumulationChartLegendSettings"}},{"HashCode":2074323361,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.ChildContent\">\r\n            <summary>\r\n            Sets and gets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartLegendSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLegendSettings.ChildContent","Common.TypeNameIdentifier":"AccumulationChartLegendSettings"}},{"HashCode":-1107330354,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartLocation","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartLocation\">\r\n            <summary>\r\n            Spectified the co-ordinates of the legend in the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartLocation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLocation.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"X","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonLocation.X\">\r\n            <summary>\r\n             Sets and gets the x coordinate of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonLocation.Y\">\r\n            <summary>\r\n             Sets and gets the y coordinate of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Y"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLocation","Common.TypeNameIdentifier":"AccumulationChartLocation"}},{"HashCode":-1746416143,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartLocation","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartLocation\">\r\n            <summary>\r\n            Spectified the co-ordinates of the legend in the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartLocation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLocation.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"X","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonLocation.X\">\r\n            <summary>\r\n             Sets and gets the x coordinate of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonLocation.Y\">\r\n            <summary>\r\n             Sets and gets the y coordinate of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Y"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLocation","Common.TypeNameIdentifier":"AccumulationChartLocation"}},{"HashCode":359403895,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartLocation.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLocation.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartLocation"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLocation.ChildContent","Common.TypeNameIdentifier":"AccumulationChartLocation"}},{"HashCode":-252095307,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartLocation.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartLocation.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartLocation"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartLocation.ChildContent","Common.TypeNameIdentifier":"AccumulationChartLocation"}},{"HashCode":-1854326478,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartAnimation","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartAnimation\">\r\n            <summary>\r\n            Gets and sets the Animation property for the Accumulation chart's series.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartAnimation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnimation.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnimation.Delay\">\r\n            <summary>\r\n            The option to delay animation of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnimation.Duration\">\r\n            <summary>\r\n            The duration of animation in milliseconds.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnimation.Enable\">\r\n            <summary>\r\n            If set to true, series gets animated on initial loading.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartAnimation","Common.TypeNameIdentifier":"AccumulationChartAnimation"}},{"HashCode":-1051352889,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartAnimation","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartAnimation\">\r\n            <summary>\r\n            Gets and sets the Animation property for the Accumulation chart's series.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartAnimation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnimation.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnimation.Delay\">\r\n            <summary>\r\n            The option to delay animation of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnimation.Duration\">\r\n            <summary>\r\n            The duration of animation in milliseconds.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnimation.Enable\">\r\n            <summary>\r\n            If set to true, series gets animated on initial loading.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartAnimation","Common.TypeNameIdentifier":"AccumulationChartAnimation"}},{"HashCode":-2121632536,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartAnimation.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnimation.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartAnimation"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartAnimation.ChildContent","Common.TypeNameIdentifier":"AccumulationChartAnimation"}},{"HashCode":-2084332490,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartAnimation.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartAnimation.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartAnimation"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartAnimation.ChildContent","Common.TypeNameIdentifier":"AccumulationChartAnimation"}},{"HashCode":-1327671202,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartConnector","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartConnector\">\r\n            <summary>\r\n            Gets and sets the connector line property for the Accumulation chart's datalabel.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartConnector"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartConnector.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartConnector.Color\">\r\n            <summary>\r\n            Color of the connector line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartConnector.DashArray\">\r\n            <summary>\r\n            dashArray of the connector line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"Length","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartConnector.Length\">\r\n            <summary>\r\n            Length of the connector line in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Length"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Charts.ConnectorType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartConnector.Type\">\r\n            <summary>\r\n            specifies the type of the connector line. They are\r\n            Smooth\r\n            Line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ConnectorType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartConnector.Width\">\r\n            <summary>\r\n            Width of the connector line in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartConnector","Common.TypeNameIdentifier":"AccumulationChartConnector"}},{"HashCode":-1119792671,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartConnector","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartConnector\">\r\n            <summary>\r\n            Gets and sets the connector line property for the Accumulation chart's datalabel.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartConnector"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartConnector.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartConnector.Color\">\r\n            <summary>\r\n            Color of the connector line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartConnector.DashArray\">\r\n            <summary>\r\n            dashArray of the connector line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"Length","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartConnector.Length\">\r\n            <summary>\r\n            Length of the connector line in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Length"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Charts.ConnectorType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartConnector.Type\">\r\n            <summary>\r\n            specifies the type of the connector line. They are\r\n            Smooth\r\n            Line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ConnectorType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartConnector.Width\">\r\n            <summary>\r\n            Width of the connector line in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartConnector","Common.TypeNameIdentifier":"AccumulationChartConnector"}},{"HashCode":326360262,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartConnector.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartConnector.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartConnector"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartConnector.ChildContent","Common.TypeNameIdentifier":"AccumulationChartConnector"}},{"HashCode":-989595701,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartConnector.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartConnector.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartConnector"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartConnector.ChildContent","Common.TypeNameIdentifier":"AccumulationChartConnector"}},{"HashCode":-316850568,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder\">\r\n            <summary>\r\n            Gets and the border for Accumulation chart's datalabel.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartDataLabelBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Width\">\r\n            <summary>\r\n            Sets and gets the the width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder","Common.TypeNameIdentifier":"AccumulationChartDataLabelBorder"}},{"HashCode":-612035787,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder\">\r\n            <summary>\r\n            Gets and the border for Accumulation chart's datalabel.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Width\">\r\n            <summary>\r\n            Sets and gets the the width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder","Common.TypeNameIdentifier":"AccumulationChartDataLabelBorder"}},{"HashCode":1195782794,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartDataLabelBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder.ChildContent","Common.TypeNameIdentifier":"AccumulationChartDataLabelBorder"}},{"HashCode":1691602469,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder.ChildContent","Common.TypeNameIdentifier":"AccumulationChartDataLabelBorder"}},{"HashCode":318873288,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont\">\r\n            <summary>\r\n            Gets and sets the text style for Accumulation chart's datalabel.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartDataLabelFont"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont.Size\">\r\n            <summary>\r\n            Unique size of the axis labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont.FontFamily\">\r\n            <summary>\r\n            Unique font family of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont.FontWeight\">\r\n            <summary>\r\n            Unique font weight of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont.Color\">\r\n            <summary>\r\n            Unique font color of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont","Common.TypeNameIdentifier":"AccumulationChartDataLabelFont"}},{"HashCode":-774343764,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont\">\r\n            <summary>\r\n            Gets and sets the text style for Accumulation chart's datalabel.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont.Size\">\r\n            <summary>\r\n            Unique size of the axis labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont.FontFamily\">\r\n            <summary>\r\n            Unique font family of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont.FontWeight\">\r\n            <summary>\r\n            Unique font weight of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont.Color\">\r\n            <summary>\r\n            Unique font color of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont","Common.TypeNameIdentifier":"AccumulationChartDataLabelFont"}},{"HashCode":-1529457526,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartDataLabelFont"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont.ChildContent","Common.TypeNameIdentifier":"AccumulationChartDataLabelFont"}},{"HashCode":-1198342318,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont.ChildContent","Common.TypeNameIdentifier":"AccumulationChartDataLabelFont"}},{"HashCode":1310160133,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder\">\r\n            <summary>\r\n            Gets and sets the emptyPoint's border for the Accumulation chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartEmptyPointBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Width\">\r\n            <summary>\r\n            Sets and gets the the width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder","Common.TypeNameIdentifier":"AccumulationChartEmptyPointBorder"}},{"HashCode":1095314251,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder\">\r\n            <summary>\r\n            Gets and sets the emptyPoint's border for the Accumulation chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Width\">\r\n            <summary>\r\n            Sets and gets the the width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder","Common.TypeNameIdentifier":"AccumulationChartEmptyPointBorder"}},{"HashCode":-2092212152,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartEmptyPointBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder.ChildContent","Common.TypeNameIdentifier":"AccumulationChartEmptyPointBorder"}},{"HashCode":-722552442,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder.ChildContent","Common.TypeNameIdentifier":"AccumulationChartEmptyPointBorder"}},{"HashCode":-1441511897,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings\">\r\n            <summary>\r\n            Gets and sets configurarion of empty point settings for the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartEmptyPointSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings.Border\">\r\n            <summary>\r\n            Options to customize the border of empty points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings.Fill\">\r\n            <summary>\r\n            To customize the fill color of empty points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Mode","TypeName":"Syncfusion.Blazor.Charts.EmptyPointMode","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings.Mode\">\r\n            <summary>\r\n            To customize the mode of empty points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.EmptyPointMode","Common.PropertyName":"Mode"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings","Common.TypeNameIdentifier":"AccumulationChartEmptyPointSettings"}},{"HashCode":448107773,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings\">\r\n            <summary>\r\n            Gets and sets configurarion of empty point settings for the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings.Border\">\r\n            <summary>\r\n            Options to customize the border of empty points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartEmptyPointBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings.Fill\">\r\n            <summary>\r\n            To customize the fill color of empty points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Mode","TypeName":"Syncfusion.Blazor.Charts.EmptyPointMode","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings.Mode\">\r\n            <summary>\r\n            To customize the mode of empty points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.EmptyPointMode","Common.PropertyName":"Mode"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings","Common.TypeNameIdentifier":"AccumulationChartEmptyPointSettings"}},{"HashCode":1728298694,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartEmptyPointSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings.ChildContent","Common.TypeNameIdentifier":"AccumulationChartEmptyPointSettings"}},{"HashCode":424568691,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings.ChildContent","Common.TypeNameIdentifier":"AccumulationChartEmptyPointSettings"}},{"HashCode":2099807931,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartSeries","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartSeries\">\r\n            <summary>\r\n            Series represents the collection of data in the Accumulation chart.\r\n            Gets and set the Series of the Accumulation series.\r\n            </summary>\r\n            <summary>\r\n            Sets and gets the options for customizing the chart series of the accumulation chart component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartSeries"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Animation","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartAnimation","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.Animation\">\r\n            <summary>\r\n            Options for customizing the animation for series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartAnimation","Common.PropertyName":"Animation"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.Border\">\r\n            <summary>\r\n            Options for customizing the border of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"DataLabel","TypeName":"Syncfusion.Blazor.Charts.AccumulationDataLabelSettings","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.DataLabel\">\r\n            <summary>\r\n            The data label for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationDataLabelSettings","Common.PropertyName":"DataLabel"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.DataSource\">\r\n            <summary>\r\n            Specifies the dataSource for the series. It can be an array of JSON objects or an instance of DataManager.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Object>","Common.PropertyName":"DataSource"}},{"Kind":"Components.Component","Name":"EmptyPointSettings","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.EmptyPointSettings\">\r\n            <summary>\r\n            Options to customize the empty points in series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings","Common.PropertyName":"EmptyPointSettings"}},{"Kind":"Components.Component","Name":"EnableTooltip","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.EnableTooltip\">\r\n            <summary>\r\n            To enable or disable tooltip for a series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableTooltip"}},{"Kind":"Components.Component","Name":"EndAngle","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.EndAngle\">\r\n            <summary>\r\n            End angle for a series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"EndAngle"}},{"Kind":"Components.Component","Name":"Explode","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.Explode\">\r\n            <summary>\r\n            If set true, series points will be exploded on mouse click or touch.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Explode"}},{"Kind":"Components.Component","Name":"ExplodeAll","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.ExplodeAll\">\r\n            <summary>\r\n            If set true, all the points in the series will get exploded on load.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ExplodeAll"}},{"Kind":"Components.Component","Name":"ExplodeIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.ExplodeIndex\">\r\n            <summary>\r\n            Index of the point, to be exploded on load.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ExplodeIndex"}},{"Kind":"Components.Component","Name":"ExplodeOffset","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.ExplodeOffset\">\r\n            <summary>\r\n            Distance of the point from the center, which takes values in both pixels and percentage.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ExplodeOffset"}},{"Kind":"Components.Component","Name":"GapRatio","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.GapRatio\">\r\n            <summary>\r\n            Defines the distance between the segments of a funnel/pyramid series. The range will be from 0 to 1.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"GapRatio"}},{"Kind":"Components.Component","Name":"GroupMode","TypeName":"Syncfusion.Blazor.Charts.GroupMode","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.GroupMode\">\r\n            <summary>\r\n            AccumulationSeries y values less than groupMode are combined into single slice named others.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.GroupMode","Common.PropertyName":"GroupMode"}},{"Kind":"Components.Component","Name":"GroupTo","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.GroupTo\">\r\n            <summary>\r\n            AccumulationSeries y values less than groupTo are combined into single slice named others.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"GroupTo"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.Height\">\r\n            <summary>\r\n            Defines the height of the funnel/pyramid with respect to the chart area.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"InnerRadius","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.InnerRadius\">\r\n            <summary>\r\n            When the innerRadius value is greater than 0 percentage, a donut will appear in pie series. It takes values only in percentage.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InnerRadius"}},{"Kind":"Components.Component","Name":"LegendShape","TypeName":"Syncfusion.Blazor.Charts.LegendShape","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.LegendShape\">\r\n            <summary>\r\n            The shape of the legend. Each series has its own legend shape. They are\r\n            Circle - Renders a circle.\r\n            Rectangle - Renders a rectangle.\r\n            Triangle - Renders a triangle.\r\n            Diamond - Renders a diamond.\r\n            Cross - Renders a cross.\r\n            HorizontalLine - Renders a horizontalLine.\r\n            VerticalLine - Renders a verticalLine.\r\n            Pentagon - Renders a pentagon.\r\n            InvertedTriangle - Renders a invertedTriangle.\r\n            SeriesType -Render a legend shape based on series type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LegendShape","Common.PropertyName":"LegendShape"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.Name\">\r\n            <summary>\r\n            Specifies the series name.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"NeckHeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.NeckHeight\">\r\n            <summary>\r\n            Defines the height of the funnel neck with respect to the chart area.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"NeckHeight"}},{"Kind":"Components.Component","Name":"NeckWidth","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.NeckWidth\">\r\n            <summary>\r\n            Defines the width of the funnel neck with respect to the chart area.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"NeckWidth"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.Opacity\">\r\n            <summary>\r\n            The opacity of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Palettes","TypeName":"System.String[]","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.Palettes\">\r\n            <summary>\r\n            Palette for series points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String[]","Common.PropertyName":"Palettes"}},{"Kind":"Components.Component","Name":"PointColorMapping","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.PointColorMapping\">\r\n            <summary>\r\n            The DataSource field that contains the color value of point.\r\n            It is applicable for series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PointColorMapping"}},{"Kind":"Components.Component","Name":"PyramidMode","TypeName":"Syncfusion.Blazor.Charts.PyramidMode","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.PyramidMode\">\r\n            <summary>\r\n            Defines how the values have to be reflected, whether through height/surface of the segments.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.PyramidMode","Common.PropertyName":"PyramidMode"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.Query\">\r\n            <summary>\r\n            Specifies Query to select data from dataSource. This property is applicable only when the dataSource is `Ej.DataManager`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Data.Query","Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"Radius","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.Radius\">\r\n            <summary>\r\n            Radius of the pie series and its values in percentage.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Radius"}},{"Kind":"Components.Component","Name":"SelectionStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.SelectionStyle\">\r\n            <summary>\r\n            Custom style for the selected series or points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SelectionStyle"}},{"Kind":"Components.Component","Name":"StartAngle","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.StartAngle\">\r\n            <summary>\r\n            Sets and gets the Start angle for a series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"StartAngle"}},{"Kind":"Components.Component","Name":"TooltipMappingName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.TooltipMappingName\">\r\n            <summary>\r\n            The provided value will be considered as a tooltip Mapping name.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TooltipMappingName"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Charts.AccumulationType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.Type\">\r\n            <summary>\r\n            Specify the type of the series in accumulation chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.Visible\">\r\n            <summary>\r\n            Specifies the series visibility.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.Width\">\r\n            <summary>\r\n            Defines the width of the funnel/pyramid with respect to the chart area.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"XName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.XName\">\r\n            <summary>\r\n            The DataSource field which contains the x value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"XName"}},{"Kind":"Components.Component","Name":"YName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.YName\">\r\n            <summary>\r\n            The DataSource field which contains the y value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"YName"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSeries","Common.TypeNameIdentifier":"AccumulationChartSeries"}},{"HashCode":2071998147,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartSeries","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartSeries\">\r\n            <summary>\r\n            Series represents the collection of data in the Accumulation chart.\r\n            Gets and set the Series of the Accumulation series.\r\n            </summary>\r\n            <summary>\r\n            Sets and gets the options for customizing the chart series of the accumulation chart component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartSeries"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Animation","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartAnimation","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.Animation\">\r\n            <summary>\r\n            Options for customizing the animation for series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartAnimation","Common.PropertyName":"Animation"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.Border\">\r\n            <summary>\r\n            Options for customizing the border of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"DataLabel","TypeName":"Syncfusion.Blazor.Charts.AccumulationDataLabelSettings","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.DataLabel\">\r\n            <summary>\r\n            The data label for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationDataLabelSettings","Common.PropertyName":"DataLabel"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.DataSource\">\r\n            <summary>\r\n            Specifies the dataSource for the series. It can be an array of JSON objects or an instance of DataManager.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Object>","Common.PropertyName":"DataSource"}},{"Kind":"Components.Component","Name":"EmptyPointSettings","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.EmptyPointSettings\">\r\n            <summary>\r\n            Options to customize the empty points in series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartEmptyPointSettings","Common.PropertyName":"EmptyPointSettings"}},{"Kind":"Components.Component","Name":"EnableTooltip","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.EnableTooltip\">\r\n            <summary>\r\n            To enable or disable tooltip for a series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableTooltip"}},{"Kind":"Components.Component","Name":"EndAngle","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.EndAngle\">\r\n            <summary>\r\n            End angle for a series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"EndAngle"}},{"Kind":"Components.Component","Name":"Explode","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.Explode\">\r\n            <summary>\r\n            If set true, series points will be exploded on mouse click or touch.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Explode"}},{"Kind":"Components.Component","Name":"ExplodeAll","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.ExplodeAll\">\r\n            <summary>\r\n            If set true, all the points in the series will get exploded on load.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ExplodeAll"}},{"Kind":"Components.Component","Name":"ExplodeIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.ExplodeIndex\">\r\n            <summary>\r\n            Index of the point, to be exploded on load.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ExplodeIndex"}},{"Kind":"Components.Component","Name":"ExplodeOffset","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.ExplodeOffset\">\r\n            <summary>\r\n            Distance of the point from the center, which takes values in both pixels and percentage.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ExplodeOffset"}},{"Kind":"Components.Component","Name":"GapRatio","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.GapRatio\">\r\n            <summary>\r\n            Defines the distance between the segments of a funnel/pyramid series. The range will be from 0 to 1.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"GapRatio"}},{"Kind":"Components.Component","Name":"GroupMode","TypeName":"Syncfusion.Blazor.Charts.GroupMode","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.GroupMode\">\r\n            <summary>\r\n            AccumulationSeries y values less than groupMode are combined into single slice named others.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.GroupMode","Common.PropertyName":"GroupMode"}},{"Kind":"Components.Component","Name":"GroupTo","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.GroupTo\">\r\n            <summary>\r\n            AccumulationSeries y values less than groupTo are combined into single slice named others.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"GroupTo"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.Height\">\r\n            <summary>\r\n            Defines the height of the funnel/pyramid with respect to the chart area.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"InnerRadius","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.InnerRadius\">\r\n            <summary>\r\n            When the innerRadius value is greater than 0 percentage, a donut will appear in pie series. It takes values only in percentage.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InnerRadius"}},{"Kind":"Components.Component","Name":"LegendShape","TypeName":"Syncfusion.Blazor.Charts.LegendShape","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.LegendShape\">\r\n            <summary>\r\n            The shape of the legend. Each series has its own legend shape. They are\r\n            Circle - Renders a circle.\r\n            Rectangle - Renders a rectangle.\r\n            Triangle - Renders a triangle.\r\n            Diamond - Renders a diamond.\r\n            Cross - Renders a cross.\r\n            HorizontalLine - Renders a horizontalLine.\r\n            VerticalLine - Renders a verticalLine.\r\n            Pentagon - Renders a pentagon.\r\n            InvertedTriangle - Renders a invertedTriangle.\r\n            SeriesType -Render a legend shape based on series type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LegendShape","Common.PropertyName":"LegendShape"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.Name\">\r\n            <summary>\r\n            Specifies the series name.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"NeckHeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.NeckHeight\">\r\n            <summary>\r\n            Defines the height of the funnel neck with respect to the chart area.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"NeckHeight"}},{"Kind":"Components.Component","Name":"NeckWidth","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.NeckWidth\">\r\n            <summary>\r\n            Defines the width of the funnel neck with respect to the chart area.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"NeckWidth"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.Opacity\">\r\n            <summary>\r\n            The opacity of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Palettes","TypeName":"System.String[]","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.Palettes\">\r\n            <summary>\r\n            Palette for series points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String[]","Common.PropertyName":"Palettes"}},{"Kind":"Components.Component","Name":"PointColorMapping","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.PointColorMapping\">\r\n            <summary>\r\n            The DataSource field that contains the color value of point.\r\n            It is applicable for series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PointColorMapping"}},{"Kind":"Components.Component","Name":"PyramidMode","TypeName":"Syncfusion.Blazor.Charts.PyramidMode","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.PyramidMode\">\r\n            <summary>\r\n            Defines how the values have to be reflected, whether through height/surface of the segments.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.PyramidMode","Common.PropertyName":"PyramidMode"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.Query\">\r\n            <summary>\r\n            Specifies Query to select data from dataSource. This property is applicable only when the dataSource is `Ej.DataManager`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Data.Query","Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"Radius","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.Radius\">\r\n            <summary>\r\n            Radius of the pie series and its values in percentage.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Radius"}},{"Kind":"Components.Component","Name":"SelectionStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.SelectionStyle\">\r\n            <summary>\r\n            Custom style for the selected series or points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SelectionStyle"}},{"Kind":"Components.Component","Name":"StartAngle","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.StartAngle\">\r\n            <summary>\r\n            Sets and gets the Start angle for a series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"StartAngle"}},{"Kind":"Components.Component","Name":"TooltipMappingName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.TooltipMappingName\">\r\n            <summary>\r\n            The provided value will be considered as a tooltip Mapping name.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TooltipMappingName"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Charts.AccumulationType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.Type\">\r\n            <summary>\r\n            Specify the type of the series in accumulation chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.Visible\">\r\n            <summary>\r\n            Specifies the series visibility.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.Width\">\r\n            <summary>\r\n            Defines the width of the funnel/pyramid with respect to the chart area.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"XName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.XName\">\r\n            <summary>\r\n            The DataSource field which contains the x value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"XName"}},{"Kind":"Components.Component","Name":"YName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.YName\">\r\n            <summary>\r\n            The DataSource field which contains the y value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"YName"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSeries","Common.TypeNameIdentifier":"AccumulationChartSeries"}},{"HashCode":-1945396047,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartSeries.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartSeries"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSeries.ChildContent","Common.TypeNameIdentifier":"AccumulationChartSeries"}},{"HashCode":-1382342000,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartSeries.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeries.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartSeries"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSeries.ChildContent","Common.TypeNameIdentifier":"AccumulationChartSeries"}},{"HashCode":-2061740596,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder\">\r\n            <summary>\r\n            Gets and sets the border configuration for the series.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartSeriesBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Width\">\r\n            <summary>\r\n            Sets and gets the the width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder","Common.TypeNameIdentifier":"AccumulationChartSeriesBorder"}},{"HashCode":-1367109356,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder\">\r\n            <summary>\r\n            Gets and sets the border configuration for the series.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Width\">\r\n            <summary>\r\n            Sets and gets the the width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder","Common.TypeNameIdentifier":"AccumulationChartSeriesBorder"}},{"HashCode":472400536,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartSeriesBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder.ChildContent","Common.TypeNameIdentifier":"AccumulationChartSeriesBorder"}},{"HashCode":-1314025359,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSeriesBorder.ChildContent","Common.TypeNameIdentifier":"AccumulationChartSeriesBorder"}},{"HashCode":-690649375,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection\">\r\n            <summary>\r\n            Series represents the collection of data in the Accumulation chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartSeriesCollection"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection","Common.TypeNameIdentifier":"AccumulationChartSeriesCollection"}},{"HashCode":-1754844512,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection\">\r\n            <summary>\r\n            Series represents the collection of data in the Accumulation chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection","Common.TypeNameIdentifier":"AccumulationChartSeriesCollection"}},{"HashCode":638619256,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartSeriesCollection"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection.ChildContent","Common.TypeNameIdentifier":"AccumulationChartSeriesCollection"}},{"HashCode":-1915222170,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartSeriesCollection.ChildContent","Common.TypeNameIdentifier":"AccumulationChartSeriesCollection"}},{"HashCode":140238893,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationDataLabelSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings\">\r\n            <summary>\r\n            Datalabels shows the information about the data points in the accumulation chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationDataLabelSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Angle","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Angle\">\r\n            <summary>\r\n            Specifies angle for data label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Angle"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Border\">\r\n            <summary>\r\n            Option for customizing the border lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"ConnectorStyle","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartConnector","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.ConnectorStyle\">\r\n            <summary>\r\n            Options for customize the connector line in series.\r\n            This property is applicable for Pie, Funnel and Pyramid series.\r\n            The default connector length for Pie series is '4%'. For other series, it is null.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartConnector","Common.PropertyName":"ConnectorStyle"}},{"Kind":"Components.Component","Name":"EnableRotation","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.EnableRotation\">\r\n            <summary>\r\n            Enables rotation for data label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableRotation"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Fill\">\r\n            <summary>\r\n            The background color of the data label, which accepts value in hex, rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Font","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Font\">\r\n            <summary>\r\n            Option for customizing the data label text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont","Common.PropertyName":"Font"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Name\">\r\n            <summary>\r\n            The DataSource field which contains the data label value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Format\">\r\n            <summary>\r\n             Gets and sets the data label format that accepts any global string format like 'C', 'P', 'N1', etc.\r\n             It also accepts placeholder like '{value}°C' in which value represent the data label, for example, 20°C. \r\n            </summary>\r\n            <value>\r\n             Specifies the format for the data label. The default value is <c>null</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Position","TypeName":"Syncfusion.Blazor.Charts.AccumulationLabelPosition","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Position\">\r\n            <summary>\r\n            Specifies the position of data label. They are.\r\n            Outside - Places label outside the point.\r\n            Inside - Places label inside the point.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationLabelPosition","Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.MaxWidth\">\r\n            <summary> \r\n             Gets and sets the maximum width of the individual datalabel item after which they get trimmed, wrapped.  \r\n            </summary> \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.LabelOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.TextOverflow\">\r\n            <summary>  \r\n             Gets and sets the text overflow behavior to employ when the individual datalabel text overflowing the point segment or slice or <see cref=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.MaxWidth\"> MaxWidth </see> \r\n            </summary> \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.LabelOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"TextWrap","TypeName":"Syncfusion.Blazor.TextWrap","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.TextWrap\">\r\n            <summary> \r\n             Gets and sets the text wrap behavior to employ when the individual datalabel text overflowing the point segment or slice or <see cref=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.MaxWidth\"> MaxWidth </see> \r\n            </summary>  \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.TextWrap","Common.PropertyName":"TextWrap"}},{"Kind":"Components.Component","Name":"Rx","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Rx\">\r\n            <summary>\r\n            The roundedCornerX for the data label. It requires `Border` values not to be null.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Rx"}},{"Kind":"Components.Component","Name":"Ry","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Ry\">\r\n            <summary>\r\n            The roundedCornerY for the data label. It requires `Border` values not to be null.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Ry"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.Charts.AccumulationChartDataPointInfo>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Template\">\r\n            <summary>\r\n            Custom template to format the data label content. Use ${point.x} and ${point.y} as a placeholder\r\n            text to display the corresponding data point.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Syncfusion.Blazor.Charts.AccumulationChartDataPointInfo>","Common.PropertyName":"Template"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Visible\">\r\n            <summary>\r\n            If set true, data label for series gets render.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"ShowZero","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.ShowZero\">\r\n            <summary>\r\n            If set true, datalabels will be visible for zero points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ShowZero"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationDataLabelSettings","Common.TypeNameIdentifier":"AccumulationDataLabelSettings"}},{"HashCode":74219249,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationDataLabelSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings\">\r\n            <summary>\r\n            Datalabels shows the information about the data points in the accumulation chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationDataLabelSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Angle","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Angle\">\r\n            <summary>\r\n            Specifies angle for data label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Angle"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Border\">\r\n            <summary>\r\n            Option for customizing the border lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartDataLabelBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"ConnectorStyle","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartConnector","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.ConnectorStyle\">\r\n            <summary>\r\n            Options for customize the connector line in series.\r\n            This property is applicable for Pie, Funnel and Pyramid series.\r\n            The default connector length for Pie series is '4%'. For other series, it is null.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartConnector","Common.PropertyName":"ConnectorStyle"}},{"Kind":"Components.Component","Name":"EnableRotation","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.EnableRotation\">\r\n            <summary>\r\n            Enables rotation for data label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableRotation"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Fill\">\r\n            <summary>\r\n            The background color of the data label, which accepts value in hex, rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Font","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Font\">\r\n            <summary>\r\n            Option for customizing the data label text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartDataLabelFont","Common.PropertyName":"Font"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Name\">\r\n            <summary>\r\n            The DataSource field which contains the data label value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Format\">\r\n            <summary>\r\n             Gets and sets the data label format that accepts any global string format like 'C', 'P', 'N1', etc.\r\n             It also accepts placeholder like '{value}°C' in which value represent the data label, for example, 20°C. \r\n            </summary>\r\n            <value>\r\n             Specifies the format for the data label. The default value is <c>null</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Position","TypeName":"Syncfusion.Blazor.Charts.AccumulationLabelPosition","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Position\">\r\n            <summary>\r\n            Specifies the position of data label. They are.\r\n            Outside - Places label outside the point.\r\n            Inside - Places label inside the point.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationLabelPosition","Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"MaxWidth","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.MaxWidth\">\r\n            <summary> \r\n             Gets and sets the maximum width of the individual datalabel item after which they get trimmed, wrapped.  \r\n            </summary> \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MaxWidth"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.LabelOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.TextOverflow\">\r\n            <summary>  \r\n             Gets and sets the text overflow behavior to employ when the individual datalabel text overflowing the point segment or slice or <see cref=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.MaxWidth\"> MaxWidth </see> \r\n            </summary> \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.LabelOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"TextWrap","TypeName":"Syncfusion.Blazor.TextWrap","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.TextWrap\">\r\n            <summary> \r\n             Gets and sets the text wrap behavior to employ when the individual datalabel text overflowing the point segment or slice or <see cref=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.MaxWidth\"> MaxWidth </see> \r\n            </summary>  \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.TextWrap","Common.PropertyName":"TextWrap"}},{"Kind":"Components.Component","Name":"Rx","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Rx\">\r\n            <summary>\r\n            The roundedCornerX for the data label. It requires `Border` values not to be null.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Rx"}},{"Kind":"Components.Component","Name":"Ry","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Ry\">\r\n            <summary>\r\n            The roundedCornerY for the data label. It requires `Border` values not to be null.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Ry"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.Charts.AccumulationChartDataPointInfo>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Template\">\r\n            <summary>\r\n            Custom template to format the data label content. Use ${point.x} and ${point.y} as a placeholder\r\n            text to display the corresponding data point.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Syncfusion.Blazor.Charts.AccumulationChartDataPointInfo>","Common.PropertyName":"Template"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Visible\">\r\n            <summary>\r\n            If set true, data label for series gets render.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"ShowZero","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.ShowZero\">\r\n            <summary>\r\n            If set true, datalabels will be visible for zero points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ShowZero"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationDataLabelSettings","Common.TypeNameIdentifier":"AccumulationDataLabelSettings"}},{"HashCode":257480200,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationDataLabelSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.ChildContent","Common.TypeNameIdentifier":"AccumulationDataLabelSettings"}},{"HashCode":-372016839,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationDataLabelSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.ChildContent","Common.TypeNameIdentifier":"AccumulationDataLabelSettings"}},{"HashCode":-971618310,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Template","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Template\">\r\n            <summary>\r\n            Custom template to format the data label content. Use ${point.x} and ${point.y} as a placeholder\r\n            text to display the corresponding data point.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"AccumulationDataLabelSettings"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Template' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Template","Common.TypeNameIdentifier":"AccumulationDataLabelSettings"}},{"HashCode":1749952947,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Template","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Template\">\r\n            <summary>\r\n            Custom template to format the data label content. Use ${point.x} and ${point.y} as a placeholder\r\n            text to display the corresponding data point.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"Syncfusion.Blazor.Charts.AccumulationDataLabelSettings"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Template' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationDataLabelSettings.Template","Common.TypeNameIdentifier":"AccumulationDataLabelSettings"}},{"HashCode":188831162,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.SfAccumulationChart","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.SfAccumulationChart\">\r\n            <summary>\r\n            The accumulation chart control is used to visualize the data in the different types of graphical representations with built-in features like Grouping, legends, tooltip, and more.\r\n            </summary>\r\n            <summary>\r\n            Accumulation chart is a Data visualization component which is divided into slices to represent the given numerical values.\r\n            In this each slice represents its corresponding numerical value.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfAccumulationChart"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Background","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.Background\">\r\n            <summary>\r\n            The background color of the chart, which accepts data in hex, rgba as a valid CSS color string.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value that specifies the background color of the chart.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"BackgroundImage","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.BackgroundImage\">\r\n            <summary>\r\n            The background image of the chart that accepts data in string as url link or location of an image.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value that representing the URL or path to the background image.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"BackgroundImage"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.DataSource\">\r\n             <summary>\r\n             Specifies the dataSource for the AccumulationChart. It can be an array of JSON objects or an instance of DataManager.\r\n            \r\n             </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Object>","Common.PropertyName":"DataSource"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.Query\">\r\n            <summary>\r\n            Specifies Query to select data from dataSource. This property is applicable only when the dataSource is `Ej.DataManager`.\r\n            </summary>\r\n            <value>\r\n            An object of the type <see cref=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.Query\" /> that represents the query to be selected the data from data source.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Data.Query","Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"DataSourceChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.DataSourceChanged\">\r\n            <summary>\r\n            Triggers when dataSource for the chart changed.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Object>","Common.PropertyName":"DataSourceChanged"}},{"Kind":"Components.Component","Name":"EnableAnimation","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.EnableAnimation\">\r\n            <summary>\r\n            If set true, enables the animation for accumulation chart.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the animation can be enabled. Otherwise, <c>false</c>. The default value is <c>true</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableAnimation"}},{"Kind":"Components.Component","Name":"EnableBorderOnMouseMove","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.EnableBorderOnMouseMove\">\r\n            <summary>\r\n            If set true, enables the border in pie chart while mouse moving.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the border can be displayed when the mouse move on the chart. Otherwise, <c>false</c>. The default value is <c>true</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableBorderOnMouseMove"}},{"Kind":"Components.Component","Name":"EnableSmartLabels","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.EnableSmartLabels\">\r\n            <summary>\r\n            If set true, labels for the point will be placed smartly without overlapping.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the smart labels can be enabled. Otherwise, <c>false</c>. The default value is <c>true</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableSmartLabels"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.Height\">\r\n            <summary>\r\n            The height of the chart as a string in order to provide input as both like '100px' or '100%'.\r\n            If specified as '100%, chart will render to the full height of its parent element.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value. The default value is <c>100%</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"HighlightMode","TypeName":"Syncfusion.Blazor.Charts.AccumulationSelectionMode","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.HighlightMode\">\r\n            <summary>\r\n            Specifies whether point has to get highlighted or not. Takes chartItems either 'None 'or 'Point'.\r\n            </summary>\r\n            <value>\r\n            The highlight mode of the chart component.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationSelectionMode","Common.PropertyName":"HighlightMode"}},{"Kind":"Components.Component","Name":"HighlightPattern","TypeName":"Syncfusion.Blazor.Charts.SelectionPattern","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.HighlightPattern\">\r\n            <summary>\r\n            Specifies whether series or data point has to be selected. They are,\r\n            none: sets none as highlighting pattern to accumulation chart.\r\n            chessboard: sets chess board as highlighting pattern to accumulation chart.\r\n            dots: sets dots as highlighting pattern to accumulation chart.\r\n            diagonalForward: sets diagonal forward as highlighting pattern to accumulation chart.\r\n            crosshatch: sets crosshatch as highlighting pattern to accumulation chart.\r\n            pacman: sets pacman highlighting  pattern to accumulation chart.\r\n            diagonalbackward: sets diagonal backward as highlighting pattern to accumulation chart.\r\n            grid: sets grid as highlighting pattern to accumulation chart.\r\n            turquoise: sets turquoise as highlighting pattern to accumulation chart.\r\n            star: sets star as highlighting  pattern to accumulation chart.\r\n            triangle: sets triangle as highlighting pattern to accumulation chart.\r\n            circle: sets circle as highlighting  pattern to accumulation chart.\r\n            tile: sets tile as highlighting pattern to accumulation chart.\r\n            horizontaldash: sets horizontal dash as highlighting pattern to accumulation chart.\r\n            verticaldash: sets vertical dash as highlighting pattern to accumulation chart.\r\n            rectangle: sets rectangle as highlighting  pattern to accumulation chart.\r\n            box: sets box as highlighting pattern to accumulation chart.\r\n            verticalstripe: sets vertical stripe as highlighting  pattern to accumulation chart.\r\n            horizontalstripe: sets horizontal stripe as highlighting  pattern to accumulation chart.\r\n            bubble: sets bubble as highlighting  pattern to accumulation chart.\r\n            </summary>\r\n            <value>\r\n            The highlighting pattern for the series or data point in the accumulation chart.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.SelectionPattern","Common.PropertyName":"HighlightPattern"}},{"Kind":"Components.Component","Name":"IsMultiSelect","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.IsMultiSelect\">\r\n            <summary>\r\n            If set true, enables the multi selection in accumulation chart. It requires `SelectionMode` to be `Point`.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the multi selection can be enabled. Otherwise <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsMultiSelect"}},{"Kind":"Components.Component","Name":"SelectionMode","TypeName":"Syncfusion.Blazor.Charts.AccumulationSelectionMode","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.SelectionMode\">\r\n            <summary>\r\n            Specifies whether point has to get selected or not. Takes chartItems either 'None 'or 'Point'.\r\n            </summary>\r\n            <value>\r\n            One of the <see cref=\"T:Syncfusion.Blazor.Charts.AccumulationSelectionMode\" /> enumeration values that specifies the mode of selection in chart component.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationSelectionMode","Common.PropertyName":"SelectionMode"}},{"Kind":"Components.Component","Name":"SelectionPattern","TypeName":"Syncfusion.Blazor.Charts.SelectionPattern","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.SelectionPattern\">\r\n            <summary>\r\n            Specifies whether series or data point for accumulation chart has to be selected. They are,\r\n            none: sets none as selecting pattern to accumulation chart .\r\n            chessboard: sets chess board as selecting pattern accumulation chart .\r\n            dots: sets dots as  selecting pattern accumulation chart .\r\n            diagonalForward: sets diagonal forward as selecting pattern to accumulation chart .\r\n            crosshatch: sets crosshatch as selecting pattern to accumulation chart.\r\n            pacman: sets pacman selecting pattern to accumulation chart.\r\n            diagonalbackward: sets diagonal backward as selecting pattern to accumulation chart.\r\n            grid: sets grid as selecting pattern to accumulation chart.\r\n            turquoise: sets turquoise as selecting pattern to accumulation chart.\r\n            star: sets star as selecting pattern to accumulation chart.\r\n            triangle: sets triangle as selecting pattern to accumulation chart.\r\n            circle: sets circle as selecting pattern to accumulation chart.\r\n            tile: sets tile as selecting pattern to accumulation chart.\r\n            horizontaldash: sets horizontal dash as selecting pattern to accumulation chart.\r\n            verticaldash: sets vertical dash as selecting pattern to accumulation chart.\r\n            rectangle: sets rectangle as selecting pattern.\r\n            box: sets box as selecting pattern to accumulation chart.\r\n            verticalstripe: sets vertical stripe as  selecting pattern to accumulation chart.\r\n            horizontalstripe: sets horizontal stripe as selecting pattern to accumulation chart.\r\n            bubble: sets bubble as selecting pattern to accumulation chart.\r\n            </summary>\r\n            <value>\r\n            The selection pattern for the series or data point in the accumulation chart.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.SelectionPattern","Common.PropertyName":"SelectionPattern"}},{"Kind":"Components.Component","Name":"HighlightColor","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.HighlightColor\">\r\n             <summary>\r\n             Gets and sets the highlight color for the data point when user hover the data point.\r\n             </summary>\r\n            <value>\r\n             Specifies the hover color for data point. The default value is <c>null</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HighlightColor"}},{"Kind":"Components.Component","Name":"SubTitle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.SubTitle\">\r\n            <summary>\r\n            Specifies the SubTitle of the accumulation chart.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SubTitle"}},{"Kind":"Components.Component","Name":"Theme","TypeName":"Syncfusion.Blazor.Theme","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.Theme\">\r\n            <summary>\r\n            Specifies the theme for accumulation chart.\r\n            </summary>\r\n            <value>\r\n            Accepts a value from the <see cref=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.Theme\" /> enum. The default value is <see cref=\"F:Syncfusion.Blazor.Theme.Bootstrap4\" />.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Theme","Common.PropertyName":"Theme"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.Title\">\r\n            <summary>\r\n            Specifies the Title of the accumulation chart.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"EnableGroupingSeparator","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.EnableGroupingSeparator\">\r\n            <summary>\r\n            Specifies whether a grouping separator should be used for a number.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the grouping separator can be enabled. Otherwise, <c>false</c>. \r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableGroupingSeparator"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.Width\">\r\n            <summary>\r\n            The width of the chart as a string in order to provide input as both like '100px' or '100%'.\r\n            If specified as '100%, chart will render to the full width of its parent element.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value. The default value is <c>100%</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.ID\">\r\n            <summary>\r\n            Sets id attribute for chart element.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.ChildContent\">\r\n             <summary>\r\n             Sets content for chart element including HTML and its customizations.\r\n             </summary>\r\n             <value>\r\n             Accepts a RenderFragment that defines the content of the UI element.\r\n            </value>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"CustomClass","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.CustomClass\">\r\n            <summary>\r\n            Defines class/multiple classes separated by a space in the chart element.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value. The default value is empty,\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"CustomClass"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.EnableRtl\">\r\n            <summary>\r\n            Gets or sets the right to left direction that defines the text writing and user interface (UI) elements direction in layout.\r\n            </summary>\r\n            <value> \r\n            <c>true</c>, if the right to left direction can be enabled for component. The default value is <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableRtl"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.SfAccumulationChart","Common.TypeNameIdentifier":"SfAccumulationChart"}},{"HashCode":-1017209867,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.SfAccumulationChart","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.SfAccumulationChart\">\r\n            <summary>\r\n            The accumulation chart control is used to visualize the data in the different types of graphical representations with built-in features like Grouping, legends, tooltip, and more.\r\n            </summary>\r\n            <summary>\r\n            Accumulation chart is a Data visualization component which is divided into slices to represent the given numerical values.\r\n            In this each slice represents its corresponding numerical value.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.SfAccumulationChart"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Background","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.Background\">\r\n            <summary>\r\n            The background color of the chart, which accepts data in hex, rgba as a valid CSS color string.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value that specifies the background color of the chart.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"BackgroundImage","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.BackgroundImage\">\r\n            <summary>\r\n            The background image of the chart that accepts data in string as url link or location of an image.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value that representing the URL or path to the background image.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"BackgroundImage"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.DataSource\">\r\n             <summary>\r\n             Specifies the dataSource for the AccumulationChart. It can be an array of JSON objects or an instance of DataManager.\r\n            \r\n             </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Object>","Common.PropertyName":"DataSource"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.Query\">\r\n            <summary>\r\n            Specifies Query to select data from dataSource. This property is applicable only when the dataSource is `Ej.DataManager`.\r\n            </summary>\r\n            <value>\r\n            An object of the type <see cref=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.Query\" /> that represents the query to be selected the data from data source.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Data.Query","Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"DataSourceChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.DataSourceChanged\">\r\n            <summary>\r\n            Triggers when dataSource for the chart changed.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Object>","Common.PropertyName":"DataSourceChanged"}},{"Kind":"Components.Component","Name":"EnableAnimation","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.EnableAnimation\">\r\n            <summary>\r\n            If set true, enables the animation for accumulation chart.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the animation can be enabled. Otherwise, <c>false</c>. The default value is <c>true</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableAnimation"}},{"Kind":"Components.Component","Name":"EnableBorderOnMouseMove","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.EnableBorderOnMouseMove\">\r\n            <summary>\r\n            If set true, enables the border in pie chart while mouse moving.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the border can be displayed when the mouse move on the chart. Otherwise, <c>false</c>. The default value is <c>true</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableBorderOnMouseMove"}},{"Kind":"Components.Component","Name":"EnableSmartLabels","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.EnableSmartLabels\">\r\n            <summary>\r\n            If set true, labels for the point will be placed smartly without overlapping.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the smart labels can be enabled. Otherwise, <c>false</c>. The default value is <c>true</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableSmartLabels"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.Height\">\r\n            <summary>\r\n            The height of the chart as a string in order to provide input as both like '100px' or '100%'.\r\n            If specified as '100%, chart will render to the full height of its parent element.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value. The default value is <c>100%</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"HighlightMode","TypeName":"Syncfusion.Blazor.Charts.AccumulationSelectionMode","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.HighlightMode\">\r\n            <summary>\r\n            Specifies whether point has to get highlighted or not. Takes chartItems either 'None 'or 'Point'.\r\n            </summary>\r\n            <value>\r\n            The highlight mode of the chart component.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationSelectionMode","Common.PropertyName":"HighlightMode"}},{"Kind":"Components.Component","Name":"HighlightPattern","TypeName":"Syncfusion.Blazor.Charts.SelectionPattern","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.HighlightPattern\">\r\n            <summary>\r\n            Specifies whether series or data point has to be selected. They are,\r\n            none: sets none as highlighting pattern to accumulation chart.\r\n            chessboard: sets chess board as highlighting pattern to accumulation chart.\r\n            dots: sets dots as highlighting pattern to accumulation chart.\r\n            diagonalForward: sets diagonal forward as highlighting pattern to accumulation chart.\r\n            crosshatch: sets crosshatch as highlighting pattern to accumulation chart.\r\n            pacman: sets pacman highlighting  pattern to accumulation chart.\r\n            diagonalbackward: sets diagonal backward as highlighting pattern to accumulation chart.\r\n            grid: sets grid as highlighting pattern to accumulation chart.\r\n            turquoise: sets turquoise as highlighting pattern to accumulation chart.\r\n            star: sets star as highlighting  pattern to accumulation chart.\r\n            triangle: sets triangle as highlighting pattern to accumulation chart.\r\n            circle: sets circle as highlighting  pattern to accumulation chart.\r\n            tile: sets tile as highlighting pattern to accumulation chart.\r\n            horizontaldash: sets horizontal dash as highlighting pattern to accumulation chart.\r\n            verticaldash: sets vertical dash as highlighting pattern to accumulation chart.\r\n            rectangle: sets rectangle as highlighting  pattern to accumulation chart.\r\n            box: sets box as highlighting pattern to accumulation chart.\r\n            verticalstripe: sets vertical stripe as highlighting  pattern to accumulation chart.\r\n            horizontalstripe: sets horizontal stripe as highlighting  pattern to accumulation chart.\r\n            bubble: sets bubble as highlighting  pattern to accumulation chart.\r\n            </summary>\r\n            <value>\r\n            The highlighting pattern for the series or data point in the accumulation chart.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.SelectionPattern","Common.PropertyName":"HighlightPattern"}},{"Kind":"Components.Component","Name":"IsMultiSelect","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.IsMultiSelect\">\r\n            <summary>\r\n            If set true, enables the multi selection in accumulation chart. It requires `SelectionMode` to be `Point`.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the multi selection can be enabled. Otherwise <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsMultiSelect"}},{"Kind":"Components.Component","Name":"SelectionMode","TypeName":"Syncfusion.Blazor.Charts.AccumulationSelectionMode","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.SelectionMode\">\r\n            <summary>\r\n            Specifies whether point has to get selected or not. Takes chartItems either 'None 'or 'Point'.\r\n            </summary>\r\n            <value>\r\n            One of the <see cref=\"T:Syncfusion.Blazor.Charts.AccumulationSelectionMode\" /> enumeration values that specifies the mode of selection in chart component.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationSelectionMode","Common.PropertyName":"SelectionMode"}},{"Kind":"Components.Component","Name":"SelectionPattern","TypeName":"Syncfusion.Blazor.Charts.SelectionPattern","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.SelectionPattern\">\r\n            <summary>\r\n            Specifies whether series or data point for accumulation chart has to be selected. They are,\r\n            none: sets none as selecting pattern to accumulation chart .\r\n            chessboard: sets chess board as selecting pattern accumulation chart .\r\n            dots: sets dots as  selecting pattern accumulation chart .\r\n            diagonalForward: sets diagonal forward as selecting pattern to accumulation chart .\r\n            crosshatch: sets crosshatch as selecting pattern to accumulation chart.\r\n            pacman: sets pacman selecting pattern to accumulation chart.\r\n            diagonalbackward: sets diagonal backward as selecting pattern to accumulation chart.\r\n            grid: sets grid as selecting pattern to accumulation chart.\r\n            turquoise: sets turquoise as selecting pattern to accumulation chart.\r\n            star: sets star as selecting pattern to accumulation chart.\r\n            triangle: sets triangle as selecting pattern to accumulation chart.\r\n            circle: sets circle as selecting pattern to accumulation chart.\r\n            tile: sets tile as selecting pattern to accumulation chart.\r\n            horizontaldash: sets horizontal dash as selecting pattern to accumulation chart.\r\n            verticaldash: sets vertical dash as selecting pattern to accumulation chart.\r\n            rectangle: sets rectangle as selecting pattern.\r\n            box: sets box as selecting pattern to accumulation chart.\r\n            verticalstripe: sets vertical stripe as  selecting pattern to accumulation chart.\r\n            horizontalstripe: sets horizontal stripe as selecting pattern to accumulation chart.\r\n            bubble: sets bubble as selecting pattern to accumulation chart.\r\n            </summary>\r\n            <value>\r\n            The selection pattern for the series or data point in the accumulation chart.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.SelectionPattern","Common.PropertyName":"SelectionPattern"}},{"Kind":"Components.Component","Name":"HighlightColor","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.HighlightColor\">\r\n             <summary>\r\n             Gets and sets the highlight color for the data point when user hover the data point.\r\n             </summary>\r\n            <value>\r\n             Specifies the hover color for data point. The default value is <c>null</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HighlightColor"}},{"Kind":"Components.Component","Name":"SubTitle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.SubTitle\">\r\n            <summary>\r\n            Specifies the SubTitle of the accumulation chart.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SubTitle"}},{"Kind":"Components.Component","Name":"Theme","TypeName":"Syncfusion.Blazor.Theme","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.Theme\">\r\n            <summary>\r\n            Specifies the theme for accumulation chart.\r\n            </summary>\r\n            <value>\r\n            Accepts a value from the <see cref=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.Theme\" /> enum. The default value is <see cref=\"F:Syncfusion.Blazor.Theme.Bootstrap4\" />.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Theme","Common.PropertyName":"Theme"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.Title\">\r\n            <summary>\r\n            Specifies the Title of the accumulation chart.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"EnableGroupingSeparator","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.EnableGroupingSeparator\">\r\n            <summary>\r\n            Specifies whether a grouping separator should be used for a number.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the grouping separator can be enabled. Otherwise, <c>false</c>. \r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableGroupingSeparator"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.Width\">\r\n            <summary>\r\n            The width of the chart as a string in order to provide input as both like '100px' or '100%'.\r\n            If specified as '100%, chart will render to the full width of its parent element.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value. The default value is <c>100%</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.ID\">\r\n            <summary>\r\n            Sets id attribute for chart element.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.ChildContent\">\r\n             <summary>\r\n             Sets content for chart element including HTML and its customizations.\r\n             </summary>\r\n             <value>\r\n             Accepts a RenderFragment that defines the content of the UI element.\r\n            </value>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"CustomClass","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.CustomClass\">\r\n            <summary>\r\n            Defines class/multiple classes separated by a space in the chart element.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value. The default value is empty,\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"CustomClass"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.EnableRtl\">\r\n            <summary>\r\n            Gets or sets the right to left direction that defines the text writing and user interface (UI) elements direction in layout.\r\n            </summary>\r\n            <value> \r\n            <c>true</c>, if the right to left direction can be enabled for component. The default value is <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableRtl"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.SfAccumulationChart","Common.TypeNameIdentifier":"SfAccumulationChart"}},{"HashCode":1637716312,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.SfAccumulationChart.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.ChildContent\">\r\n             <summary>\r\n             Sets content for chart element including HTML and its customizations.\r\n             </summary>\r\n             <value>\r\n             Accepts a RenderFragment that defines the content of the UI element.\r\n            </value>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfAccumulationChart"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.SfAccumulationChart.ChildContent","Common.TypeNameIdentifier":"SfAccumulationChart"}},{"HashCode":1383455193,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.SfAccumulationChart.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfAccumulationChart.ChildContent\">\r\n             <summary>\r\n             Sets content for chart element including HTML and its customizations.\r\n             </summary>\r\n             <value>\r\n             Accepts a RenderFragment that defines the content of the UI element.\r\n            </value>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.SfAccumulationChart"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.SfAccumulationChart.ChildContent","Common.TypeNameIdentifier":"SfAccumulationChart"}},{"HashCode":-1429112323,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder\">\r\n            <summary>\r\n            Gets and sets the border of the accumulation chart's tooltip.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartTooltipBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder.Width\">\r\n            <summary>\r\n            Sets and gets the border width for the tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder","Common.TypeNameIdentifier":"AccumulationChartTooltipBorder"}},{"HashCode":-590361298,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder\">\r\n            <summary>\r\n            Gets and sets the border of the accumulation chart's tooltip.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder.Width\">\r\n            <summary>\r\n            Sets and gets the border width for the tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder","Common.TypeNameIdentifier":"AccumulationChartTooltipBorder"}},{"HashCode":-1326973197,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartTooltipBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder.ChildContent","Common.TypeNameIdentifier":"AccumulationChartTooltipBorder"}},{"HashCode":-153029701,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder.ChildContent","Common.TypeNameIdentifier":"AccumulationChartTooltipBorder"}},{"HashCode":1172103653,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings\">\r\n            <summary>\r\n             Tooltip shows the information about the data points when users hover over data points on your chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartTooltipSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Border\">\r\n            <summary>\r\n            Options to customize tooltip borders.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Duration\">\r\n            <summary>\r\n            Duration for the ToolTip animation.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Enable\">\r\n            <summary>\r\n            Enables / Disables the visibility of the tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}},{"Kind":"Components.Component","Name":"EnableAnimation","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.EnableAnimation\">\r\n            <summary>\r\n            If set to true, ToolTip will animate while moving from one point to another.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableAnimation"}},{"Kind":"Components.Component","Name":"EnableMarker","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.EnableMarker\">\r\n            <summary>\r\n            Enables / Disables the visibility of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableMarker"}},{"Kind":"Components.Component","Name":"EnableTextWrap","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.EnableTextWrap\">\r\n            <summary>\r\n            To wrap the tooltip long text based on available space.\r\n            This is only application for chart tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableTextWrap"}},{"Kind":"Components.Component","Name":"FadeOutDuration","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.FadeOutDuration\">\r\n            <summary>\r\n            Fade Out duration for the ToolTip hide.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"FadeOutDuration"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Fill\">\r\n            <summary>\r\n            The fill color of the tooltip that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Format\">\r\n            <summary>\r\n            Format the ToolTip content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Header\">\r\n            <summary>\r\n            Header for tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Opacity\">\r\n            <summary>\r\n            The fill color of the tooltip that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Shared","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Shared\">\r\n            <summary>\r\n            If set to true, a single ToolTip will be displayed for every index.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Shared"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Template\">\r\n            <summary>\r\n            Custom template to format the ToolTip content. Use ${x} and ${y} as the placeholder text to display the corresponding data point.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Object>","Common.PropertyName":"Template"}},{"Kind":"Components.Component","Name":"TextStyle","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.TextStyle\">\r\n            <summary>\r\n            Options to customize the ToolTip text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle","Common.PropertyName":"TextStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings","Common.TypeNameIdentifier":"AccumulationChartTooltipSettings"}},{"HashCode":471993332,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings\">\r\n            <summary>\r\n             Tooltip shows the information about the data points when users hover over data points on your chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Border\">\r\n            <summary>\r\n            Options to customize tooltip borders.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartTooltipBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Duration\">\r\n            <summary>\r\n            Duration for the ToolTip animation.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Enable\">\r\n            <summary>\r\n            Enables / Disables the visibility of the tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}},{"Kind":"Components.Component","Name":"EnableAnimation","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.EnableAnimation\">\r\n            <summary>\r\n            If set to true, ToolTip will animate while moving from one point to another.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableAnimation"}},{"Kind":"Components.Component","Name":"EnableMarker","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.EnableMarker\">\r\n            <summary>\r\n            Enables / Disables the visibility of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableMarker"}},{"Kind":"Components.Component","Name":"EnableTextWrap","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.EnableTextWrap\">\r\n            <summary>\r\n            To wrap the tooltip long text based on available space.\r\n            This is only application for chart tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableTextWrap"}},{"Kind":"Components.Component","Name":"FadeOutDuration","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.FadeOutDuration\">\r\n            <summary>\r\n            Fade Out duration for the ToolTip hide.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"FadeOutDuration"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Fill\">\r\n            <summary>\r\n            The fill color of the tooltip that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Format\">\r\n            <summary>\r\n            Format the ToolTip content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Header\">\r\n            <summary>\r\n            Header for tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Opacity\">\r\n            <summary>\r\n            The fill color of the tooltip that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Shared","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Shared\">\r\n            <summary>\r\n            If set to true, a single ToolTip will be displayed for every index.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Shared"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Template\">\r\n            <summary>\r\n            Custom template to format the ToolTip content. Use ${x} and ${y} as the placeholder text to display the corresponding data point.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Object>","Common.PropertyName":"Template"}},{"Kind":"Components.Component","Name":"TextStyle","TypeName":"Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.TextStyle\">\r\n            <summary>\r\n            Options to customize the ToolTip text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle","Common.PropertyName":"TextStyle"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings","Common.TypeNameIdentifier":"AccumulationChartTooltipSettings"}},{"HashCode":165416657,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartTooltipSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.ChildContent","Common.TypeNameIdentifier":"AccumulationChartTooltipSettings"}},{"HashCode":-1265594089,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.ChildContent","Common.TypeNameIdentifier":"AccumulationChartTooltipSettings"}},{"HashCode":302181127,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Template","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Template\">\r\n            <summary>\r\n            Custom template to format the ToolTip content. Use ${x} and ${y} as the placeholder text to display the corresponding data point.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"AccumulationChartTooltipSettings"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Template' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Template","Common.TypeNameIdentifier":"AccumulationChartTooltipSettings"}},{"HashCode":-649705511,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Template","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Template\">\r\n            <summary>\r\n            Custom template to format the ToolTip content. Use ${x} and ${y} as the placeholder text to display the corresponding data point.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Template' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartTooltipSettings.Template","Common.TypeNameIdentifier":"AccumulationChartTooltipSettings"}},{"HashCode":-633265812,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle\">\r\n            <summary>\r\n            Gets and sets the Textstyle of the Accumulation chart's tooltip.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AccumulationChartTooltipTextStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle.FontFamily\">\r\n            <summary>\r\n            Unique font family of the tooltip text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle.FontWeight\">\r\n            <summary>\r\n            Unique font weight of the tooltip text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Color\">\r\n            <summary>\r\n            Sets and gets the color for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Size\">\r\n            <summary>\r\n            Sets and gets the size for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle","Common.TypeNameIdentifier":"AccumulationChartTooltipTextStyle"}},{"HashCode":943487234,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle\">\r\n            <summary>\r\n            Gets and sets the Textstyle of the Accumulation chart's tooltip.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle.FontFamily\">\r\n            <summary>\r\n            Unique font family of the tooltip text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle.FontWeight\">\r\n            <summary>\r\n            Unique font weight of the tooltip text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Color\">\r\n            <summary>\r\n            Sets and gets the color for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Size\">\r\n            <summary>\r\n            Sets and gets the size for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle","Common.TypeNameIdentifier":"AccumulationChartTooltipTextStyle"}},{"HashCode":-946130144,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AccumulationChartTooltipTextStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle.ChildContent","Common.TypeNameIdentifier":"AccumulationChartTooltipTextStyle"}},{"HashCode":514471298,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle.ChildContent\">\r\n            <summary>\r\n            Gets and sets the content of the UI element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChartTooltipTextStyle.ChildContent","Common.TypeNameIdentifier":"AccumulationChartTooltipTextStyle"}},{"HashCode":-1470057901,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAnnotation","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartAnnotation\">\r\n            <summary>\r\n            Annotation is a user defined HTML element that can be placed on chart\r\n            We can use annotations to pile up the visual elegance of the chart.\r\n            Specifies the customization of annotation.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartAnnotation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ContentTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAnnotation.ContentTemplate\">\r\n            <summary>\r\n            Content Template for the annotation.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ContentTemplate"}},{"Kind":"Components.Component","Name":"CoordinateUnits","TypeName":"Syncfusion.Blazor.Charts.Units","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAnnotation.CoordinateUnits\">\r\n            <summary>\r\n            Specifies the coordinate units of the annotation. They are\r\n             Pixel - Annotation renders based on x and y pixel value.\r\n             Point - Annotation renders based on x and y axis value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Units","Common.PropertyName":"CoordinateUnits"}},{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAnnotation.Description\">\r\n            <summary>\r\n            Information about annotation for assistive technology.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Description"}},{"Kind":"Components.Component","Name":"Region","TypeName":"Syncfusion.Blazor.Charts.Regions","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAnnotation.Region\">\r\n            <summary>\r\n            Specifies the regions of the annotation. They are\r\n             Chart - Annotation renders based on chart coordinates.\r\n             Series - Annotation renders based on series coordinates.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Regions","Common.PropertyName":"Region"}},{"Kind":"Components.Component","Name":"X","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAnnotation.X\">\r\n            <summary>\r\n            if set coordinateUnit as `Pixel` X specifies the axis value\r\n            else is specifies pixel or percentage of coordinate.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"XAxisName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAnnotation.XAxisName\">\r\n            <summary>\r\n            The name of horizontal axis associated with the annotation.\r\n            It requires `Axes` of chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"XAxisName"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAnnotation.Y\">\r\n            <summary>\r\n            if set coordinateUnit as `Pixel` Y specifies the axis value\r\n            else is specifies pixel or percentage of coordinate.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Y"}},{"Kind":"Components.Component","Name":"YAxisName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAnnotation.YAxisName\">\r\n            <summary>\r\n            The name of vertical axis associated with the annotation.\r\n            It requires `Axes` of chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"YAxisName"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAnnotation","Common.TypeNameIdentifier":"ChartAnnotation"}},{"HashCode":1132317214,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAnnotation","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartAnnotation\">\r\n            <summary>\r\n            Annotation is a user defined HTML element that can be placed on chart\r\n            We can use annotations to pile up the visual elegance of the chart.\r\n            Specifies the customization of annotation.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartAnnotation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ContentTemplate","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAnnotation.ContentTemplate\">\r\n            <summary>\r\n            Content Template for the annotation.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ContentTemplate"}},{"Kind":"Components.Component","Name":"CoordinateUnits","TypeName":"Syncfusion.Blazor.Charts.Units","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAnnotation.CoordinateUnits\">\r\n            <summary>\r\n            Specifies the coordinate units of the annotation. They are\r\n             Pixel - Annotation renders based on x and y pixel value.\r\n             Point - Annotation renders based on x and y axis value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Units","Common.PropertyName":"CoordinateUnits"}},{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAnnotation.Description\">\r\n            <summary>\r\n            Information about annotation for assistive technology.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Description"}},{"Kind":"Components.Component","Name":"Region","TypeName":"Syncfusion.Blazor.Charts.Regions","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAnnotation.Region\">\r\n            <summary>\r\n            Specifies the regions of the annotation. They are\r\n             Chart - Annotation renders based on chart coordinates.\r\n             Series - Annotation renders based on series coordinates.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Regions","Common.PropertyName":"Region"}},{"Kind":"Components.Component","Name":"X","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAnnotation.X\">\r\n            <summary>\r\n            if set coordinateUnit as `Pixel` X specifies the axis value\r\n            else is specifies pixel or percentage of coordinate.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"XAxisName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAnnotation.XAxisName\">\r\n            <summary>\r\n            The name of horizontal axis associated with the annotation.\r\n            It requires `Axes` of chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"XAxisName"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAnnotation.Y\">\r\n            <summary>\r\n            if set coordinateUnit as `Pixel` Y specifies the axis value\r\n            else is specifies pixel or percentage of coordinate.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Y"}},{"Kind":"Components.Component","Name":"YAxisName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAnnotation.YAxisName\">\r\n            <summary>\r\n            The name of vertical axis associated with the annotation.\r\n            It requires `Axes` of chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"YAxisName"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAnnotation","Common.TypeNameIdentifier":"ChartAnnotation"}},{"HashCode":2141019471,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAnnotation.ContentTemplate","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAnnotation.ContentTemplate\">\r\n            <summary>\r\n            Content Template for the annotation.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ContentTemplate","ParentTag":"ChartAnnotation"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAnnotation.ContentTemplate","Common.TypeNameIdentifier":"ChartAnnotation"}},{"HashCode":-2057816327,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAnnotation.ContentTemplate","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAnnotation.ContentTemplate\">\r\n            <summary>\r\n            Content Template for the annotation.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ContentTemplate","ParentTag":"Syncfusion.Blazor.Charts.ChartAnnotation"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAnnotation.ContentTemplate","Common.TypeNameIdentifier":"ChartAnnotation"}},{"HashCode":1573317601,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAnnotation.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartAnnotation"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAnnotation.ChildContent","Common.TypeNameIdentifier":"ChartAnnotation"}},{"HashCode":1779972895,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAnnotation.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartAnnotation"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAnnotation.ChildContent","Common.TypeNameIdentifier":"ChartAnnotation"}},{"HashCode":684115323,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAnnotations","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartAnnotations\">\r\n            <summary>\r\n            Annotation is a user defined HTML element that can be placed on chart\r\n            We can use annotations to pile up the visual elegance of the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartAnnotations"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAnnotations","Common.TypeNameIdentifier":"ChartAnnotations"}},{"HashCode":2039171968,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAnnotations","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartAnnotations\">\r\n            <summary>\r\n            Annotation is a user defined HTML element that can be placed on chart\r\n            We can use annotations to pile up the visual elegance of the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartAnnotations"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAnnotations","Common.TypeNameIdentifier":"ChartAnnotations"}},{"HashCode":347767752,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAnnotations.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartAnnotations"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAnnotations.ChildContent","Common.TypeNameIdentifier":"ChartAnnotations"}},{"HashCode":-1509154864,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAnnotations.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartAnnotations"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAnnotations.ChildContent","Common.TypeNameIdentifier":"ChartAnnotations"}},{"HashCode":338342020,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAnnotationRendererContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartAnnotationRendererContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAnnotationRendererContainer","Common.TypeNameIdentifier":"ChartAnnotationRendererContainer"}},{"HashCode":1707032939,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAnnotationRendererContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartAnnotationRendererContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAnnotationRendererContainer","Common.TypeNameIdentifier":"ChartAnnotationRendererContainer"}},{"HashCode":-1945155599,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAnnotationRendererContainer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartAnnotationRendererContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAnnotationRendererContainer.ChildContent","Common.TypeNameIdentifier":"ChartAnnotationRendererContainer"}},{"HashCode":-373723620,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAnnotationRendererContainer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartAnnotationRendererContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAnnotationRendererContainer.ChildContent","Common.TypeNameIdentifier":"ChartAnnotationRendererContainer"}},{"HashCode":1198309859,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartArea","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartArea\">\r\n            <summary>\r\n            Options to customize the ChartArea of the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Background","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartArea.Background\">\r\n            <summary>\r\n            The background of the chart area that accepts value in hex and rgba as a valid CSS color string..\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"BackgroundImage","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartArea.BackgroundImage\">\r\n            <summary>\r\n            The background image of the chart area that accepts value in string as url link or location of an image.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"BackgroundImage"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartArea.Width\">\r\n            <summary>  \r\n             Gets and sets the width for chart area. Accepts value in percentage and in pixel.  \r\n            </summary>\r\n            <value> \r\n             Specifies the width for the chart area. The default value is <c>null</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartArea.Opacity\">\r\n            <summary>\r\n            The opacity for background.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartAreaBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartArea.Border\">\r\n            <summary>\r\n            Options to customize the border of the chart area.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAreaBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartArea","Common.TypeNameIdentifier":"ChartArea"}},{"HashCode":262324269,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartArea","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartArea\">\r\n            <summary>\r\n            Options to customize the ChartArea of the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Background","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartArea.Background\">\r\n            <summary>\r\n            The background of the chart area that accepts value in hex and rgba as a valid CSS color string..\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"BackgroundImage","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartArea.BackgroundImage\">\r\n            <summary>\r\n            The background image of the chart area that accepts value in string as url link or location of an image.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"BackgroundImage"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartArea.Width\">\r\n            <summary>  \r\n             Gets and sets the width for chart area. Accepts value in percentage and in pixel.  \r\n            </summary>\r\n            <value> \r\n             Specifies the width for the chart area. The default value is <c>null</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartArea.Opacity\">\r\n            <summary>\r\n            The opacity for background.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartAreaBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartArea.Border\">\r\n            <summary>\r\n            Options to customize the border of the chart area.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAreaBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartArea","Common.TypeNameIdentifier":"ChartArea"}},{"HashCode":-811726401,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartArea.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartArea"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartArea.ChildContent","Common.TypeNameIdentifier":"ChartArea"}},{"HashCode":433856295,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartArea.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartArea"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartArea.ChildContent","Common.TypeNameIdentifier":"ChartArea"}},{"HashCode":-1178134469,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAreaBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartAreaBorder\">\r\n            <summary>\r\n            Options to customize the ChartArea border of the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartAreaBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAreaBorder.Width\">\r\n            <summary>\r\n            The width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAreaBorder","Common.TypeNameIdentifier":"ChartAreaBorder"}},{"HashCode":1327160609,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAreaBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartAreaBorder\">\r\n            <summary>\r\n            Options to customize the ChartArea border of the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartAreaBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAreaBorder.Width\">\r\n            <summary>\r\n            The width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAreaBorder","Common.TypeNameIdentifier":"ChartAreaBorder"}},{"HashCode":-650617383,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAreaBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartAreaBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAreaBorder.ChildContent","Common.TypeNameIdentifier":"ChartAreaBorder"}},{"HashCode":-1053325964,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAreaBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartAreaBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAreaBorder.ChildContent","Common.TypeNameIdentifier":"ChartAreaBorder"}},{"HashCode":-2100549545,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartBorder\">\r\n            <summary>\r\n            Options to customize the Border of the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartBorder.Width\">\r\n            <summary>\r\n            The width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartBorder","Common.TypeNameIdentifier":"ChartBorder"}},{"HashCode":-374417883,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartBorder\">\r\n            <summary>\r\n            Options to customize the Border of the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartBorder.Width\">\r\n            <summary>\r\n            The width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartBorder","Common.TypeNameIdentifier":"ChartBorder"}},{"HashCode":-1352133210,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartBorder.ChildContent","Common.TypeNameIdentifier":"ChartBorder"}},{"HashCode":768498412,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartBorder.ChildContent","Common.TypeNameIdentifier":"ChartBorder"}},{"HashCode":-365736058,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartMargin","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartMargin\">\r\n            <summary>\r\n            Options to customize the margin of the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartMargin"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Bottom","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin.Bottom\">\r\n            <summary>\r\n            Sets and gets the bottom margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Bottom"}},{"Kind":"Components.Component","Name":"Left","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin.Left\">\r\n            <summary>\r\n            Sets and gets the left margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Left"}},{"Kind":"Components.Component","Name":"Right","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin.Right\">\r\n            <summary>\r\n            Sets and gets the right margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Right"}},{"Kind":"Components.Component","Name":"Top","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin.Top\">\r\n            <summary>\r\n            Sets and gets the top margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Top"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartMargin","Common.TypeNameIdentifier":"ChartMargin"}},{"HashCode":848351437,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartMargin","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartMargin\">\r\n            <summary>\r\n            Options to customize the margin of the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartMargin"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Bottom","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin.Bottom\">\r\n            <summary>\r\n            Sets and gets the bottom margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Bottom"}},{"Kind":"Components.Component","Name":"Left","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin.Left\">\r\n            <summary>\r\n            Sets and gets the left margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Left"}},{"Kind":"Components.Component","Name":"Right","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin.Right\">\r\n            <summary>\r\n            Sets and gets the right margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Right"}},{"Kind":"Components.Component","Name":"Top","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin.Top\">\r\n            <summary>\r\n            Sets and gets the top margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Top"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartMargin","Common.TypeNameIdentifier":"ChartMargin"}},{"HashCode":-1383029354,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartMargin.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartMargin"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartMargin.ChildContent","Common.TypeNameIdentifier":"ChartMargin"}},{"HashCode":-667411084,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartMargin.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartMargin"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartMargin.ChildContent","Common.TypeNameIdentifier":"ChartMargin"}},{"HashCode":983074233,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartSubTitleStyle","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartSubTitleStyle\">\r\n            <summary>\r\n             Options to customize the subtitle style of the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartSubTitleStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Color\">\r\n            <summary>\r\n            Sets and gets the color for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSubTitleStyle","Common.TypeNameIdentifier":"ChartSubTitleStyle"}},{"HashCode":601101033,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartSubTitleStyle","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartSubTitleStyle\">\r\n            <summary>\r\n             Options to customize the subtitle style of the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartSubTitleStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Color\">\r\n            <summary>\r\n            Sets and gets the color for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSubTitleStyle","Common.TypeNameIdentifier":"ChartSubTitleStyle"}},{"HashCode":-772983687,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartSubTitleStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartSubTitleStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSubTitleStyle.ChildContent","Common.TypeNameIdentifier":"ChartSubTitleStyle"}},{"HashCode":-36575989,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartSubTitleStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartSubTitleStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSubTitleStyle.ChildContent","Common.TypeNameIdentifier":"ChartSubTitleStyle"}},{"HashCode":712687384,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartTitleStyle","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartTitleStyle\">\r\n            <summary>\r\n             Options to customize the title style of the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartTitleStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Color\">\r\n            <summary>\r\n            Sets and gets the color for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTitleStyle","Common.TypeNameIdentifier":"ChartTitleStyle"}},{"HashCode":455555819,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartTitleStyle","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartTitleStyle\">\r\n            <summary>\r\n             Options to customize the title style of the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartTitleStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Color\">\r\n            <summary>\r\n            Sets and gets the color for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTitleStyle","Common.TypeNameIdentifier":"ChartTitleStyle"}},{"HashCode":-251483275,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartTitleStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartTitleStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTitleStyle.ChildContent","Common.TypeNameIdentifier":"ChartTitleStyle"}},{"HashCode":1443246039,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartTitleStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartTitleStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTitleStyle.ChildContent","Common.TypeNameIdentifier":"ChartTitleStyle"}},{"HashCode":-192854847,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartColumn","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartColumn.Border\">\r\n            <summary>\r\n            Options to customize the border of the columns.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"BorderColor","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartColumn.BorderColor\">\r\n            <summary>\r\n            Option to customize the border color of the chart column.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"BorderColor"}},{"Kind":"Components.Component","Name":"BorderWidth","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartColumn.BorderWidth\">\r\n            <summary>\r\n            Option to customize width of the chart column border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"BorderWidth"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartColumn.Width\">\r\n            <summary>\r\n            The width of the column as a string accepts input both as like '100px' or '100%'.\r\n            If specified as '100%, column renders to the full width of its chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartColumn","Common.TypeNameIdentifier":"ChartColumn"}},{"HashCode":-455094010,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartColumn","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartColumn"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartColumn.Border\">\r\n            <summary>\r\n            Options to customize the border of the columns.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"BorderColor","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartColumn.BorderColor\">\r\n            <summary>\r\n            Option to customize the border color of the chart column.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"BorderColor"}},{"Kind":"Components.Component","Name":"BorderWidth","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartColumn.BorderWidth\">\r\n            <summary>\r\n            Option to customize width of the chart column border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"BorderWidth"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartColumn.Width\">\r\n            <summary>\r\n            The width of the column as a string accepts input both as like '100px' or '100%'.\r\n            If specified as '100%, column renders to the full width of its chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartColumn","Common.TypeNameIdentifier":"ChartColumn"}},{"HashCode":-533936824,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartColumn.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartColumn"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartColumn.ChildContent","Common.TypeNameIdentifier":"ChartColumn"}},{"HashCode":-541765409,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartColumn.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartColumn"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartColumn.ChildContent","Common.TypeNameIdentifier":"ChartColumn"}},{"HashCode":1531033153,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartColumns","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartColumns"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartColumns","Common.TypeNameIdentifier":"ChartColumns"}},{"HashCode":-551196409,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartColumns","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartColumns"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartColumns","Common.TypeNameIdentifier":"ChartColumns"}},{"HashCode":-1069373362,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartColumns.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartColumns"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartColumns.ChildContent","Common.TypeNameIdentifier":"ChartColumns"}},{"HashCode":-73956193,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartColumns.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartColumns"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartColumns.ChildContent","Common.TypeNameIdentifier":"ChartColumns"}},{"HashCode":1637763950,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartRow","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartRow.Border\">\r\n            <summary>\r\n            Options to customize the border of the columns.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"BorderColor","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartRow.BorderColor\">\r\n            <summary>\r\n            Option to customize the border color of the chart row.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"BorderColor"}},{"Kind":"Components.Component","Name":"BorderWidth","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartRow.BorderWidth\">\r\n            <summary>\r\n            Option to customize width of the chart row border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"BorderWidth"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartRow.Height\">\r\n            <summary>\r\n            The height of the row as a string accepts input both as like '100px' or '100%'.\r\n            If specified as '100%, row renders to the full height of its chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartRow","Common.TypeNameIdentifier":"ChartRow"}},{"HashCode":1776597112,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartRow","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartRow"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartRow.Border\">\r\n            <summary>\r\n            Options to customize the border of the columns.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"BorderColor","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartRow.BorderColor\">\r\n            <summary>\r\n            Option to customize the border color of the chart row.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"BorderColor"}},{"Kind":"Components.Component","Name":"BorderWidth","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartRow.BorderWidth\">\r\n            <summary>\r\n            Option to customize width of the chart row border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"BorderWidth"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartRow.Height\">\r\n            <summary>\r\n            The height of the row as a string accepts input both as like '100px' or '100%'.\r\n            If specified as '100%, row renders to the full height of its chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartRow","Common.TypeNameIdentifier":"ChartRow"}},{"HashCode":-565610442,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartRow.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartRow"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartRow.ChildContent","Common.TypeNameIdentifier":"ChartRow"}},{"HashCode":447658315,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartRow.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartRow"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartRow.ChildContent","Common.TypeNameIdentifier":"ChartRow"}},{"HashCode":489852138,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartRows","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartRows"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartRows","Common.TypeNameIdentifier":"ChartRows"}},{"HashCode":-523088845,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartRows","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartRows"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartRows","Common.TypeNameIdentifier":"ChartRows"}},{"HashCode":-602976714,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartRows.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartRows"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartRows.ChildContent","Common.TypeNameIdentifier":"ChartRows"}},{"HashCode":1990027,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartRows.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartRows"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartRows.ChildContent","Common.TypeNameIdentifier":"ChartRows"}},{"HashCode":-1379176019,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxes","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartAxes"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxes","Common.TypeNameIdentifier":"ChartAxes"}},{"HashCode":1529796647,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxes","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartAxes"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxes","Common.TypeNameIdentifier":"ChartAxes"}},{"HashCode":-1178229823,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxes.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartAxes"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxes.ChildContent","Common.TypeNameIdentifier":"ChartAxes"}},{"HashCode":1936871250,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxes.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartAxes"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxes.ChildContent","Common.TypeNameIdentifier":"ChartAxes"}},{"HashCode":-246758896,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxis","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartAxis"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsIndexed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.IsIndexed\">\r\n            <summary>\r\n            Specifies indexed category  axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsIndexed"}},{"Kind":"Components.Component","Name":"IsInversed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.IsInversed\">\r\n            <summary>\r\n            It specifies whether the axis to be rendered in inversed manner or not.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsInversed"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Name\">\r\n            <summary>\r\n            Unique identifier of an axis.\r\n            To associate an axis with the series, set this name to the xAxisName/yAxisName properties of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"OpposedPosition","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.OpposedPosition\">\r\n            <summary>\r\n            If set to true, the axis will render at the opposite side of its default position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"OpposedPosition"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Title\">\r\n            <summary>\r\n            Specifies the title of an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"ValueType","TypeName":"Syncfusion.Blazor.Charts.ValueType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ValueType\">\r\n            <summary>\r\n            Specifies the type of data the axis is handling.\r\n            Double:  Renders a numeric axis.\r\n            DateTime: Renders a dateTime axis.\r\n            Category: Renders a category axis.\r\n            Logarithmic: Renders a log axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ValueType","Common.PropertyName":"ValueType"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Visible\">\r\n            <summary>\r\n            If set to true, axis label will be visible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"Coefficient","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Coefficient\">\r\n            <summary>\r\n            The polar radar radius position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Coefficient"}},{"Kind":"Components.Component","Name":"ColumnIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ColumnIndex\">\r\n            <summary>\r\n            Specifies the index of the column where the axis is associated,\r\n            when the chart area is divided into multiple plot areas by using `Columns`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ColumnIndex"}},{"Kind":"Components.Component","Name":"CrossesAt","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.CrossesAt\">\r\n            <summary>\r\n            Specifies the value at which the axis line has to be intersect with the vertical axis or vice versa.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"CrossesAt"}},{"Kind":"Components.Component","Name":"CrossesInAxis","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.CrossesInAxis\">\r\n            <summary>\r\n            Specifies axis name with which the axis line has to be crossed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"CrossesInAxis"}},{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Description\">\r\n            <summary>\r\n            Description for axis and its element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Description"}},{"Kind":"Components.Component","Name":"DesiredIntervals","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.DesiredIntervals\">\r\n            <summary>\r\n            With this property, you can request axis to calculate intervals approximately equal to your specified interval.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"DesiredIntervals"}},{"Kind":"Components.Component","Name":"EdgeLabelPlacement","TypeName":"Syncfusion.Blazor.Charts.EdgeLabelPlacement","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.EdgeLabelPlacement\">\r\n            <summary>\r\n            Specifies the position of labels at the edge of the axis.They are,\r\n             None: No action will be performed.\r\n             Hide: Edge label will be hidden.\r\n             Shift: Shifts the edge labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.EdgeLabelPlacement","Common.PropertyName":"EdgeLabelPlacement"}},{"Kind":"Components.Component","Name":"EnableAutoIntervalOnZooming","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.EnableAutoIntervalOnZooming\">\r\n            <summary>\r\n            If set to true, axis interval will be calculated automatically with respect to the zoomed range.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableAutoIntervalOnZooming"}},{"Kind":"Components.Component","Name":"EnableScrollbarOnZooming","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.EnableScrollbarOnZooming\">\r\n            <summary>\r\n            Enables the scrollbar for zooming.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableScrollbarOnZooming"}},{"Kind":"Components.Component","Name":"EnableTrim","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.EnableTrim\">\r\n            <summary>\r\n            Specifies the Trim property for an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableTrim"}},{"Kind":"Components.Component","Name":"IntervalType","TypeName":"Syncfusion.Blazor.Charts.IntervalType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.IntervalType\">\r\n            <summary>\r\n            Specifies the types like `Years`, `Months`, `Days`, `Hours`, `Minutes`, `Seconds` in date time axis.They are,\r\n            Auto: Defines the interval of the axis based on data.\r\n            Years: Defines the interval of the axis in years.\r\n            Months: Defines the interval of the axis in months.\r\n            Days: Defines the interval of the axis in days.\r\n            Hours: Defines the interval of the axis in hours.\r\n            Minutes: Defines the interval of the axis in minutes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.IntervalType","Common.PropertyName":"IntervalType"}},{"Kind":"Components.Component","Name":"Interval","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Interval\">\r\n            <summary>\r\n            Specifies the interval for an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Interval"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Minimum\">\r\n            <summary>\r\n            Specifies the minimum range of an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"LabelPlacement","TypeName":"Syncfusion.Blazor.Charts.LabelPlacement","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelPlacement\">\r\n            <summary>\r\n            Specifies the placement of a label for category axis. They are,\r\n            betweenTicks: Renders the label between the ticks.\r\n            onTicks: Renders the label on the ticks.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LabelPlacement","Common.PropertyName":"LabelPlacement"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Maximum\">\r\n            <summary>\r\n            Specifies the maximum range of an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"ZoomFactor","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ZoomFactor\">\r\n            <summary>\r\n            The axis is scaled by this factor. When zoomFactor is 0.5, the chart is scaled by 200% along this axis. Value ranges from 0 to 1.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ZoomFactor"}},{"Kind":"Components.Component","Name":"ZoomPosition","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ZoomPosition\">\r\n            <summary>\r\n            Position of the zoomed axis. Value ranges from 0 to 1.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ZoomPosition"}},{"Kind":"Components.Component","Name":"LabelFormat","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelFormat\">\r\n            <summary>\r\n            Used to format the axis label that accepts any global string format like 'C', 'n1', 'P' etc.\r\n            It also accepts placeholder like '{value}°C' in which value represent the axis label, e.g, 20°C.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"LabelFormat"}},{"Kind":"Components.Component","Name":"LabelIntersectAction","TypeName":"Syncfusion.Blazor.Charts.LabelIntersectAction","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelIntersectAction\">\r\n            <summary>\r\n            Specifies the actions like `None`, `Hide`, `Trim`, `Wrap`, `MultipleRows`, `Rotate45`, and `Rotate90`\r\n            when the axis labels intersect with each other.They are,\r\n            None: Shows all the labels.\r\n            Hide: Hides the label when it intersects.\r\n            Trim: Trim the label when it intersects.\r\n            Wrap: Wrap the label when it intersects.\r\n            MultipleRows: Shows the label in MultipleRows when it intersects.\r\n            Rotate45: Rotates the label to 45 degree when it intersects.\r\n            Rotate90: Rotates the label to 90 degree when it intersects.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LabelIntersectAction","Common.PropertyName":"LabelIntersectAction"}},{"Kind":"Components.Component","Name":"LabelPadding","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelPadding\">\r\n            <summary>\r\n            Specifies the labelPadding from axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"LabelPadding"}},{"Kind":"Components.Component","Name":"LabelPosition","TypeName":"Syncfusion.Blazor.Charts.AxisPosition","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelPosition\">\r\n            <summary>\r\n            Specifies the placement of a labels to the axis line. They are,\r\n            inside: Renders the labels inside to the axis line.\r\n            outside: Renders the labels outside to the axis line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AxisPosition","Common.PropertyName":"LabelPosition"}},{"Kind":"Components.Component","Name":"LabelRotation","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelRotation\">\r\n            <summary>\r\n            The angle to which the axis label gets rotated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"LabelRotation"}},{"Kind":"Components.Component","Name":"LabelStyle","TypeName":"Syncfusion.Blazor.Charts.ChartAxisLabelStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelStyle\">\r\n            <summary>\r\n            Options to customize the axis label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisLabelStyle","Common.PropertyName":"LabelStyle"}},{"Kind":"Components.Component","Name":"LineStyle","TypeName":"Syncfusion.Blazor.Charts.ChartAxisLineStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LineStyle\">\r\n            <summary>\r\n            Options for customizing axis lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisLineStyle","Common.PropertyName":"LineStyle"}},{"Kind":"Components.Component","Name":"LogBase","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LogBase\">\r\n            <summary>\r\n            The base value for logarithmic axis. It requires `ValueType` to be `Logarithmic`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"LogBase"}},{"Kind":"Components.Component","Name":"MajorGridLines","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMajorGridLines","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MajorGridLines\">\r\n            <summary>\r\n            Options for customizing major grid lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMajorGridLines","Common.PropertyName":"MajorGridLines"}},{"Kind":"Components.Component","Name":"MajorTickLines","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMajorTickLines","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MajorTickLines\">\r\n            <summary>\r\n            Options for customizing major tick lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMajorTickLines","Common.PropertyName":"MajorTickLines"}},{"Kind":"Components.Component","Name":"MaximumLabelWidth","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MaximumLabelWidth\">\r\n            <summary>\r\n            Specifies the maximum width of an axis label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MaximumLabelWidth"}},{"Kind":"Components.Component","Name":"MaximumLabels","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MaximumLabels\">\r\n            <summary>\r\n            The maximum number of label count per 100 pixels with respect to the axis length.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MaximumLabels"}},{"Kind":"Components.Component","Name":"MinorGridLines","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMinorGridLines","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MinorGridLines\">\r\n            <summary>\r\n            Options for customizing minor grid lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMinorGridLines","Common.PropertyName":"MinorGridLines"}},{"Kind":"Components.Component","Name":"MinorTickLines","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMinorTickLines","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MinorTickLines\">\r\n            <summary>\r\n            Options for customizing minor tick lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMinorTickLines","Common.PropertyName":"MinorTickLines"}},{"Kind":"Components.Component","Name":"MinorTicksPerInterval","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MinorTicksPerInterval\">\r\n            <summary>\r\n            Specifies the number of minor ticks per interval.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MinorTicksPerInterval"}},{"Kind":"Components.Component","Name":"PlaceNextToAxisLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlaceNextToAxisLine\">\r\n            <summary>\r\n            Specifies whether axis elements like axis labels, axis title, etc has to be crossed with axis line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"PlaceNextToAxisLine"}},{"Kind":"Components.Component","Name":"PlotOffset","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffset\">\r\n            <summary>\r\n            Left and right padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffset"}},{"Kind":"Components.Component","Name":"PlotOffsetBottom","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffsetBottom\">\r\n            <summary>\r\n            Bottom padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffsetBottom"}},{"Kind":"Components.Component","Name":"PlotOffsetLeft","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffsetLeft\">\r\n            <summary>\r\n            Left padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffsetLeft"}},{"Kind":"Components.Component","Name":"PlotOffsetRight","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffsetRight\">\r\n            <summary>\r\n            Right padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffsetRight"}},{"Kind":"Components.Component","Name":"PlotOffsetTop","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffsetTop\">\r\n            <summary>\r\n            Top padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffsetTop"}},{"Kind":"Components.Component","Name":"RangePadding","TypeName":"Syncfusion.Blazor.Charts.ChartRangePadding","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.RangePadding\">\r\n            <summary>\r\n            Specifies the padding for the axis range in terms of interval.They are,\r\n            none: Padding cannot be applied to the axis.\r\n            normal: Padding is applied to the axis based on the range calculation.\r\n            additional: Interval of the axis is added as padding to the minimum and maximum values of the range.\r\n            round: Axis range is rounded to the nearest possible value divided by the interval.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartRangePadding","Common.PropertyName":"RangePadding"}},{"Kind":"Components.Component","Name":"TitleStyle","TypeName":"Syncfusion.Blazor.Charts.ChartAxisTitleStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.TitleStyle\">\r\n            <summary>\r\n            Options for customizing the axis title.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisTitleStyle","Common.PropertyName":"TitleStyle"}},{"Kind":"Components.Component","Name":"RowIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.RowIndex\">\r\n            <summary>\r\n            Specifies the index of the row where the axis is associated, when the chart area is divided into multiple plot areas by using `Rows`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"RowIndex"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Format\">\r\n            <summary>\r\n            Specifies the skeleton format in which the dateTime format will process.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Span","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Span\">\r\n            <summary>\r\n            Specifies the number of `Columns` or `rows` an axis has to span horizontally or vertically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Span"}},{"Kind":"Components.Component","Name":"StartAngle","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.StartAngle\">\r\n            <summary>\r\n            The start angle for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"StartAngle"}},{"Kind":"Components.Component","Name":"StartFromZero","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.StartFromZero\">\r\n            <summary>\r\n            It specifies whether the axis to be start from zero.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"StartFromZero"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.TabIndex\">\r\n            <summary>\r\n            TabIndex value for the axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TickPosition","TypeName":"Syncfusion.Blazor.Charts.AxisPosition","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.TickPosition\">\r\n            <summary>\r\n            Specifies the placement of a ticks to the axis line. They are,\r\n            inside: Renders the ticks inside to the axis line.\r\n            outside: Renders the ticks outside to the axis line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AxisPosition","Common.PropertyName":"TickPosition"}},{"Kind":"Components.Component","Name":"StripLines","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartStripline>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.StripLines\">\r\n            <summary>\r\n            Specifies the stripLine collection for the axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.Charts.ChartStripline>","Common.PropertyName":"StripLines"}},{"Kind":"Components.Component","Name":"MultiLevelLabels","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartMultiLevelLabel>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MultiLevelLabels\">\r\n            <summary>\r\n            Specifies the multi level labels collection for the axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.Charts.ChartMultiLevelLabel>","Common.PropertyName":"MultiLevelLabels"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartAxisLabelBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Border\">\r\n            <summary>\r\n            Border of the multi level labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisLabelBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"ScrollbarSettings","TypeName":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ScrollbarSettings\">\r\n            <summary>\r\n            Option to customize scrollbar with lazy loading.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings","Common.PropertyName":"ScrollbarSettings"}},{"Kind":"Components.Component","Name":"CrosshairTooltip","TypeName":"Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.CrosshairTooltip\">\r\n            <summary>\r\n            Options to customize the crosshair ToolTip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip","Common.PropertyName":"CrosshairTooltip"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxis","Common.TypeNameIdentifier":"ChartAxis"}},{"HashCode":1177738410,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxis","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartAxis"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsIndexed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.IsIndexed\">\r\n            <summary>\r\n            Specifies indexed category  axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsIndexed"}},{"Kind":"Components.Component","Name":"IsInversed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.IsInversed\">\r\n            <summary>\r\n            It specifies whether the axis to be rendered in inversed manner or not.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsInversed"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Name\">\r\n            <summary>\r\n            Unique identifier of an axis.\r\n            To associate an axis with the series, set this name to the xAxisName/yAxisName properties of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"OpposedPosition","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.OpposedPosition\">\r\n            <summary>\r\n            If set to true, the axis will render at the opposite side of its default position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"OpposedPosition"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Title\">\r\n            <summary>\r\n            Specifies the title of an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"ValueType","TypeName":"Syncfusion.Blazor.Charts.ValueType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ValueType\">\r\n            <summary>\r\n            Specifies the type of data the axis is handling.\r\n            Double:  Renders a numeric axis.\r\n            DateTime: Renders a dateTime axis.\r\n            Category: Renders a category axis.\r\n            Logarithmic: Renders a log axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ValueType","Common.PropertyName":"ValueType"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Visible\">\r\n            <summary>\r\n            If set to true, axis label will be visible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"Coefficient","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Coefficient\">\r\n            <summary>\r\n            The polar radar radius position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Coefficient"}},{"Kind":"Components.Component","Name":"ColumnIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ColumnIndex\">\r\n            <summary>\r\n            Specifies the index of the column where the axis is associated,\r\n            when the chart area is divided into multiple plot areas by using `Columns`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ColumnIndex"}},{"Kind":"Components.Component","Name":"CrossesAt","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.CrossesAt\">\r\n            <summary>\r\n            Specifies the value at which the axis line has to be intersect with the vertical axis or vice versa.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"CrossesAt"}},{"Kind":"Components.Component","Name":"CrossesInAxis","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.CrossesInAxis\">\r\n            <summary>\r\n            Specifies axis name with which the axis line has to be crossed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"CrossesInAxis"}},{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Description\">\r\n            <summary>\r\n            Description for axis and its element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Description"}},{"Kind":"Components.Component","Name":"DesiredIntervals","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.DesiredIntervals\">\r\n            <summary>\r\n            With this property, you can request axis to calculate intervals approximately equal to your specified interval.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"DesiredIntervals"}},{"Kind":"Components.Component","Name":"EdgeLabelPlacement","TypeName":"Syncfusion.Blazor.Charts.EdgeLabelPlacement","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.EdgeLabelPlacement\">\r\n            <summary>\r\n            Specifies the position of labels at the edge of the axis.They are,\r\n             None: No action will be performed.\r\n             Hide: Edge label will be hidden.\r\n             Shift: Shifts the edge labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.EdgeLabelPlacement","Common.PropertyName":"EdgeLabelPlacement"}},{"Kind":"Components.Component","Name":"EnableAutoIntervalOnZooming","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.EnableAutoIntervalOnZooming\">\r\n            <summary>\r\n            If set to true, axis interval will be calculated automatically with respect to the zoomed range.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableAutoIntervalOnZooming"}},{"Kind":"Components.Component","Name":"EnableScrollbarOnZooming","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.EnableScrollbarOnZooming\">\r\n            <summary>\r\n            Enables the scrollbar for zooming.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableScrollbarOnZooming"}},{"Kind":"Components.Component","Name":"EnableTrim","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.EnableTrim\">\r\n            <summary>\r\n            Specifies the Trim property for an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableTrim"}},{"Kind":"Components.Component","Name":"IntervalType","TypeName":"Syncfusion.Blazor.Charts.IntervalType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.IntervalType\">\r\n            <summary>\r\n            Specifies the types like `Years`, `Months`, `Days`, `Hours`, `Minutes`, `Seconds` in date time axis.They are,\r\n            Auto: Defines the interval of the axis based on data.\r\n            Years: Defines the interval of the axis in years.\r\n            Months: Defines the interval of the axis in months.\r\n            Days: Defines the interval of the axis in days.\r\n            Hours: Defines the interval of the axis in hours.\r\n            Minutes: Defines the interval of the axis in minutes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.IntervalType","Common.PropertyName":"IntervalType"}},{"Kind":"Components.Component","Name":"Interval","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Interval\">\r\n            <summary>\r\n            Specifies the interval for an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Interval"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Minimum\">\r\n            <summary>\r\n            Specifies the minimum range of an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"LabelPlacement","TypeName":"Syncfusion.Blazor.Charts.LabelPlacement","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelPlacement\">\r\n            <summary>\r\n            Specifies the placement of a label for category axis. They are,\r\n            betweenTicks: Renders the label between the ticks.\r\n            onTicks: Renders the label on the ticks.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LabelPlacement","Common.PropertyName":"LabelPlacement"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Maximum\">\r\n            <summary>\r\n            Specifies the maximum range of an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"ZoomFactor","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ZoomFactor\">\r\n            <summary>\r\n            The axis is scaled by this factor. When zoomFactor is 0.5, the chart is scaled by 200% along this axis. Value ranges from 0 to 1.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ZoomFactor"}},{"Kind":"Components.Component","Name":"ZoomPosition","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ZoomPosition\">\r\n            <summary>\r\n            Position of the zoomed axis. Value ranges from 0 to 1.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ZoomPosition"}},{"Kind":"Components.Component","Name":"LabelFormat","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelFormat\">\r\n            <summary>\r\n            Used to format the axis label that accepts any global string format like 'C', 'n1', 'P' etc.\r\n            It also accepts placeholder like '{value}°C' in which value represent the axis label, e.g, 20°C.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"LabelFormat"}},{"Kind":"Components.Component","Name":"LabelIntersectAction","TypeName":"Syncfusion.Blazor.Charts.LabelIntersectAction","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelIntersectAction\">\r\n            <summary>\r\n            Specifies the actions like `None`, `Hide`, `Trim`, `Wrap`, `MultipleRows`, `Rotate45`, and `Rotate90`\r\n            when the axis labels intersect with each other.They are,\r\n            None: Shows all the labels.\r\n            Hide: Hides the label when it intersects.\r\n            Trim: Trim the label when it intersects.\r\n            Wrap: Wrap the label when it intersects.\r\n            MultipleRows: Shows the label in MultipleRows when it intersects.\r\n            Rotate45: Rotates the label to 45 degree when it intersects.\r\n            Rotate90: Rotates the label to 90 degree when it intersects.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LabelIntersectAction","Common.PropertyName":"LabelIntersectAction"}},{"Kind":"Components.Component","Name":"LabelPadding","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelPadding\">\r\n            <summary>\r\n            Specifies the labelPadding from axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"LabelPadding"}},{"Kind":"Components.Component","Name":"LabelPosition","TypeName":"Syncfusion.Blazor.Charts.AxisPosition","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelPosition\">\r\n            <summary>\r\n            Specifies the placement of a labels to the axis line. They are,\r\n            inside: Renders the labels inside to the axis line.\r\n            outside: Renders the labels outside to the axis line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AxisPosition","Common.PropertyName":"LabelPosition"}},{"Kind":"Components.Component","Name":"LabelRotation","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelRotation\">\r\n            <summary>\r\n            The angle to which the axis label gets rotated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"LabelRotation"}},{"Kind":"Components.Component","Name":"LabelStyle","TypeName":"Syncfusion.Blazor.Charts.ChartAxisLabelStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelStyle\">\r\n            <summary>\r\n            Options to customize the axis label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisLabelStyle","Common.PropertyName":"LabelStyle"}},{"Kind":"Components.Component","Name":"LineStyle","TypeName":"Syncfusion.Blazor.Charts.ChartAxisLineStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LineStyle\">\r\n            <summary>\r\n            Options for customizing axis lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisLineStyle","Common.PropertyName":"LineStyle"}},{"Kind":"Components.Component","Name":"LogBase","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LogBase\">\r\n            <summary>\r\n            The base value for logarithmic axis. It requires `ValueType` to be `Logarithmic`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"LogBase"}},{"Kind":"Components.Component","Name":"MajorGridLines","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMajorGridLines","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MajorGridLines\">\r\n            <summary>\r\n            Options for customizing major grid lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMajorGridLines","Common.PropertyName":"MajorGridLines"}},{"Kind":"Components.Component","Name":"MajorTickLines","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMajorTickLines","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MajorTickLines\">\r\n            <summary>\r\n            Options for customizing major tick lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMajorTickLines","Common.PropertyName":"MajorTickLines"}},{"Kind":"Components.Component","Name":"MaximumLabelWidth","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MaximumLabelWidth\">\r\n            <summary>\r\n            Specifies the maximum width of an axis label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MaximumLabelWidth"}},{"Kind":"Components.Component","Name":"MaximumLabels","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MaximumLabels\">\r\n            <summary>\r\n            The maximum number of label count per 100 pixels with respect to the axis length.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MaximumLabels"}},{"Kind":"Components.Component","Name":"MinorGridLines","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMinorGridLines","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MinorGridLines\">\r\n            <summary>\r\n            Options for customizing minor grid lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMinorGridLines","Common.PropertyName":"MinorGridLines"}},{"Kind":"Components.Component","Name":"MinorTickLines","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMinorTickLines","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MinorTickLines\">\r\n            <summary>\r\n            Options for customizing minor tick lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMinorTickLines","Common.PropertyName":"MinorTickLines"}},{"Kind":"Components.Component","Name":"MinorTicksPerInterval","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MinorTicksPerInterval\">\r\n            <summary>\r\n            Specifies the number of minor ticks per interval.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MinorTicksPerInterval"}},{"Kind":"Components.Component","Name":"PlaceNextToAxisLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlaceNextToAxisLine\">\r\n            <summary>\r\n            Specifies whether axis elements like axis labels, axis title, etc has to be crossed with axis line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"PlaceNextToAxisLine"}},{"Kind":"Components.Component","Name":"PlotOffset","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffset\">\r\n            <summary>\r\n            Left and right padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffset"}},{"Kind":"Components.Component","Name":"PlotOffsetBottom","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffsetBottom\">\r\n            <summary>\r\n            Bottom padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffsetBottom"}},{"Kind":"Components.Component","Name":"PlotOffsetLeft","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffsetLeft\">\r\n            <summary>\r\n            Left padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffsetLeft"}},{"Kind":"Components.Component","Name":"PlotOffsetRight","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffsetRight\">\r\n            <summary>\r\n            Right padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffsetRight"}},{"Kind":"Components.Component","Name":"PlotOffsetTop","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffsetTop\">\r\n            <summary>\r\n            Top padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffsetTop"}},{"Kind":"Components.Component","Name":"RangePadding","TypeName":"Syncfusion.Blazor.Charts.ChartRangePadding","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.RangePadding\">\r\n            <summary>\r\n            Specifies the padding for the axis range in terms of interval.They are,\r\n            none: Padding cannot be applied to the axis.\r\n            normal: Padding is applied to the axis based on the range calculation.\r\n            additional: Interval of the axis is added as padding to the minimum and maximum values of the range.\r\n            round: Axis range is rounded to the nearest possible value divided by the interval.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartRangePadding","Common.PropertyName":"RangePadding"}},{"Kind":"Components.Component","Name":"TitleStyle","TypeName":"Syncfusion.Blazor.Charts.ChartAxisTitleStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.TitleStyle\">\r\n            <summary>\r\n            Options for customizing the axis title.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisTitleStyle","Common.PropertyName":"TitleStyle"}},{"Kind":"Components.Component","Name":"RowIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.RowIndex\">\r\n            <summary>\r\n            Specifies the index of the row where the axis is associated, when the chart area is divided into multiple plot areas by using `Rows`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"RowIndex"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Format\">\r\n            <summary>\r\n            Specifies the skeleton format in which the dateTime format will process.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Span","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Span\">\r\n            <summary>\r\n            Specifies the number of `Columns` or `rows` an axis has to span horizontally or vertically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Span"}},{"Kind":"Components.Component","Name":"StartAngle","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.StartAngle\">\r\n            <summary>\r\n            The start angle for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"StartAngle"}},{"Kind":"Components.Component","Name":"StartFromZero","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.StartFromZero\">\r\n            <summary>\r\n            It specifies whether the axis to be start from zero.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"StartFromZero"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.TabIndex\">\r\n            <summary>\r\n            TabIndex value for the axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TickPosition","TypeName":"Syncfusion.Blazor.Charts.AxisPosition","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.TickPosition\">\r\n            <summary>\r\n            Specifies the placement of a ticks to the axis line. They are,\r\n            inside: Renders the ticks inside to the axis line.\r\n            outside: Renders the ticks outside to the axis line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AxisPosition","Common.PropertyName":"TickPosition"}},{"Kind":"Components.Component","Name":"StripLines","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartStripline>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.StripLines\">\r\n            <summary>\r\n            Specifies the stripLine collection for the axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.Charts.ChartStripline>","Common.PropertyName":"StripLines"}},{"Kind":"Components.Component","Name":"MultiLevelLabels","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartMultiLevelLabel>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MultiLevelLabels\">\r\n            <summary>\r\n            Specifies the multi level labels collection for the axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.Charts.ChartMultiLevelLabel>","Common.PropertyName":"MultiLevelLabels"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartAxisLabelBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Border\">\r\n            <summary>\r\n            Border of the multi level labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisLabelBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"ScrollbarSettings","TypeName":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ScrollbarSettings\">\r\n            <summary>\r\n            Option to customize scrollbar with lazy loading.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings","Common.PropertyName":"ScrollbarSettings"}},{"Kind":"Components.Component","Name":"CrosshairTooltip","TypeName":"Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.CrosshairTooltip\">\r\n            <summary>\r\n            Options to customize the crosshair ToolTip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip","Common.PropertyName":"CrosshairTooltip"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxis","Common.TypeNameIdentifier":"ChartAxis"}},{"HashCode":663443157,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxis.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartAxis"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxis.ChildContent","Common.TypeNameIdentifier":"ChartAxis"}},{"HashCode":1754367430,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxis.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartAxis"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxis.ChildContent","Common.TypeNameIdentifier":"ChartAxis"}},{"HashCode":-1283158047,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisLabelBorder","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartAxisLabelBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisLabelBorder.Color\">\r\n            <summary>\r\n            The color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Charts.BorderType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisLabelBorder.Type\">\r\n            <summary>\r\n            Border type for labels\r\n            Rectangle\r\n            Without Top Border\r\n            Without Top and BottomBorder\r\n            Without Border\r\n            Brace\r\n            CurlyBrace.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.BorderType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisLabelBorder.Width\">\r\n            <summary>\r\n            Specifies the border width of axis labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisLabelBorder","Common.TypeNameIdentifier":"ChartAxisLabelBorder"}},{"HashCode":922189134,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisLabelBorder","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartAxisLabelBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisLabelBorder.Color\">\r\n            <summary>\r\n            The color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Charts.BorderType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisLabelBorder.Type\">\r\n            <summary>\r\n            Border type for labels\r\n            Rectangle\r\n            Without Top Border\r\n            Without Top and BottomBorder\r\n            Without Border\r\n            Brace\r\n            CurlyBrace.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.BorderType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisLabelBorder.Width\">\r\n            <summary>\r\n            Specifies the border width of axis labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisLabelBorder","Common.TypeNameIdentifier":"ChartAxisLabelBorder"}},{"HashCode":-610238696,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisLabelBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartAxisLabelBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisLabelBorder.ChildContent","Common.TypeNameIdentifier":"ChartAxisLabelBorder"}},{"HashCode":-424750905,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisLabelBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartAxisLabelBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisLabelBorder.ChildContent","Common.TypeNameIdentifier":"ChartAxisLabelBorder"}},{"HashCode":-2024117322,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisLabelStyle","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartAxisLabelStyle\">\r\n            <summary>\r\n            Options to customize the text style of axis's labels.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartAxisLabelStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisLabelStyle.Size\">\r\n            <summary>\r\n            Unique size of the axis labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisLabelStyle.Color\">\r\n            <summary>\r\n            Font color for the axis title.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisLabelStyle.FontFamily\">\r\n            <summary>\r\n            Unique font family of the axislabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisLabelStyle.FontWeight\">\r\n            <summary>\r\n            Unique font weight of the axislabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisLabelStyle","Common.TypeNameIdentifier":"ChartAxisLabelStyle"}},{"HashCode":-402637456,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisLabelStyle","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartAxisLabelStyle\">\r\n            <summary>\r\n            Options to customize the text style of axis's labels.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartAxisLabelStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisLabelStyle.Size\">\r\n            <summary>\r\n            Unique size of the axis labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisLabelStyle.Color\">\r\n            <summary>\r\n            Font color for the axis title.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisLabelStyle.FontFamily\">\r\n            <summary>\r\n            Unique font family of the axislabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisLabelStyle.FontWeight\">\r\n            <summary>\r\n            Unique font weight of the axislabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisLabelStyle","Common.TypeNameIdentifier":"ChartAxisLabelStyle"}},{"HashCode":-782515439,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisLabelStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartAxisLabelStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisLabelStyle.ChildContent","Common.TypeNameIdentifier":"ChartAxisLabelStyle"}},{"HashCode":-1109548633,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisLabelStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartAxisLabelStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisLabelStyle.ChildContent","Common.TypeNameIdentifier":"ChartAxisLabelStyle"}},{"HashCode":-80856196,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisLineStyle","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartAxisLineStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisLineStyle.Color\">\r\n            <summary>\r\n            The color of the axis line that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisLineStyle.DashArray\">\r\n            <summary>\r\n            The dash array of the axis line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisLineStyle.Width\">\r\n            <summary>\r\n            The width of the line in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisLineStyle","Common.TypeNameIdentifier":"ChartAxisLineStyle"}},{"HashCode":-494720940,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisLineStyle","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartAxisLineStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisLineStyle.Color\">\r\n            <summary>\r\n            The color of the axis line that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisLineStyle.DashArray\">\r\n            <summary>\r\n            The dash array of the axis line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisLineStyle.Width\">\r\n            <summary>\r\n            The width of the line in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisLineStyle","Common.TypeNameIdentifier":"ChartAxisLineStyle"}},{"HashCode":-1038965405,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisLineStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartAxisLineStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisLineStyle.ChildContent","Common.TypeNameIdentifier":"ChartAxisLineStyle"}},{"HashCode":-2085724452,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisLineStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartAxisLineStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisLineStyle.ChildContent","Common.TypeNameIdentifier":"ChartAxisLineStyle"}},{"HashCode":539559009,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisMajorGridLines","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartAxisMajorGridLines"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMajorGridLines.Color\">\r\n            <summary>\r\n            The color of the major grid line that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMajorGridLines.DashArray\">\r\n            <summary>\r\n            The dash array of the grid lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMajorGridLines.Width\">\r\n            <summary>\r\n            The width of the line in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisMajorGridLines","Common.TypeNameIdentifier":"ChartAxisMajorGridLines"}},{"HashCode":-1185529179,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisMajorGridLines","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartAxisMajorGridLines"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMajorGridLines.Color\">\r\n            <summary>\r\n            The color of the major grid line that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMajorGridLines.DashArray\">\r\n            <summary>\r\n            The dash array of the grid lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMajorGridLines.Width\">\r\n            <summary>\r\n            The width of the line in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisMajorGridLines","Common.TypeNameIdentifier":"ChartAxisMajorGridLines"}},{"HashCode":-1202998865,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisMajorGridLines.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartAxisMajorGridLines"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisMajorGridLines.ChildContent","Common.TypeNameIdentifier":"ChartAxisMajorGridLines"}},{"HashCode":1039579370,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisMajorGridLines.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartAxisMajorGridLines"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisMajorGridLines.ChildContent","Common.TypeNameIdentifier":"ChartAxisMajorGridLines"}},{"HashCode":-126627856,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisMajorTickLines","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartAxisMajorTickLines"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMajorTickLines.Color\">\r\n            <summary>\r\n            The color of the major tick line that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMajorTickLines.Height\">\r\n            <summary>\r\n            The height of the ticks in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMajorTickLines.Width\">\r\n            <summary>\r\n            The width of the tick lines in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisMajorTickLines","Common.TypeNameIdentifier":"ChartAxisMajorTickLines"}},{"HashCode":186625596,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisMajorTickLines","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartAxisMajorTickLines"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMajorTickLines.Color\">\r\n            <summary>\r\n            The color of the major tick line that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMajorTickLines.Height\">\r\n            <summary>\r\n            The height of the ticks in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMajorTickLines.Width\">\r\n            <summary>\r\n            The width of the tick lines in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisMajorTickLines","Common.TypeNameIdentifier":"ChartAxisMajorTickLines"}},{"HashCode":-1148535738,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisMajorTickLines.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartAxisMajorTickLines"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisMajorTickLines.ChildContent","Common.TypeNameIdentifier":"ChartAxisMajorTickLines"}},{"HashCode":-1563649182,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisMajorTickLines.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartAxisMajorTickLines"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisMajorTickLines.ChildContent","Common.TypeNameIdentifier":"ChartAxisMajorTickLines"}},{"HashCode":-632456885,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisMinorGridLines","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartAxisMinorGridLines"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMinorGridLines.Color\">\r\n            <summary>\r\n            The color of the minor grid line that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMinorGridLines.DashArray\">\r\n            <summary>\r\n            The dash array of grid lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMinorGridLines.Width\">\r\n            <summary>\r\n            The width of the line in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisMinorGridLines","Common.TypeNameIdentifier":"ChartAxisMinorGridLines"}},{"HashCode":621046765,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisMinorGridLines","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartAxisMinorGridLines"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMinorGridLines.Color\">\r\n            <summary>\r\n            The color of the minor grid line that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMinorGridLines.DashArray\">\r\n            <summary>\r\n            The dash array of grid lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMinorGridLines.Width\">\r\n            <summary>\r\n            The width of the line in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisMinorGridLines","Common.TypeNameIdentifier":"ChartAxisMinorGridLines"}},{"HashCode":-1738507880,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisMinorGridLines.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartAxisMinorGridLines"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisMinorGridLines.ChildContent","Common.TypeNameIdentifier":"ChartAxisMinorGridLines"}},{"HashCode":-2025978633,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisMinorGridLines.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartAxisMinorGridLines"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisMinorGridLines.ChildContent","Common.TypeNameIdentifier":"ChartAxisMinorGridLines"}},{"HashCode":-139481447,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisMinorTickLines","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartAxisMinorTickLines"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMinorTickLines.Color\">\r\n            <summary>\r\n            The color of the minor tick line that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMinorTickLines.Height\">\r\n            <summary>\r\n            The height of the ticks in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMinorTickLines.Width\">\r\n            <summary>\r\n            The width of the tick line in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisMinorTickLines","Common.TypeNameIdentifier":"ChartAxisMinorTickLines"}},{"HashCode":2090845420,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisMinorTickLines","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartAxisMinorTickLines"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMinorTickLines.Color\">\r\n            <summary>\r\n            The color of the minor tick line that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMinorTickLines.Height\">\r\n            <summary>\r\n            The height of the ticks in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMinorTickLines.Width\">\r\n            <summary>\r\n            The width of the tick line in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisMinorTickLines","Common.TypeNameIdentifier":"ChartAxisMinorTickLines"}},{"HashCode":-984522868,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisMinorTickLines.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartAxisMinorTickLines"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisMinorTickLines.ChildContent","Common.TypeNameIdentifier":"ChartAxisMinorTickLines"}},{"HashCode":-400934833,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisMinorTickLines.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartAxisMinorTickLines"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisMinorTickLines.ChildContent","Common.TypeNameIdentifier":"ChartAxisMinorTickLines"}},{"HashCode":-700632277,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisTitleStyle","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartAxisTitleStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisTitleStyle.Size\">\r\n            <summary>\r\n            Unique size of the axis labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisTitleStyle.FontFamily\">\r\n            <summary>\r\n            Unique font family of the axis labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisTitleStyle.FontWeight\">\r\n            <summary>\r\n            Unique font weight of the axis labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisTitleStyle.Color\">\r\n            <summary>\r\n            Font color for the axis title.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisTitleStyle","Common.TypeNameIdentifier":"ChartAxisTitleStyle"}},{"HashCode":-896310610,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisTitleStyle","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartAxisTitleStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisTitleStyle.Size\">\r\n            <summary>\r\n            Unique size of the axis labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisTitleStyle.FontFamily\">\r\n            <summary>\r\n            Unique font family of the axis labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisTitleStyle.FontWeight\">\r\n            <summary>\r\n            Unique font weight of the axis labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisTitleStyle.Color\">\r\n            <summary>\r\n            Font color for the axis title.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisTitleStyle","Common.TypeNameIdentifier":"ChartAxisTitleStyle"}},{"HashCode":435345734,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisTitleStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartAxisTitleStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisTitleStyle.ChildContent","Common.TypeNameIdentifier":"ChartAxisTitleStyle"}},{"HashCode":-842368544,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisTitleStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartAxisTitleStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisTitleStyle.ChildContent","Common.TypeNameIdentifier":"ChartAxisTitleStyle"}},{"HashCode":-266855978,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartPrimaryXAxis","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartPrimaryXAxis"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsIndexed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.IsIndexed\">\r\n            <summary>\r\n            Specifies indexed category  axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsIndexed"}},{"Kind":"Components.Component","Name":"IsInversed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.IsInversed\">\r\n            <summary>\r\n            It specifies whether the axis to be rendered in inversed manner or not.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsInversed"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Name\">\r\n            <summary>\r\n            Unique identifier of an axis.\r\n            To associate an axis with the series, set this name to the xAxisName/yAxisName properties of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"OpposedPosition","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.OpposedPosition\">\r\n            <summary>\r\n            If set to true, the axis will render at the opposite side of its default position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"OpposedPosition"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Title\">\r\n            <summary>\r\n            Specifies the title of an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"ValueType","TypeName":"Syncfusion.Blazor.Charts.ValueType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ValueType\">\r\n            <summary>\r\n            Specifies the type of data the axis is handling.\r\n            Double:  Renders a numeric axis.\r\n            DateTime: Renders a dateTime axis.\r\n            Category: Renders a category axis.\r\n            Logarithmic: Renders a log axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ValueType","Common.PropertyName":"ValueType"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Visible\">\r\n            <summary>\r\n            If set to true, axis label will be visible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"Coefficient","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Coefficient\">\r\n            <summary>\r\n            The polar radar radius position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Coefficient"}},{"Kind":"Components.Component","Name":"ColumnIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ColumnIndex\">\r\n            <summary>\r\n            Specifies the index of the column where the axis is associated,\r\n            when the chart area is divided into multiple plot areas by using `Columns`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ColumnIndex"}},{"Kind":"Components.Component","Name":"CrossesAt","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.CrossesAt\">\r\n            <summary>\r\n            Specifies the value at which the axis line has to be intersect with the vertical axis or vice versa.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"CrossesAt"}},{"Kind":"Components.Component","Name":"CrossesInAxis","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.CrossesInAxis\">\r\n            <summary>\r\n            Specifies axis name with which the axis line has to be crossed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"CrossesInAxis"}},{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Description\">\r\n            <summary>\r\n            Description for axis and its element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Description"}},{"Kind":"Components.Component","Name":"DesiredIntervals","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.DesiredIntervals\">\r\n            <summary>\r\n            With this property, you can request axis to calculate intervals approximately equal to your specified interval.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"DesiredIntervals"}},{"Kind":"Components.Component","Name":"EdgeLabelPlacement","TypeName":"Syncfusion.Blazor.Charts.EdgeLabelPlacement","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.EdgeLabelPlacement\">\r\n            <summary>\r\n            Specifies the position of labels at the edge of the axis.They are,\r\n             None: No action will be performed.\r\n             Hide: Edge label will be hidden.\r\n             Shift: Shifts the edge labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.EdgeLabelPlacement","Common.PropertyName":"EdgeLabelPlacement"}},{"Kind":"Components.Component","Name":"EnableAutoIntervalOnZooming","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.EnableAutoIntervalOnZooming\">\r\n            <summary>\r\n            If set to true, axis interval will be calculated automatically with respect to the zoomed range.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableAutoIntervalOnZooming"}},{"Kind":"Components.Component","Name":"EnableScrollbarOnZooming","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.EnableScrollbarOnZooming\">\r\n            <summary>\r\n            Enables the scrollbar for zooming.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableScrollbarOnZooming"}},{"Kind":"Components.Component","Name":"EnableTrim","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.EnableTrim\">\r\n            <summary>\r\n            Specifies the Trim property for an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableTrim"}},{"Kind":"Components.Component","Name":"IntervalType","TypeName":"Syncfusion.Blazor.Charts.IntervalType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.IntervalType\">\r\n            <summary>\r\n            Specifies the types like `Years`, `Months`, `Days`, `Hours`, `Minutes`, `Seconds` in date time axis.They are,\r\n            Auto: Defines the interval of the axis based on data.\r\n            Years: Defines the interval of the axis in years.\r\n            Months: Defines the interval of the axis in months.\r\n            Days: Defines the interval of the axis in days.\r\n            Hours: Defines the interval of the axis in hours.\r\n            Minutes: Defines the interval of the axis in minutes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.IntervalType","Common.PropertyName":"IntervalType"}},{"Kind":"Components.Component","Name":"Interval","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Interval\">\r\n            <summary>\r\n            Specifies the interval for an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Interval"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Minimum\">\r\n            <summary>\r\n            Specifies the minimum range of an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"LabelPlacement","TypeName":"Syncfusion.Blazor.Charts.LabelPlacement","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelPlacement\">\r\n            <summary>\r\n            Specifies the placement of a label for category axis. They are,\r\n            betweenTicks: Renders the label between the ticks.\r\n            onTicks: Renders the label on the ticks.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LabelPlacement","Common.PropertyName":"LabelPlacement"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Maximum\">\r\n            <summary>\r\n            Specifies the maximum range of an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"ZoomFactor","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ZoomFactor\">\r\n            <summary>\r\n            The axis is scaled by this factor. When zoomFactor is 0.5, the chart is scaled by 200% along this axis. Value ranges from 0 to 1.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ZoomFactor"}},{"Kind":"Components.Component","Name":"ZoomPosition","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ZoomPosition\">\r\n            <summary>\r\n            Position of the zoomed axis. Value ranges from 0 to 1.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ZoomPosition"}},{"Kind":"Components.Component","Name":"LabelFormat","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelFormat\">\r\n            <summary>\r\n            Used to format the axis label that accepts any global string format like 'C', 'n1', 'P' etc.\r\n            It also accepts placeholder like '{value}°C' in which value represent the axis label, e.g, 20°C.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"LabelFormat"}},{"Kind":"Components.Component","Name":"LabelIntersectAction","TypeName":"Syncfusion.Blazor.Charts.LabelIntersectAction","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelIntersectAction\">\r\n            <summary>\r\n            Specifies the actions like `None`, `Hide`, `Trim`, `Wrap`, `MultipleRows`, `Rotate45`, and `Rotate90`\r\n            when the axis labels intersect with each other.They are,\r\n            None: Shows all the labels.\r\n            Hide: Hides the label when it intersects.\r\n            Trim: Trim the label when it intersects.\r\n            Wrap: Wrap the label when it intersects.\r\n            MultipleRows: Shows the label in MultipleRows when it intersects.\r\n            Rotate45: Rotates the label to 45 degree when it intersects.\r\n            Rotate90: Rotates the label to 90 degree when it intersects.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LabelIntersectAction","Common.PropertyName":"LabelIntersectAction"}},{"Kind":"Components.Component","Name":"LabelPadding","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelPadding\">\r\n            <summary>\r\n            Specifies the labelPadding from axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"LabelPadding"}},{"Kind":"Components.Component","Name":"LabelPosition","TypeName":"Syncfusion.Blazor.Charts.AxisPosition","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelPosition\">\r\n            <summary>\r\n            Specifies the placement of a labels to the axis line. They are,\r\n            inside: Renders the labels inside to the axis line.\r\n            outside: Renders the labels outside to the axis line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AxisPosition","Common.PropertyName":"LabelPosition"}},{"Kind":"Components.Component","Name":"LabelRotation","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelRotation\">\r\n            <summary>\r\n            The angle to which the axis label gets rotated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"LabelRotation"}},{"Kind":"Components.Component","Name":"LabelStyle","TypeName":"Syncfusion.Blazor.Charts.ChartAxisLabelStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelStyle\">\r\n            <summary>\r\n            Options to customize the axis label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisLabelStyle","Common.PropertyName":"LabelStyle"}},{"Kind":"Components.Component","Name":"LineStyle","TypeName":"Syncfusion.Blazor.Charts.ChartAxisLineStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LineStyle\">\r\n            <summary>\r\n            Options for customizing axis lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisLineStyle","Common.PropertyName":"LineStyle"}},{"Kind":"Components.Component","Name":"LogBase","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LogBase\">\r\n            <summary>\r\n            The base value for logarithmic axis. It requires `ValueType` to be `Logarithmic`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"LogBase"}},{"Kind":"Components.Component","Name":"MajorGridLines","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMajorGridLines","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MajorGridLines\">\r\n            <summary>\r\n            Options for customizing major grid lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMajorGridLines","Common.PropertyName":"MajorGridLines"}},{"Kind":"Components.Component","Name":"MajorTickLines","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMajorTickLines","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MajorTickLines\">\r\n            <summary>\r\n            Options for customizing major tick lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMajorTickLines","Common.PropertyName":"MajorTickLines"}},{"Kind":"Components.Component","Name":"MaximumLabelWidth","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MaximumLabelWidth\">\r\n            <summary>\r\n            Specifies the maximum width of an axis label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MaximumLabelWidth"}},{"Kind":"Components.Component","Name":"MaximumLabels","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MaximumLabels\">\r\n            <summary>\r\n            The maximum number of label count per 100 pixels with respect to the axis length.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MaximumLabels"}},{"Kind":"Components.Component","Name":"MinorGridLines","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMinorGridLines","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MinorGridLines\">\r\n            <summary>\r\n            Options for customizing minor grid lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMinorGridLines","Common.PropertyName":"MinorGridLines"}},{"Kind":"Components.Component","Name":"MinorTickLines","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMinorTickLines","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MinorTickLines\">\r\n            <summary>\r\n            Options for customizing minor tick lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMinorTickLines","Common.PropertyName":"MinorTickLines"}},{"Kind":"Components.Component","Name":"MinorTicksPerInterval","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MinorTicksPerInterval\">\r\n            <summary>\r\n            Specifies the number of minor ticks per interval.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MinorTicksPerInterval"}},{"Kind":"Components.Component","Name":"PlaceNextToAxisLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlaceNextToAxisLine\">\r\n            <summary>\r\n            Specifies whether axis elements like axis labels, axis title, etc has to be crossed with axis line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"PlaceNextToAxisLine"}},{"Kind":"Components.Component","Name":"PlotOffset","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffset\">\r\n            <summary>\r\n            Left and right padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffset"}},{"Kind":"Components.Component","Name":"PlotOffsetBottom","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffsetBottom\">\r\n            <summary>\r\n            Bottom padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffsetBottom"}},{"Kind":"Components.Component","Name":"PlotOffsetLeft","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffsetLeft\">\r\n            <summary>\r\n            Left padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffsetLeft"}},{"Kind":"Components.Component","Name":"PlotOffsetRight","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffsetRight\">\r\n            <summary>\r\n            Right padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffsetRight"}},{"Kind":"Components.Component","Name":"PlotOffsetTop","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffsetTop\">\r\n            <summary>\r\n            Top padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffsetTop"}},{"Kind":"Components.Component","Name":"RangePadding","TypeName":"Syncfusion.Blazor.Charts.ChartRangePadding","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.RangePadding\">\r\n            <summary>\r\n            Specifies the padding for the axis range in terms of interval.They are,\r\n            none: Padding cannot be applied to the axis.\r\n            normal: Padding is applied to the axis based on the range calculation.\r\n            additional: Interval of the axis is added as padding to the minimum and maximum values of the range.\r\n            round: Axis range is rounded to the nearest possible value divided by the interval.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartRangePadding","Common.PropertyName":"RangePadding"}},{"Kind":"Components.Component","Name":"TitleStyle","TypeName":"Syncfusion.Blazor.Charts.ChartAxisTitleStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.TitleStyle\">\r\n            <summary>\r\n            Options for customizing the axis title.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisTitleStyle","Common.PropertyName":"TitleStyle"}},{"Kind":"Components.Component","Name":"RowIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.RowIndex\">\r\n            <summary>\r\n            Specifies the index of the row where the axis is associated, when the chart area is divided into multiple plot areas by using `Rows`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"RowIndex"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Format\">\r\n            <summary>\r\n            Specifies the skeleton format in which the dateTime format will process.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Span","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Span\">\r\n            <summary>\r\n            Specifies the number of `Columns` or `rows` an axis has to span horizontally or vertically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Span"}},{"Kind":"Components.Component","Name":"StartAngle","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.StartAngle\">\r\n            <summary>\r\n            The start angle for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"StartAngle"}},{"Kind":"Components.Component","Name":"StartFromZero","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.StartFromZero\">\r\n            <summary>\r\n            It specifies whether the axis to be start from zero.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"StartFromZero"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.TabIndex\">\r\n            <summary>\r\n            TabIndex value for the axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TickPosition","TypeName":"Syncfusion.Blazor.Charts.AxisPosition","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.TickPosition\">\r\n            <summary>\r\n            Specifies the placement of a ticks to the axis line. They are,\r\n            inside: Renders the ticks inside to the axis line.\r\n            outside: Renders the ticks outside to the axis line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AxisPosition","Common.PropertyName":"TickPosition"}},{"Kind":"Components.Component","Name":"StripLines","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartStripline>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.StripLines\">\r\n            <summary>\r\n            Specifies the stripLine collection for the axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.Charts.ChartStripline>","Common.PropertyName":"StripLines"}},{"Kind":"Components.Component","Name":"MultiLevelLabels","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartMultiLevelLabel>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MultiLevelLabels\">\r\n            <summary>\r\n            Specifies the multi level labels collection for the axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.Charts.ChartMultiLevelLabel>","Common.PropertyName":"MultiLevelLabels"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartAxisLabelBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Border\">\r\n            <summary>\r\n            Border of the multi level labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisLabelBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"ScrollbarSettings","TypeName":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ScrollbarSettings\">\r\n            <summary>\r\n            Option to customize scrollbar with lazy loading.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings","Common.PropertyName":"ScrollbarSettings"}},{"Kind":"Components.Component","Name":"CrosshairTooltip","TypeName":"Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.CrosshairTooltip\">\r\n            <summary>\r\n            Options to customize the crosshair ToolTip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip","Common.PropertyName":"CrosshairTooltip"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartPrimaryXAxis","Common.TypeNameIdentifier":"ChartPrimaryXAxis"}},{"HashCode":1345189528,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartPrimaryXAxis","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartPrimaryXAxis"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsIndexed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.IsIndexed\">\r\n            <summary>\r\n            Specifies indexed category  axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsIndexed"}},{"Kind":"Components.Component","Name":"IsInversed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.IsInversed\">\r\n            <summary>\r\n            It specifies whether the axis to be rendered in inversed manner or not.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsInversed"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Name\">\r\n            <summary>\r\n            Unique identifier of an axis.\r\n            To associate an axis with the series, set this name to the xAxisName/yAxisName properties of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"OpposedPosition","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.OpposedPosition\">\r\n            <summary>\r\n            If set to true, the axis will render at the opposite side of its default position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"OpposedPosition"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Title\">\r\n            <summary>\r\n            Specifies the title of an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"ValueType","TypeName":"Syncfusion.Blazor.Charts.ValueType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ValueType\">\r\n            <summary>\r\n            Specifies the type of data the axis is handling.\r\n            Double:  Renders a numeric axis.\r\n            DateTime: Renders a dateTime axis.\r\n            Category: Renders a category axis.\r\n            Logarithmic: Renders a log axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ValueType","Common.PropertyName":"ValueType"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Visible\">\r\n            <summary>\r\n            If set to true, axis label will be visible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"Coefficient","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Coefficient\">\r\n            <summary>\r\n            The polar radar radius position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Coefficient"}},{"Kind":"Components.Component","Name":"ColumnIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ColumnIndex\">\r\n            <summary>\r\n            Specifies the index of the column where the axis is associated,\r\n            when the chart area is divided into multiple plot areas by using `Columns`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ColumnIndex"}},{"Kind":"Components.Component","Name":"CrossesAt","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.CrossesAt\">\r\n            <summary>\r\n            Specifies the value at which the axis line has to be intersect with the vertical axis or vice versa.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"CrossesAt"}},{"Kind":"Components.Component","Name":"CrossesInAxis","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.CrossesInAxis\">\r\n            <summary>\r\n            Specifies axis name with which the axis line has to be crossed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"CrossesInAxis"}},{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Description\">\r\n            <summary>\r\n            Description for axis and its element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Description"}},{"Kind":"Components.Component","Name":"DesiredIntervals","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.DesiredIntervals\">\r\n            <summary>\r\n            With this property, you can request axis to calculate intervals approximately equal to your specified interval.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"DesiredIntervals"}},{"Kind":"Components.Component","Name":"EdgeLabelPlacement","TypeName":"Syncfusion.Blazor.Charts.EdgeLabelPlacement","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.EdgeLabelPlacement\">\r\n            <summary>\r\n            Specifies the position of labels at the edge of the axis.They are,\r\n             None: No action will be performed.\r\n             Hide: Edge label will be hidden.\r\n             Shift: Shifts the edge labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.EdgeLabelPlacement","Common.PropertyName":"EdgeLabelPlacement"}},{"Kind":"Components.Component","Name":"EnableAutoIntervalOnZooming","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.EnableAutoIntervalOnZooming\">\r\n            <summary>\r\n            If set to true, axis interval will be calculated automatically with respect to the zoomed range.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableAutoIntervalOnZooming"}},{"Kind":"Components.Component","Name":"EnableScrollbarOnZooming","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.EnableScrollbarOnZooming\">\r\n            <summary>\r\n            Enables the scrollbar for zooming.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableScrollbarOnZooming"}},{"Kind":"Components.Component","Name":"EnableTrim","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.EnableTrim\">\r\n            <summary>\r\n            Specifies the Trim property for an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableTrim"}},{"Kind":"Components.Component","Name":"IntervalType","TypeName":"Syncfusion.Blazor.Charts.IntervalType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.IntervalType\">\r\n            <summary>\r\n            Specifies the types like `Years`, `Months`, `Days`, `Hours`, `Minutes`, `Seconds` in date time axis.They are,\r\n            Auto: Defines the interval of the axis based on data.\r\n            Years: Defines the interval of the axis in years.\r\n            Months: Defines the interval of the axis in months.\r\n            Days: Defines the interval of the axis in days.\r\n            Hours: Defines the interval of the axis in hours.\r\n            Minutes: Defines the interval of the axis in minutes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.IntervalType","Common.PropertyName":"IntervalType"}},{"Kind":"Components.Component","Name":"Interval","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Interval\">\r\n            <summary>\r\n            Specifies the interval for an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Interval"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Minimum\">\r\n            <summary>\r\n            Specifies the minimum range of an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"LabelPlacement","TypeName":"Syncfusion.Blazor.Charts.LabelPlacement","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelPlacement\">\r\n            <summary>\r\n            Specifies the placement of a label for category axis. They are,\r\n            betweenTicks: Renders the label between the ticks.\r\n            onTicks: Renders the label on the ticks.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LabelPlacement","Common.PropertyName":"LabelPlacement"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Maximum\">\r\n            <summary>\r\n            Specifies the maximum range of an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"ZoomFactor","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ZoomFactor\">\r\n            <summary>\r\n            The axis is scaled by this factor. When zoomFactor is 0.5, the chart is scaled by 200% along this axis. Value ranges from 0 to 1.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ZoomFactor"}},{"Kind":"Components.Component","Name":"ZoomPosition","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ZoomPosition\">\r\n            <summary>\r\n            Position of the zoomed axis. Value ranges from 0 to 1.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ZoomPosition"}},{"Kind":"Components.Component","Name":"LabelFormat","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelFormat\">\r\n            <summary>\r\n            Used to format the axis label that accepts any global string format like 'C', 'n1', 'P' etc.\r\n            It also accepts placeholder like '{value}°C' in which value represent the axis label, e.g, 20°C.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"LabelFormat"}},{"Kind":"Components.Component","Name":"LabelIntersectAction","TypeName":"Syncfusion.Blazor.Charts.LabelIntersectAction","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelIntersectAction\">\r\n            <summary>\r\n            Specifies the actions like `None`, `Hide`, `Trim`, `Wrap`, `MultipleRows`, `Rotate45`, and `Rotate90`\r\n            when the axis labels intersect with each other.They are,\r\n            None: Shows all the labels.\r\n            Hide: Hides the label when it intersects.\r\n            Trim: Trim the label when it intersects.\r\n            Wrap: Wrap the label when it intersects.\r\n            MultipleRows: Shows the label in MultipleRows when it intersects.\r\n            Rotate45: Rotates the label to 45 degree when it intersects.\r\n            Rotate90: Rotates the label to 90 degree when it intersects.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LabelIntersectAction","Common.PropertyName":"LabelIntersectAction"}},{"Kind":"Components.Component","Name":"LabelPadding","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelPadding\">\r\n            <summary>\r\n            Specifies the labelPadding from axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"LabelPadding"}},{"Kind":"Components.Component","Name":"LabelPosition","TypeName":"Syncfusion.Blazor.Charts.AxisPosition","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelPosition\">\r\n            <summary>\r\n            Specifies the placement of a labels to the axis line. They are,\r\n            inside: Renders the labels inside to the axis line.\r\n            outside: Renders the labels outside to the axis line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AxisPosition","Common.PropertyName":"LabelPosition"}},{"Kind":"Components.Component","Name":"LabelRotation","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelRotation\">\r\n            <summary>\r\n            The angle to which the axis label gets rotated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"LabelRotation"}},{"Kind":"Components.Component","Name":"LabelStyle","TypeName":"Syncfusion.Blazor.Charts.ChartAxisLabelStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelStyle\">\r\n            <summary>\r\n            Options to customize the axis label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisLabelStyle","Common.PropertyName":"LabelStyle"}},{"Kind":"Components.Component","Name":"LineStyle","TypeName":"Syncfusion.Blazor.Charts.ChartAxisLineStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LineStyle\">\r\n            <summary>\r\n            Options for customizing axis lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisLineStyle","Common.PropertyName":"LineStyle"}},{"Kind":"Components.Component","Name":"LogBase","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LogBase\">\r\n            <summary>\r\n            The base value for logarithmic axis. It requires `ValueType` to be `Logarithmic`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"LogBase"}},{"Kind":"Components.Component","Name":"MajorGridLines","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMajorGridLines","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MajorGridLines\">\r\n            <summary>\r\n            Options for customizing major grid lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMajorGridLines","Common.PropertyName":"MajorGridLines"}},{"Kind":"Components.Component","Name":"MajorTickLines","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMajorTickLines","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MajorTickLines\">\r\n            <summary>\r\n            Options for customizing major tick lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMajorTickLines","Common.PropertyName":"MajorTickLines"}},{"Kind":"Components.Component","Name":"MaximumLabelWidth","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MaximumLabelWidth\">\r\n            <summary>\r\n            Specifies the maximum width of an axis label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MaximumLabelWidth"}},{"Kind":"Components.Component","Name":"MaximumLabels","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MaximumLabels\">\r\n            <summary>\r\n            The maximum number of label count per 100 pixels with respect to the axis length.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MaximumLabels"}},{"Kind":"Components.Component","Name":"MinorGridLines","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMinorGridLines","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MinorGridLines\">\r\n            <summary>\r\n            Options for customizing minor grid lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMinorGridLines","Common.PropertyName":"MinorGridLines"}},{"Kind":"Components.Component","Name":"MinorTickLines","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMinorTickLines","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MinorTickLines\">\r\n            <summary>\r\n            Options for customizing minor tick lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMinorTickLines","Common.PropertyName":"MinorTickLines"}},{"Kind":"Components.Component","Name":"MinorTicksPerInterval","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MinorTicksPerInterval\">\r\n            <summary>\r\n            Specifies the number of minor ticks per interval.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MinorTicksPerInterval"}},{"Kind":"Components.Component","Name":"PlaceNextToAxisLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlaceNextToAxisLine\">\r\n            <summary>\r\n            Specifies whether axis elements like axis labels, axis title, etc has to be crossed with axis line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"PlaceNextToAxisLine"}},{"Kind":"Components.Component","Name":"PlotOffset","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffset\">\r\n            <summary>\r\n            Left and right padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffset"}},{"Kind":"Components.Component","Name":"PlotOffsetBottom","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffsetBottom\">\r\n            <summary>\r\n            Bottom padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffsetBottom"}},{"Kind":"Components.Component","Name":"PlotOffsetLeft","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffsetLeft\">\r\n            <summary>\r\n            Left padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffsetLeft"}},{"Kind":"Components.Component","Name":"PlotOffsetRight","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffsetRight\">\r\n            <summary>\r\n            Right padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffsetRight"}},{"Kind":"Components.Component","Name":"PlotOffsetTop","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffsetTop\">\r\n            <summary>\r\n            Top padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffsetTop"}},{"Kind":"Components.Component","Name":"RangePadding","TypeName":"Syncfusion.Blazor.Charts.ChartRangePadding","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.RangePadding\">\r\n            <summary>\r\n            Specifies the padding for the axis range in terms of interval.They are,\r\n            none: Padding cannot be applied to the axis.\r\n            normal: Padding is applied to the axis based on the range calculation.\r\n            additional: Interval of the axis is added as padding to the minimum and maximum values of the range.\r\n            round: Axis range is rounded to the nearest possible value divided by the interval.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartRangePadding","Common.PropertyName":"RangePadding"}},{"Kind":"Components.Component","Name":"TitleStyle","TypeName":"Syncfusion.Blazor.Charts.ChartAxisTitleStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.TitleStyle\">\r\n            <summary>\r\n            Options for customizing the axis title.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisTitleStyle","Common.PropertyName":"TitleStyle"}},{"Kind":"Components.Component","Name":"RowIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.RowIndex\">\r\n            <summary>\r\n            Specifies the index of the row where the axis is associated, when the chart area is divided into multiple plot areas by using `Rows`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"RowIndex"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Format\">\r\n            <summary>\r\n            Specifies the skeleton format in which the dateTime format will process.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Span","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Span\">\r\n            <summary>\r\n            Specifies the number of `Columns` or `rows` an axis has to span horizontally or vertically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Span"}},{"Kind":"Components.Component","Name":"StartAngle","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.StartAngle\">\r\n            <summary>\r\n            The start angle for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"StartAngle"}},{"Kind":"Components.Component","Name":"StartFromZero","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.StartFromZero\">\r\n            <summary>\r\n            It specifies whether the axis to be start from zero.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"StartFromZero"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.TabIndex\">\r\n            <summary>\r\n            TabIndex value for the axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TickPosition","TypeName":"Syncfusion.Blazor.Charts.AxisPosition","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.TickPosition\">\r\n            <summary>\r\n            Specifies the placement of a ticks to the axis line. They are,\r\n            inside: Renders the ticks inside to the axis line.\r\n            outside: Renders the ticks outside to the axis line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AxisPosition","Common.PropertyName":"TickPosition"}},{"Kind":"Components.Component","Name":"StripLines","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartStripline>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.StripLines\">\r\n            <summary>\r\n            Specifies the stripLine collection for the axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.Charts.ChartStripline>","Common.PropertyName":"StripLines"}},{"Kind":"Components.Component","Name":"MultiLevelLabels","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartMultiLevelLabel>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MultiLevelLabels\">\r\n            <summary>\r\n            Specifies the multi level labels collection for the axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.Charts.ChartMultiLevelLabel>","Common.PropertyName":"MultiLevelLabels"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartAxisLabelBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Border\">\r\n            <summary>\r\n            Border of the multi level labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisLabelBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"ScrollbarSettings","TypeName":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ScrollbarSettings\">\r\n            <summary>\r\n            Option to customize scrollbar with lazy loading.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings","Common.PropertyName":"ScrollbarSettings"}},{"Kind":"Components.Component","Name":"CrosshairTooltip","TypeName":"Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.CrosshairTooltip\">\r\n            <summary>\r\n            Options to customize the crosshair ToolTip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip","Common.PropertyName":"CrosshairTooltip"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartPrimaryXAxis","Common.TypeNameIdentifier":"ChartPrimaryXAxis"}},{"HashCode":-1311116985,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartPrimaryXAxis.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartPrimaryXAxis"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartPrimaryXAxis.ChildContent","Common.TypeNameIdentifier":"ChartPrimaryXAxis"}},{"HashCode":1503642634,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartPrimaryXAxis.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartPrimaryXAxis"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartPrimaryXAxis.ChildContent","Common.TypeNameIdentifier":"ChartPrimaryXAxis"}},{"HashCode":646270761,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartPrimaryYAxis","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartPrimaryYAxis"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsIndexed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.IsIndexed\">\r\n            <summary>\r\n            Specifies indexed category  axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsIndexed"}},{"Kind":"Components.Component","Name":"IsInversed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.IsInversed\">\r\n            <summary>\r\n            It specifies whether the axis to be rendered in inversed manner or not.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsInversed"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Name\">\r\n            <summary>\r\n            Unique identifier of an axis.\r\n            To associate an axis with the series, set this name to the xAxisName/yAxisName properties of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"OpposedPosition","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.OpposedPosition\">\r\n            <summary>\r\n            If set to true, the axis will render at the opposite side of its default position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"OpposedPosition"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Title\">\r\n            <summary>\r\n            Specifies the title of an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"ValueType","TypeName":"Syncfusion.Blazor.Charts.ValueType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ValueType\">\r\n            <summary>\r\n            Specifies the type of data the axis is handling.\r\n            Double:  Renders a numeric axis.\r\n            DateTime: Renders a dateTime axis.\r\n            Category: Renders a category axis.\r\n            Logarithmic: Renders a log axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ValueType","Common.PropertyName":"ValueType"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Visible\">\r\n            <summary>\r\n            If set to true, axis label will be visible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"Coefficient","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Coefficient\">\r\n            <summary>\r\n            The polar radar radius position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Coefficient"}},{"Kind":"Components.Component","Name":"ColumnIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ColumnIndex\">\r\n            <summary>\r\n            Specifies the index of the column where the axis is associated,\r\n            when the chart area is divided into multiple plot areas by using `Columns`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ColumnIndex"}},{"Kind":"Components.Component","Name":"CrossesAt","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.CrossesAt\">\r\n            <summary>\r\n            Specifies the value at which the axis line has to be intersect with the vertical axis or vice versa.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"CrossesAt"}},{"Kind":"Components.Component","Name":"CrossesInAxis","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.CrossesInAxis\">\r\n            <summary>\r\n            Specifies axis name with which the axis line has to be crossed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"CrossesInAxis"}},{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Description\">\r\n            <summary>\r\n            Description for axis and its element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Description"}},{"Kind":"Components.Component","Name":"DesiredIntervals","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.DesiredIntervals\">\r\n            <summary>\r\n            With this property, you can request axis to calculate intervals approximately equal to your specified interval.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"DesiredIntervals"}},{"Kind":"Components.Component","Name":"EdgeLabelPlacement","TypeName":"Syncfusion.Blazor.Charts.EdgeLabelPlacement","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.EdgeLabelPlacement\">\r\n            <summary>\r\n            Specifies the position of labels at the edge of the axis.They are,\r\n             None: No action will be performed.\r\n             Hide: Edge label will be hidden.\r\n             Shift: Shifts the edge labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.EdgeLabelPlacement","Common.PropertyName":"EdgeLabelPlacement"}},{"Kind":"Components.Component","Name":"EnableAutoIntervalOnZooming","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.EnableAutoIntervalOnZooming\">\r\n            <summary>\r\n            If set to true, axis interval will be calculated automatically with respect to the zoomed range.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableAutoIntervalOnZooming"}},{"Kind":"Components.Component","Name":"EnableScrollbarOnZooming","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.EnableScrollbarOnZooming\">\r\n            <summary>\r\n            Enables the scrollbar for zooming.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableScrollbarOnZooming"}},{"Kind":"Components.Component","Name":"EnableTrim","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.EnableTrim\">\r\n            <summary>\r\n            Specifies the Trim property for an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableTrim"}},{"Kind":"Components.Component","Name":"IntervalType","TypeName":"Syncfusion.Blazor.Charts.IntervalType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.IntervalType\">\r\n            <summary>\r\n            Specifies the types like `Years`, `Months`, `Days`, `Hours`, `Minutes`, `Seconds` in date time axis.They are,\r\n            Auto: Defines the interval of the axis based on data.\r\n            Years: Defines the interval of the axis in years.\r\n            Months: Defines the interval of the axis in months.\r\n            Days: Defines the interval of the axis in days.\r\n            Hours: Defines the interval of the axis in hours.\r\n            Minutes: Defines the interval of the axis in minutes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.IntervalType","Common.PropertyName":"IntervalType"}},{"Kind":"Components.Component","Name":"Interval","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Interval\">\r\n            <summary>\r\n            Specifies the interval for an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Interval"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Minimum\">\r\n            <summary>\r\n            Specifies the minimum range of an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"LabelPlacement","TypeName":"Syncfusion.Blazor.Charts.LabelPlacement","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelPlacement\">\r\n            <summary>\r\n            Specifies the placement of a label for category axis. They are,\r\n            betweenTicks: Renders the label between the ticks.\r\n            onTicks: Renders the label on the ticks.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LabelPlacement","Common.PropertyName":"LabelPlacement"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Maximum\">\r\n            <summary>\r\n            Specifies the maximum range of an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"ZoomFactor","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ZoomFactor\">\r\n            <summary>\r\n            The axis is scaled by this factor. When zoomFactor is 0.5, the chart is scaled by 200% along this axis. Value ranges from 0 to 1.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ZoomFactor"}},{"Kind":"Components.Component","Name":"ZoomPosition","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ZoomPosition\">\r\n            <summary>\r\n            Position of the zoomed axis. Value ranges from 0 to 1.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ZoomPosition"}},{"Kind":"Components.Component","Name":"LabelFormat","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelFormat\">\r\n            <summary>\r\n            Used to format the axis label that accepts any global string format like 'C', 'n1', 'P' etc.\r\n            It also accepts placeholder like '{value}°C' in which value represent the axis label, e.g, 20°C.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"LabelFormat"}},{"Kind":"Components.Component","Name":"LabelIntersectAction","TypeName":"Syncfusion.Blazor.Charts.LabelIntersectAction","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelIntersectAction\">\r\n            <summary>\r\n            Specifies the actions like `None`, `Hide`, `Trim`, `Wrap`, `MultipleRows`, `Rotate45`, and `Rotate90`\r\n            when the axis labels intersect with each other.They are,\r\n            None: Shows all the labels.\r\n            Hide: Hides the label when it intersects.\r\n            Trim: Trim the label when it intersects.\r\n            Wrap: Wrap the label when it intersects.\r\n            MultipleRows: Shows the label in MultipleRows when it intersects.\r\n            Rotate45: Rotates the label to 45 degree when it intersects.\r\n            Rotate90: Rotates the label to 90 degree when it intersects.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LabelIntersectAction","Common.PropertyName":"LabelIntersectAction"}},{"Kind":"Components.Component","Name":"LabelPadding","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelPadding\">\r\n            <summary>\r\n            Specifies the labelPadding from axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"LabelPadding"}},{"Kind":"Components.Component","Name":"LabelPosition","TypeName":"Syncfusion.Blazor.Charts.AxisPosition","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelPosition\">\r\n            <summary>\r\n            Specifies the placement of a labels to the axis line. They are,\r\n            inside: Renders the labels inside to the axis line.\r\n            outside: Renders the labels outside to the axis line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AxisPosition","Common.PropertyName":"LabelPosition"}},{"Kind":"Components.Component","Name":"LabelRotation","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelRotation\">\r\n            <summary>\r\n            The angle to which the axis label gets rotated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"LabelRotation"}},{"Kind":"Components.Component","Name":"LabelStyle","TypeName":"Syncfusion.Blazor.Charts.ChartAxisLabelStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelStyle\">\r\n            <summary>\r\n            Options to customize the axis label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisLabelStyle","Common.PropertyName":"LabelStyle"}},{"Kind":"Components.Component","Name":"LineStyle","TypeName":"Syncfusion.Blazor.Charts.ChartAxisLineStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LineStyle\">\r\n            <summary>\r\n            Options for customizing axis lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisLineStyle","Common.PropertyName":"LineStyle"}},{"Kind":"Components.Component","Name":"LogBase","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LogBase\">\r\n            <summary>\r\n            The base value for logarithmic axis. It requires `ValueType` to be `Logarithmic`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"LogBase"}},{"Kind":"Components.Component","Name":"MajorGridLines","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMajorGridLines","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MajorGridLines\">\r\n            <summary>\r\n            Options for customizing major grid lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMajorGridLines","Common.PropertyName":"MajorGridLines"}},{"Kind":"Components.Component","Name":"MajorTickLines","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMajorTickLines","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MajorTickLines\">\r\n            <summary>\r\n            Options for customizing major tick lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMajorTickLines","Common.PropertyName":"MajorTickLines"}},{"Kind":"Components.Component","Name":"MaximumLabelWidth","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MaximumLabelWidth\">\r\n            <summary>\r\n            Specifies the maximum width of an axis label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MaximumLabelWidth"}},{"Kind":"Components.Component","Name":"MaximumLabels","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MaximumLabels\">\r\n            <summary>\r\n            The maximum number of label count per 100 pixels with respect to the axis length.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MaximumLabels"}},{"Kind":"Components.Component","Name":"MinorGridLines","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMinorGridLines","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MinorGridLines\">\r\n            <summary>\r\n            Options for customizing minor grid lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMinorGridLines","Common.PropertyName":"MinorGridLines"}},{"Kind":"Components.Component","Name":"MinorTickLines","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMinorTickLines","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MinorTickLines\">\r\n            <summary>\r\n            Options for customizing minor tick lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMinorTickLines","Common.PropertyName":"MinorTickLines"}},{"Kind":"Components.Component","Name":"MinorTicksPerInterval","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MinorTicksPerInterval\">\r\n            <summary>\r\n            Specifies the number of minor ticks per interval.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MinorTicksPerInterval"}},{"Kind":"Components.Component","Name":"PlaceNextToAxisLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlaceNextToAxisLine\">\r\n            <summary>\r\n            Specifies whether axis elements like axis labels, axis title, etc has to be crossed with axis line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"PlaceNextToAxisLine"}},{"Kind":"Components.Component","Name":"PlotOffset","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffset\">\r\n            <summary>\r\n            Left and right padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffset"}},{"Kind":"Components.Component","Name":"PlotOffsetBottom","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffsetBottom\">\r\n            <summary>\r\n            Bottom padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffsetBottom"}},{"Kind":"Components.Component","Name":"PlotOffsetLeft","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffsetLeft\">\r\n            <summary>\r\n            Left padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffsetLeft"}},{"Kind":"Components.Component","Name":"PlotOffsetRight","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffsetRight\">\r\n            <summary>\r\n            Right padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffsetRight"}},{"Kind":"Components.Component","Name":"PlotOffsetTop","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffsetTop\">\r\n            <summary>\r\n            Top padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffsetTop"}},{"Kind":"Components.Component","Name":"RangePadding","TypeName":"Syncfusion.Blazor.Charts.ChartRangePadding","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.RangePadding\">\r\n            <summary>\r\n            Specifies the padding for the axis range in terms of interval.They are,\r\n            none: Padding cannot be applied to the axis.\r\n            normal: Padding is applied to the axis based on the range calculation.\r\n            additional: Interval of the axis is added as padding to the minimum and maximum values of the range.\r\n            round: Axis range is rounded to the nearest possible value divided by the interval.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartRangePadding","Common.PropertyName":"RangePadding"}},{"Kind":"Components.Component","Name":"TitleStyle","TypeName":"Syncfusion.Blazor.Charts.ChartAxisTitleStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.TitleStyle\">\r\n            <summary>\r\n            Options for customizing the axis title.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisTitleStyle","Common.PropertyName":"TitleStyle"}},{"Kind":"Components.Component","Name":"RowIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.RowIndex\">\r\n            <summary>\r\n            Specifies the index of the row where the axis is associated, when the chart area is divided into multiple plot areas by using `Rows`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"RowIndex"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Format\">\r\n            <summary>\r\n            Specifies the skeleton format in which the dateTime format will process.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Span","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Span\">\r\n            <summary>\r\n            Specifies the number of `Columns` or `rows` an axis has to span horizontally or vertically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Span"}},{"Kind":"Components.Component","Name":"StartAngle","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.StartAngle\">\r\n            <summary>\r\n            The start angle for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"StartAngle"}},{"Kind":"Components.Component","Name":"StartFromZero","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.StartFromZero\">\r\n            <summary>\r\n            It specifies whether the axis to be start from zero.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"StartFromZero"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.TabIndex\">\r\n            <summary>\r\n            TabIndex value for the axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TickPosition","TypeName":"Syncfusion.Blazor.Charts.AxisPosition","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.TickPosition\">\r\n            <summary>\r\n            Specifies the placement of a ticks to the axis line. They are,\r\n            inside: Renders the ticks inside to the axis line.\r\n            outside: Renders the ticks outside to the axis line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AxisPosition","Common.PropertyName":"TickPosition"}},{"Kind":"Components.Component","Name":"StripLines","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartStripline>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.StripLines\">\r\n            <summary>\r\n            Specifies the stripLine collection for the axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.Charts.ChartStripline>","Common.PropertyName":"StripLines"}},{"Kind":"Components.Component","Name":"MultiLevelLabels","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartMultiLevelLabel>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MultiLevelLabels\">\r\n            <summary>\r\n            Specifies the multi level labels collection for the axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.Charts.ChartMultiLevelLabel>","Common.PropertyName":"MultiLevelLabels"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartAxisLabelBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Border\">\r\n            <summary>\r\n            Border of the multi level labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisLabelBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"ScrollbarSettings","TypeName":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ScrollbarSettings\">\r\n            <summary>\r\n            Option to customize scrollbar with lazy loading.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings","Common.PropertyName":"ScrollbarSettings"}},{"Kind":"Components.Component","Name":"CrosshairTooltip","TypeName":"Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.CrosshairTooltip\">\r\n            <summary>\r\n            Options to customize the crosshair ToolTip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip","Common.PropertyName":"CrosshairTooltip"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartPrimaryYAxis","Common.TypeNameIdentifier":"ChartPrimaryYAxis"}},{"HashCode":1288330454,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartPrimaryYAxis","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartPrimaryYAxis"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"IsIndexed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.IsIndexed\">\r\n            <summary>\r\n            Specifies indexed category  axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsIndexed"}},{"Kind":"Components.Component","Name":"IsInversed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.IsInversed\">\r\n            <summary>\r\n            It specifies whether the axis to be rendered in inversed manner or not.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsInversed"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Name\">\r\n            <summary>\r\n            Unique identifier of an axis.\r\n            To associate an axis with the series, set this name to the xAxisName/yAxisName properties of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"OpposedPosition","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.OpposedPosition\">\r\n            <summary>\r\n            If set to true, the axis will render at the opposite side of its default position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"OpposedPosition"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Title\">\r\n            <summary>\r\n            Specifies the title of an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"ValueType","TypeName":"Syncfusion.Blazor.Charts.ValueType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ValueType\">\r\n            <summary>\r\n            Specifies the type of data the axis is handling.\r\n            Double:  Renders a numeric axis.\r\n            DateTime: Renders a dateTime axis.\r\n            Category: Renders a category axis.\r\n            Logarithmic: Renders a log axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ValueType","Common.PropertyName":"ValueType"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Visible\">\r\n            <summary>\r\n            If set to true, axis label will be visible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"Coefficient","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Coefficient\">\r\n            <summary>\r\n            The polar radar radius position.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Coefficient"}},{"Kind":"Components.Component","Name":"ColumnIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ColumnIndex\">\r\n            <summary>\r\n            Specifies the index of the column where the axis is associated,\r\n            when the chart area is divided into multiple plot areas by using `Columns`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ColumnIndex"}},{"Kind":"Components.Component","Name":"CrossesAt","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.CrossesAt\">\r\n            <summary>\r\n            Specifies the value at which the axis line has to be intersect with the vertical axis or vice versa.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"CrossesAt"}},{"Kind":"Components.Component","Name":"CrossesInAxis","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.CrossesInAxis\">\r\n            <summary>\r\n            Specifies axis name with which the axis line has to be crossed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"CrossesInAxis"}},{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Description\">\r\n            <summary>\r\n            Description for axis and its element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Description"}},{"Kind":"Components.Component","Name":"DesiredIntervals","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.DesiredIntervals\">\r\n            <summary>\r\n            With this property, you can request axis to calculate intervals approximately equal to your specified interval.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"DesiredIntervals"}},{"Kind":"Components.Component","Name":"EdgeLabelPlacement","TypeName":"Syncfusion.Blazor.Charts.EdgeLabelPlacement","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.EdgeLabelPlacement\">\r\n            <summary>\r\n            Specifies the position of labels at the edge of the axis.They are,\r\n             None: No action will be performed.\r\n             Hide: Edge label will be hidden.\r\n             Shift: Shifts the edge labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.EdgeLabelPlacement","Common.PropertyName":"EdgeLabelPlacement"}},{"Kind":"Components.Component","Name":"EnableAutoIntervalOnZooming","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.EnableAutoIntervalOnZooming\">\r\n            <summary>\r\n            If set to true, axis interval will be calculated automatically with respect to the zoomed range.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableAutoIntervalOnZooming"}},{"Kind":"Components.Component","Name":"EnableScrollbarOnZooming","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.EnableScrollbarOnZooming\">\r\n            <summary>\r\n            Enables the scrollbar for zooming.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableScrollbarOnZooming"}},{"Kind":"Components.Component","Name":"EnableTrim","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.EnableTrim\">\r\n            <summary>\r\n            Specifies the Trim property for an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableTrim"}},{"Kind":"Components.Component","Name":"IntervalType","TypeName":"Syncfusion.Blazor.Charts.IntervalType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.IntervalType\">\r\n            <summary>\r\n            Specifies the types like `Years`, `Months`, `Days`, `Hours`, `Minutes`, `Seconds` in date time axis.They are,\r\n            Auto: Defines the interval of the axis based on data.\r\n            Years: Defines the interval of the axis in years.\r\n            Months: Defines the interval of the axis in months.\r\n            Days: Defines the interval of the axis in days.\r\n            Hours: Defines the interval of the axis in hours.\r\n            Minutes: Defines the interval of the axis in minutes.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.IntervalType","Common.PropertyName":"IntervalType"}},{"Kind":"Components.Component","Name":"Interval","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Interval\">\r\n            <summary>\r\n            Specifies the interval for an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Interval"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Minimum\">\r\n            <summary>\r\n            Specifies the minimum range of an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"LabelPlacement","TypeName":"Syncfusion.Blazor.Charts.LabelPlacement","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelPlacement\">\r\n            <summary>\r\n            Specifies the placement of a label for category axis. They are,\r\n            betweenTicks: Renders the label between the ticks.\r\n            onTicks: Renders the label on the ticks.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LabelPlacement","Common.PropertyName":"LabelPlacement"}},{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Maximum\">\r\n            <summary>\r\n            Specifies the maximum range of an axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"ZoomFactor","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ZoomFactor\">\r\n            <summary>\r\n            The axis is scaled by this factor. When zoomFactor is 0.5, the chart is scaled by 200% along this axis. Value ranges from 0 to 1.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ZoomFactor"}},{"Kind":"Components.Component","Name":"ZoomPosition","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ZoomPosition\">\r\n            <summary>\r\n            Position of the zoomed axis. Value ranges from 0 to 1.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ZoomPosition"}},{"Kind":"Components.Component","Name":"LabelFormat","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelFormat\">\r\n            <summary>\r\n            Used to format the axis label that accepts any global string format like 'C', 'n1', 'P' etc.\r\n            It also accepts placeholder like '{value}°C' in which value represent the axis label, e.g, 20°C.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"LabelFormat"}},{"Kind":"Components.Component","Name":"LabelIntersectAction","TypeName":"Syncfusion.Blazor.Charts.LabelIntersectAction","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelIntersectAction\">\r\n            <summary>\r\n            Specifies the actions like `None`, `Hide`, `Trim`, `Wrap`, `MultipleRows`, `Rotate45`, and `Rotate90`\r\n            when the axis labels intersect with each other.They are,\r\n            None: Shows all the labels.\r\n            Hide: Hides the label when it intersects.\r\n            Trim: Trim the label when it intersects.\r\n            Wrap: Wrap the label when it intersects.\r\n            MultipleRows: Shows the label in MultipleRows when it intersects.\r\n            Rotate45: Rotates the label to 45 degree when it intersects.\r\n            Rotate90: Rotates the label to 90 degree when it intersects.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LabelIntersectAction","Common.PropertyName":"LabelIntersectAction"}},{"Kind":"Components.Component","Name":"LabelPadding","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelPadding\">\r\n            <summary>\r\n            Specifies the labelPadding from axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"LabelPadding"}},{"Kind":"Components.Component","Name":"LabelPosition","TypeName":"Syncfusion.Blazor.Charts.AxisPosition","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelPosition\">\r\n            <summary>\r\n            Specifies the placement of a labels to the axis line. They are,\r\n            inside: Renders the labels inside to the axis line.\r\n            outside: Renders the labels outside to the axis line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AxisPosition","Common.PropertyName":"LabelPosition"}},{"Kind":"Components.Component","Name":"LabelRotation","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelRotation\">\r\n            <summary>\r\n            The angle to which the axis label gets rotated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"LabelRotation"}},{"Kind":"Components.Component","Name":"LabelStyle","TypeName":"Syncfusion.Blazor.Charts.ChartAxisLabelStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LabelStyle\">\r\n            <summary>\r\n            Options to customize the axis label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisLabelStyle","Common.PropertyName":"LabelStyle"}},{"Kind":"Components.Component","Name":"LineStyle","TypeName":"Syncfusion.Blazor.Charts.ChartAxisLineStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LineStyle\">\r\n            <summary>\r\n            Options for customizing axis lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisLineStyle","Common.PropertyName":"LineStyle"}},{"Kind":"Components.Component","Name":"LogBase","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.LogBase\">\r\n            <summary>\r\n            The base value for logarithmic axis. It requires `ValueType` to be `Logarithmic`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"LogBase"}},{"Kind":"Components.Component","Name":"MajorGridLines","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMajorGridLines","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MajorGridLines\">\r\n            <summary>\r\n            Options for customizing major grid lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMajorGridLines","Common.PropertyName":"MajorGridLines"}},{"Kind":"Components.Component","Name":"MajorTickLines","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMajorTickLines","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MajorTickLines\">\r\n            <summary>\r\n            Options for customizing major tick lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMajorTickLines","Common.PropertyName":"MajorTickLines"}},{"Kind":"Components.Component","Name":"MaximumLabelWidth","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MaximumLabelWidth\">\r\n            <summary>\r\n            Specifies the maximum width of an axis label.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MaximumLabelWidth"}},{"Kind":"Components.Component","Name":"MaximumLabels","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MaximumLabels\">\r\n            <summary>\r\n            The maximum number of label count per 100 pixels with respect to the axis length.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MaximumLabels"}},{"Kind":"Components.Component","Name":"MinorGridLines","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMinorGridLines","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MinorGridLines\">\r\n            <summary>\r\n            Options for customizing minor grid lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMinorGridLines","Common.PropertyName":"MinorGridLines"}},{"Kind":"Components.Component","Name":"MinorTickLines","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMinorTickLines","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MinorTickLines\">\r\n            <summary>\r\n            Options for customizing minor tick lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMinorTickLines","Common.PropertyName":"MinorTickLines"}},{"Kind":"Components.Component","Name":"MinorTicksPerInterval","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MinorTicksPerInterval\">\r\n            <summary>\r\n            Specifies the number of minor ticks per interval.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MinorTicksPerInterval"}},{"Kind":"Components.Component","Name":"PlaceNextToAxisLine","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlaceNextToAxisLine\">\r\n            <summary>\r\n            Specifies whether axis elements like axis labels, axis title, etc has to be crossed with axis line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"PlaceNextToAxisLine"}},{"Kind":"Components.Component","Name":"PlotOffset","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffset\">\r\n            <summary>\r\n            Left and right padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffset"}},{"Kind":"Components.Component","Name":"PlotOffsetBottom","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffsetBottom\">\r\n            <summary>\r\n            Bottom padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffsetBottom"}},{"Kind":"Components.Component","Name":"PlotOffsetLeft","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffsetLeft\">\r\n            <summary>\r\n            Left padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffsetLeft"}},{"Kind":"Components.Component","Name":"PlotOffsetRight","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffsetRight\">\r\n            <summary>\r\n            Right padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffsetRight"}},{"Kind":"Components.Component","Name":"PlotOffsetTop","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.PlotOffsetTop\">\r\n            <summary>\r\n            Top padding for the plot area in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PlotOffsetTop"}},{"Kind":"Components.Component","Name":"RangePadding","TypeName":"Syncfusion.Blazor.Charts.ChartRangePadding","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.RangePadding\">\r\n            <summary>\r\n            Specifies the padding for the axis range in terms of interval.They are,\r\n            none: Padding cannot be applied to the axis.\r\n            normal: Padding is applied to the axis based on the range calculation.\r\n            additional: Interval of the axis is added as padding to the minimum and maximum values of the range.\r\n            round: Axis range is rounded to the nearest possible value divided by the interval.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartRangePadding","Common.PropertyName":"RangePadding"}},{"Kind":"Components.Component","Name":"TitleStyle","TypeName":"Syncfusion.Blazor.Charts.ChartAxisTitleStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.TitleStyle\">\r\n            <summary>\r\n            Options for customizing the axis title.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisTitleStyle","Common.PropertyName":"TitleStyle"}},{"Kind":"Components.Component","Name":"RowIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.RowIndex\">\r\n            <summary>\r\n            Specifies the index of the row where the axis is associated, when the chart area is divided into multiple plot areas by using `Rows`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"RowIndex"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Format\">\r\n            <summary>\r\n            Specifies the skeleton format in which the dateTime format will process.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Span","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Span\">\r\n            <summary>\r\n            Specifies the number of `Columns` or `rows` an axis has to span horizontally or vertically.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Span"}},{"Kind":"Components.Component","Name":"StartAngle","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.StartAngle\">\r\n            <summary>\r\n            The start angle for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"StartAngle"}},{"Kind":"Components.Component","Name":"StartFromZero","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.StartFromZero\">\r\n            <summary>\r\n            It specifies whether the axis to be start from zero.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"StartFromZero"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.TabIndex\">\r\n            <summary>\r\n            TabIndex value for the axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"TickPosition","TypeName":"Syncfusion.Blazor.Charts.AxisPosition","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.TickPosition\">\r\n            <summary>\r\n            Specifies the placement of a ticks to the axis line. They are,\r\n            inside: Renders the ticks inside to the axis line.\r\n            outside: Renders the ticks outside to the axis line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.AxisPosition","Common.PropertyName":"TickPosition"}},{"Kind":"Components.Component","Name":"StripLines","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartStripline>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.StripLines\">\r\n            <summary>\r\n            Specifies the stripLine collection for the axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.Charts.ChartStripline>","Common.PropertyName":"StripLines"}},{"Kind":"Components.Component","Name":"MultiLevelLabels","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartMultiLevelLabel>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.MultiLevelLabels\">\r\n            <summary>\r\n            Specifies the multi level labels collection for the axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.Charts.ChartMultiLevelLabel>","Common.PropertyName":"MultiLevelLabels"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartAxisLabelBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.Border\">\r\n            <summary>\r\n            Border of the multi level labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisLabelBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"ScrollbarSettings","TypeName":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.ScrollbarSettings\">\r\n            <summary>\r\n            Option to customize scrollbar with lazy loading.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings","Common.PropertyName":"ScrollbarSettings"}},{"Kind":"Components.Component","Name":"CrosshairTooltip","TypeName":"Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxis.CrosshairTooltip\">\r\n            <summary>\r\n            Options to customize the crosshair ToolTip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip","Common.PropertyName":"CrosshairTooltip"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartPrimaryYAxis","Common.TypeNameIdentifier":"ChartPrimaryYAxis"}},{"HashCode":-819190106,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartPrimaryYAxis.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartPrimaryYAxis"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartPrimaryYAxis.ChildContent","Common.TypeNameIdentifier":"ChartPrimaryYAxis"}},{"HashCode":1861703734,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartPrimaryYAxis.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartPrimaryYAxis"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartPrimaryYAxis.ChildContent","Common.TypeNameIdentifier":"ChartPrimaryYAxis"}},{"HashCode":895568831,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder\">\r\n            <summary>\r\n            Options to customize the multilevel label border.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartAxisMultiLevelLabelBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder.Color\">\r\n            <summary>\r\n            The color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Charts.BorderType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder.Type\">\r\n            <summary>\r\n            Border type for labels\r\n            Rectangle\r\n            Without Top Border\r\n            Without Top and BottomBorder\r\n            Without Border\r\n            Brace\r\n            CurlyBrace.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.BorderType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder.Width\">\r\n            <summary>\r\n            The width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder","Common.TypeNameIdentifier":"ChartAxisMultiLevelLabelBorder"}},{"HashCode":-1167506243,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder\">\r\n            <summary>\r\n            Options to customize the multilevel label border.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder.Color\">\r\n            <summary>\r\n            The color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Charts.BorderType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder.Type\">\r\n            <summary>\r\n            Border type for labels\r\n            Rectangle\r\n            Without Top Border\r\n            Without Top and BottomBorder\r\n            Without Border\r\n            Brace\r\n            CurlyBrace.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.BorderType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder.Width\">\r\n            <summary>\r\n            The width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder","Common.TypeNameIdentifier":"ChartAxisMultiLevelLabelBorder"}},{"HashCode":-325721744,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartAxisMultiLevelLabelBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder.ChildContent","Common.TypeNameIdentifier":"ChartAxisMultiLevelLabelBorder"}},{"HashCode":1647626422,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder.ChildContent","Common.TypeNameIdentifier":"ChartAxisMultiLevelLabelBorder"}},{"HashCode":-1994644324,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle\">\r\n            <summary>\r\n            Options to customize the multilevel label text.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartAxisMultiLevelLabelTextStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle.Color\">\r\n            <summary>\r\n            Color for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle.Size\">\r\n            <summary>\r\n            Font size for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontFamily\">\r\n            <summary>\r\n            Sets and gets the font family for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontWeight\">\r\n            <summary>\r\n            Sets and gets the font weight for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle","Common.TypeNameIdentifier":"ChartAxisMultiLevelLabelTextStyle"}},{"HashCode":-1820089259,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle\">\r\n            <summary>\r\n            Options to customize the multilevel label text.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle.Color\">\r\n            <summary>\r\n            Color for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle.Size\">\r\n            <summary>\r\n            Font size for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontFamily\">\r\n            <summary>\r\n            Sets and gets the font family for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontWeight\">\r\n            <summary>\r\n            Sets and gets the font weight for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle","Common.TypeNameIdentifier":"ChartAxisMultiLevelLabelTextStyle"}},{"HashCode":1273691597,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartAxisMultiLevelLabelTextStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle.ChildContent","Common.TypeNameIdentifier":"ChartAxisMultiLevelLabelTextStyle"}},{"HashCode":2079779984,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle.ChildContent","Common.TypeNameIdentifier":"ChartAxisMultiLevelLabelTextStyle"}},{"HashCode":-359189201,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartCategories","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartCategories\">\r\n            <summary>\r\n            Options to customize the categories for the chart labels.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartCategories"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCategories","Common.TypeNameIdentifier":"ChartCategories"}},{"HashCode":1276892034,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartCategories","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartCategories\">\r\n            <summary>\r\n            Options to customize the categories for the chart labels.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartCategories"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCategories","Common.TypeNameIdentifier":"ChartCategories"}},{"HashCode":1754309779,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartCategories.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartCategories"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCategories.ChildContent","Common.TypeNameIdentifier":"ChartCategories"}},{"HashCode":816505697,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartCategories.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartCategories"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCategories.ChildContent","Common.TypeNameIdentifier":"ChartCategories"}},{"HashCode":-2115052937,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartCategory","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartCategory\">\r\n            <summary>\r\n            Options to customize the category for the multilevel labels.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartCategory"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CustomAttributes","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCategory.CustomAttributes\">\r\n            <summary>\r\n            multi level labels custom data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"CustomAttributes"}},{"Kind":"Components.Component","Name":"End","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCategory.End\">\r\n            <summary>\r\n            End value of the multi level labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"End"}},{"Kind":"Components.Component","Name":"MaximumTextWidth","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCategory.MaximumTextWidth\">\r\n            <summary>\r\n            Maximum width of the text for multi level labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MaximumTextWidth"}},{"Kind":"Components.Component","Name":"Start","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCategory.Start\">\r\n            <summary>\r\n            Start value of the multi level labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Start"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCategory.Text\">\r\n            <summary>\r\n            multi level labels text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Charts.BorderType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCategory.Type\">\r\n            <summary>\r\n            Border type for labels.\r\n            Rectangle\r\n            Without Top Border\r\n            Without Top and BottomBorder\r\n            Without Border\r\n            Brace\r\n            CurlyBrace.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.BorderType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCategory","Common.TypeNameIdentifier":"ChartCategory"}},{"HashCode":-97823655,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartCategory","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartCategory\">\r\n            <summary>\r\n            Options to customize the category for the multilevel labels.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartCategory"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"CustomAttributes","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCategory.CustomAttributes\">\r\n            <summary>\r\n            multi level labels custom data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"CustomAttributes"}},{"Kind":"Components.Component","Name":"End","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCategory.End\">\r\n            <summary>\r\n            End value of the multi level labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"End"}},{"Kind":"Components.Component","Name":"MaximumTextWidth","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCategory.MaximumTextWidth\">\r\n            <summary>\r\n            Maximum width of the text for multi level labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MaximumTextWidth"}},{"Kind":"Components.Component","Name":"Start","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCategory.Start\">\r\n            <summary>\r\n            Start value of the multi level labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Start"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCategory.Text\">\r\n            <summary>\r\n            multi level labels text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Charts.BorderType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCategory.Type\">\r\n            <summary>\r\n            Border type for labels.\r\n            Rectangle\r\n            Without Top Border\r\n            Without Top and BottomBorder\r\n            Without Border\r\n            Brace\r\n            CurlyBrace.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.BorderType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCategory","Common.TypeNameIdentifier":"ChartCategory"}},{"HashCode":-665955865,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartCategory.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartCategory"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCategory.ChildContent","Common.TypeNameIdentifier":"ChartCategory"}},{"HashCode":1871669897,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartCategory.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartCategory"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCategory.ChildContent","Common.TypeNameIdentifier":"ChartCategory"}},{"HashCode":-1559030184,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartMultiLevelLabel","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartMultiLevelLabel\">\r\n            <summary>\r\n            Options to customize the multilevel label of the axis.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartMultiLevelLabel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Alignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartMultiLevelLabel.Alignment\">\r\n            <summary>\r\n            Defines the position of the multi level labels. They are,\r\n            Near: Places the multi level labels at Near.\r\n            Center: Places the multi level labels at Center.\r\n            Far: Places the multi level labels at Far.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"Alignment"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartMultiLevelLabel.Border\">\r\n            <summary>\r\n            Border of the multi level labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"Categories","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartCategory>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartMultiLevelLabel.Categories\">\r\n            <summary>\r\n            Multi level categories for multi level labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.Charts.ChartCategory>","Common.PropertyName":"Categories"}},{"Kind":"Components.Component","Name":"Overflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartMultiLevelLabel.Overflow\">\r\n            <summary>\r\n            Defines the textOverFlow for multi level labels. They are,\r\n            Trim: Trim textOverflow for multi level labels.\r\n            Wrap: Wrap textOverflow for multi level labels.\r\n            None: None textOverflow for multi level labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"Overflow"}},{"Kind":"Components.Component","Name":"TextStyle","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartMultiLevelLabel.TextStyle\">\r\n            <summary>\r\n            Options to customize the multi level labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle","Common.PropertyName":"TextStyle"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartMultiLevelLabel","Common.TypeNameIdentifier":"ChartMultiLevelLabel"}},{"HashCode":1624501853,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartMultiLevelLabel","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartMultiLevelLabel\">\r\n            <summary>\r\n            Options to customize the multilevel label of the axis.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartMultiLevelLabel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Alignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartMultiLevelLabel.Alignment\">\r\n            <summary>\r\n            Defines the position of the multi level labels. They are,\r\n            Near: Places the multi level labels at Near.\r\n            Center: Places the multi level labels at Center.\r\n            Far: Places the multi level labels at Far.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"Alignment"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartMultiLevelLabel.Border\">\r\n            <summary>\r\n            Border of the multi level labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"Categories","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartCategory>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartMultiLevelLabel.Categories\">\r\n            <summary>\r\n            Multi level categories for multi level labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.Charts.ChartCategory>","Common.PropertyName":"Categories"}},{"Kind":"Components.Component","Name":"Overflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartMultiLevelLabel.Overflow\">\r\n            <summary>\r\n            Defines the textOverFlow for multi level labels. They are,\r\n            Trim: Trim textOverflow for multi level labels.\r\n            Wrap: Wrap textOverflow for multi level labels.\r\n            None: None textOverflow for multi level labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"Overflow"}},{"Kind":"Components.Component","Name":"TextStyle","TypeName":"Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartMultiLevelLabel.TextStyle\">\r\n            <summary>\r\n            Options to customize the multi level labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisMultiLevelLabelTextStyle","Common.PropertyName":"TextStyle"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartMultiLevelLabel","Common.TypeNameIdentifier":"ChartMultiLevelLabel"}},{"HashCode":-331437210,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartMultiLevelLabel.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartMultiLevelLabel"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartMultiLevelLabel.ChildContent","Common.TypeNameIdentifier":"ChartMultiLevelLabel"}},{"HashCode":-511447229,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartMultiLevelLabel.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartMultiLevelLabel"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartMultiLevelLabel.ChildContent","Common.TypeNameIdentifier":"ChartMultiLevelLabel"}},{"HashCode":301271543,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartMultiLevelLabels","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartMultiLevelLabels\">\r\n            <summary>\r\n            Options to customize the multi level labels of the axis.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartMultiLevelLabels"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartMultiLevelLabels","Common.TypeNameIdentifier":"ChartMultiLevelLabels"}},{"HashCode":1764078845,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartMultiLevelLabels","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartMultiLevelLabels\">\r\n            <summary>\r\n            Options to customize the multi level labels of the axis.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartMultiLevelLabels"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartMultiLevelLabels","Common.TypeNameIdentifier":"ChartMultiLevelLabels"}},{"HashCode":886063495,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartMultiLevelLabels.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartMultiLevelLabels"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartMultiLevelLabels.ChildContent","Common.TypeNameIdentifier":"ChartMultiLevelLabels"}},{"HashCode":-783335285,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartMultiLevelLabels.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartMultiLevelLabels"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartMultiLevelLabels.ChildContent","Common.TypeNameIdentifier":"ChartMultiLevelLabels"}},{"HashCode":742946469,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings\">\r\n            <summary>\r\n            Options to customize the Scrollbar settings of the axis.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartAxisScrollbarSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings.Enable\">\r\n            <summary>\r\n            Enables the scrollbar for lazy loading.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}},{"Kind":"Components.Component","Name":"PointsLength","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings.PointsLength\">\r\n            <summary>\r\n            Defines the length of the points for numeric and logarithmic values.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PointsLength"}},{"Kind":"Components.Component","Name":"Range","TypeName":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings.Range\">\r\n            <summary>\r\n            Specifies the range for date time values alone.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange","Common.PropertyName":"Range"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings","Common.TypeNameIdentifier":"ChartAxisScrollbarSettings"}},{"HashCode":633292323,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings\">\r\n            <summary>\r\n            Options to customize the Scrollbar settings of the axis.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings.Enable\">\r\n            <summary>\r\n            Enables the scrollbar for lazy loading.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}},{"Kind":"Components.Component","Name":"PointsLength","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings.PointsLength\">\r\n            <summary>\r\n            Defines the length of the points for numeric and logarithmic values.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PointsLength"}},{"Kind":"Components.Component","Name":"Range","TypeName":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings.Range\">\r\n            <summary>\r\n            Specifies the range for date time values alone.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange","Common.PropertyName":"Range"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings","Common.TypeNameIdentifier":"ChartAxisScrollbarSettings"}},{"HashCode":1987496181,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartAxisScrollbarSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings.ChildContent","Common.TypeNameIdentifier":"ChartAxisScrollbarSettings"}},{"HashCode":-19733799,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettings.ChildContent","Common.TypeNameIdentifier":"ChartAxisScrollbarSettings"}},{"HashCode":-270128941,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange\">\r\n            <summary>\r\n            Options to customize the range of scroll bar range.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartAxisScrollbarSettingsRange"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange.Maximum\">\r\n            <summary>\r\n            Specifies the maximum range of an scrollbar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange.Minimum\">\r\n            <summary>\r\n            Specifies the minimum range of an scrollbar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange","Common.TypeNameIdentifier":"ChartAxisScrollbarSettingsRange"}},{"HashCode":-495239105,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange\">\r\n            <summary>\r\n            Options to customize the range of scroll bar range.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange.Maximum\">\r\n            <summary>\r\n            Specifies the maximum range of an scrollbar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange.Minimum\">\r\n            <summary>\r\n            Specifies the minimum range of an scrollbar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange","Common.TypeNameIdentifier":"ChartAxisScrollbarSettingsRange"}},{"HashCode":1445514083,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartAxisScrollbarSettingsRange"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange.ChildContent","Common.TypeNameIdentifier":"ChartAxisScrollbarSettingsRange"}},{"HashCode":416674931,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange.ChildContent","Common.TypeNameIdentifier":"ChartAxisScrollbarSettingsRange"}},{"HashCode":-565696379,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings\">\r\n            <summary>\r\n            Options to customize the scrollbar setings of the axis.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartCommonScrollbarSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings.Enable\">\r\n            <summary>\r\n            Enables the scrollbar for lazy loading.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}},{"Kind":"Components.Component","Name":"PointsLength","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings.PointsLength\">\r\n            <summary>\r\n            Defines the length of the points for numeric and logarithmic values.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PointsLength"}},{"Kind":"Components.Component","Name":"Range","TypeName":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings.Range\">\r\n            <summary>\r\n            Specifies the range for date time values alone.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange","Common.PropertyName":"Range"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings","Common.TypeNameIdentifier":"ChartCommonScrollbarSettings"}},{"HashCode":2045545319,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings\">\r\n            <summary>\r\n            Options to customize the scrollbar setings of the axis.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings.Enable\">\r\n            <summary>\r\n            Enables the scrollbar for lazy loading.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}},{"Kind":"Components.Component","Name":"PointsLength","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings.PointsLength\">\r\n            <summary>\r\n            Defines the length of the points for numeric and logarithmic values.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PointsLength"}},{"Kind":"Components.Component","Name":"Range","TypeName":"Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings.Range\">\r\n            <summary>\r\n            Specifies the range for date time values alone.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartAxisScrollbarSettingsRange","Common.PropertyName":"Range"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings","Common.TypeNameIdentifier":"ChartCommonScrollbarSettings"}},{"HashCode":-523957499,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartCommonScrollbarSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings.ChildContent","Common.TypeNameIdentifier":"ChartCommonScrollbarSettings"}},{"HashCode":1469295297,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCommonScrollbarSettings.ChildContent","Common.TypeNameIdentifier":"ChartCommonScrollbarSettings"}},{"HashCode":-363180334,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange\">\r\n            <summary>\r\n            Options to customize the scrollbar range of the axis.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartCommonScrollbarSettingsRange"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange.Maximum\">\r\n            <summary>\r\n            Specifies the maximum range of an scrollbar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange.Minimum\">\r\n            <summary>\r\n            Specifies the minimum range of an scrollbar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange","Common.TypeNameIdentifier":"ChartCommonScrollbarSettingsRange"}},{"HashCode":1458648058,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange\">\r\n            <summary>\r\n            Options to customize the scrollbar range of the axis.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Maximum","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange.Maximum\">\r\n            <summary>\r\n            Specifies the maximum range of an scrollbar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Maximum"}},{"Kind":"Components.Component","Name":"Minimum","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange.Minimum\">\r\n            <summary>\r\n            Specifies the minimum range of an scrollbar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Minimum"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange","Common.TypeNameIdentifier":"ChartCommonScrollbarSettingsRange"}},{"HashCode":1690977753,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartCommonScrollbarSettingsRange"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange.ChildContent","Common.TypeNameIdentifier":"ChartCommonScrollbarSettingsRange"}},{"HashCode":144879738,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCommonScrollbarSettingsRange.ChildContent","Common.TypeNameIdentifier":"ChartCommonScrollbarSettingsRange"}},{"HashCode":-1241579049,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartStripline","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartStripline\">\r\n            <summary>\r\n            Options to customize the striplines of the axis.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartStripline"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartStriplineBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.Border\">\r\n            <summary>\r\n            Border of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartStriplineBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.Color\">\r\n            <summary>\r\n            Color of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.DashArray\">\r\n            <summary>\r\n            Dash Array of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"End","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.End\">\r\n            <summary>\r\n            End value of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"End"}},{"Kind":"Components.Component","Name":"HorizontalAlignment","TypeName":"Syncfusion.Blazor.Charts.Anchor","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.HorizontalAlignment\">\r\n            <summary>\r\n            Defines the position of the strip line text horizontally. They are,\r\n            Start: Places the strip line text at the start.\r\n            Middle: Places the strip line text in the middle.\r\n            End: Places the strip line text at the end.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Anchor","Common.PropertyName":"HorizontalAlignment"}},{"Kind":"Components.Component","Name":"IsRepeat","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.IsRepeat\">\r\n            <summary>\r\n            IsRepeat value of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsRepeat"}},{"Kind":"Components.Component","Name":"IsSegmented","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.IsSegmented\">\r\n            <summary>\r\n            IsSegmented value of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsSegmented"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.Opacity\">\r\n            <summary>\r\n            Strip line Opacity.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"RepeatEvery","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.RepeatEvery\">\r\n            <summary>\r\n            repeatEvery value of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"RepeatEvery"}},{"Kind":"Components.Component","Name":"RepeatUntil","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.RepeatUntil\">\r\n            <summary>\r\n            repeatUntil value of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"RepeatUntil"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.Rotation\">\r\n            <summary>\r\n            The angle to which the strip line text gets rotated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"SegmentAxisName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.SegmentAxisName\">\r\n            <summary>\r\n            segmentAxisName of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SegmentAxisName"}},{"Kind":"Components.Component","Name":"SegmentEnd","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.SegmentEnd\">\r\n            <summary>\r\n            segmentEnd value of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"SegmentEnd"}},{"Kind":"Components.Component","Name":"SegmentStart","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.SegmentStart\">\r\n            <summary>\r\n            segmentStart value of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"SegmentStart"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.Size\">\r\n            <summary>\r\n            Size of the strip line, when it starts from the origin.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"SizeType","TypeName":"Syncfusion.Blazor.Charts.SizeType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.SizeType\">\r\n            <summary>\r\n            Size type of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.SizeType","Common.PropertyName":"SizeType"}},{"Kind":"Components.Component","Name":"Start","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.Start\">\r\n            <summary>\r\n            Start value of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Start"}},{"Kind":"Components.Component","Name":"StartFromAxis","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.StartFromAxis\">\r\n            <summary>\r\n             If set true, strip line get render from axis origin.\r\n             @default false.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"StartFromAxis"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.Text\">\r\n            <summary>\r\n            Strip line text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"TextStyle","TypeName":"Syncfusion.Blazor.Charts.ChartStriplineTextStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.TextStyle\">\r\n            <summary>\r\n            Options to customize the strip line text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartStriplineTextStyle","Common.PropertyName":"TextStyle"}},{"Kind":"Components.Component","Name":"VerticalAlignment","TypeName":"Syncfusion.Blazor.Charts.Anchor","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.VerticalAlignment\">\r\n            <summary>\r\n            Defines the position of the strip line text vertically. They are,\r\n             Start: Places the strip line text at the start.\r\n             Middle: Places the strip line text in the middle.\r\n             End: Places the strip line text at the end.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Anchor","Common.PropertyName":"VerticalAlignment"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.Visible\">\r\n            <summary>\r\n            If set true, strip line for axis renders.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"Syncfusion.Blazor.Charts.ZIndex","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.ZIndex\">\r\n            <summary>\r\n            Specifies the order of the strip line. They are,\r\n            Behind: Places the strip line behind the series elements.\r\n            Over: Places the strip line over the series elements.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ZIndex","Common.PropertyName":"ZIndex"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartStripline","Common.TypeNameIdentifier":"ChartStripline"}},{"HashCode":1144529582,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartStripline","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartStripline\">\r\n            <summary>\r\n            Options to customize the striplines of the axis.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartStripline"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartStriplineBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.Border\">\r\n            <summary>\r\n            Border of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartStriplineBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.Color\">\r\n            <summary>\r\n            Color of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.DashArray\">\r\n            <summary>\r\n            Dash Array of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"End","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.End\">\r\n            <summary>\r\n            End value of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"End"}},{"Kind":"Components.Component","Name":"HorizontalAlignment","TypeName":"Syncfusion.Blazor.Charts.Anchor","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.HorizontalAlignment\">\r\n            <summary>\r\n            Defines the position of the strip line text horizontally. They are,\r\n            Start: Places the strip line text at the start.\r\n            Middle: Places the strip line text in the middle.\r\n            End: Places the strip line text at the end.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Anchor","Common.PropertyName":"HorizontalAlignment"}},{"Kind":"Components.Component","Name":"IsRepeat","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.IsRepeat\">\r\n            <summary>\r\n            IsRepeat value of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsRepeat"}},{"Kind":"Components.Component","Name":"IsSegmented","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.IsSegmented\">\r\n            <summary>\r\n            IsSegmented value of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsSegmented"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.Opacity\">\r\n            <summary>\r\n            Strip line Opacity.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"RepeatEvery","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.RepeatEvery\">\r\n            <summary>\r\n            repeatEvery value of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"RepeatEvery"}},{"Kind":"Components.Component","Name":"RepeatUntil","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.RepeatUntil\">\r\n            <summary>\r\n            repeatUntil value of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"RepeatUntil"}},{"Kind":"Components.Component","Name":"Rotation","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.Rotation\">\r\n            <summary>\r\n            The angle to which the strip line text gets rotated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Rotation"}},{"Kind":"Components.Component","Name":"SegmentAxisName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.SegmentAxisName\">\r\n            <summary>\r\n            segmentAxisName of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SegmentAxisName"}},{"Kind":"Components.Component","Name":"SegmentEnd","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.SegmentEnd\">\r\n            <summary>\r\n            segmentEnd value of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"SegmentEnd"}},{"Kind":"Components.Component","Name":"SegmentStart","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.SegmentStart\">\r\n            <summary>\r\n            segmentStart value of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"SegmentStart"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.Size\">\r\n            <summary>\r\n            Size of the strip line, when it starts from the origin.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"SizeType","TypeName":"Syncfusion.Blazor.Charts.SizeType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.SizeType\">\r\n            <summary>\r\n            Size type of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.SizeType","Common.PropertyName":"SizeType"}},{"Kind":"Components.Component","Name":"Start","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.Start\">\r\n            <summary>\r\n            Start value of the strip line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Start"}},{"Kind":"Components.Component","Name":"StartFromAxis","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.StartFromAxis\">\r\n            <summary>\r\n             If set true, strip line get render from axis origin.\r\n             @default false.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"StartFromAxis"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.Text\">\r\n            <summary>\r\n            Strip line text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"TextStyle","TypeName":"Syncfusion.Blazor.Charts.ChartStriplineTextStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.TextStyle\">\r\n            <summary>\r\n            Options to customize the strip line text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartStriplineTextStyle","Common.PropertyName":"TextStyle"}},{"Kind":"Components.Component","Name":"VerticalAlignment","TypeName":"Syncfusion.Blazor.Charts.Anchor","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.VerticalAlignment\">\r\n            <summary>\r\n            Defines the position of the strip line text vertically. They are,\r\n             Start: Places the strip line text at the start.\r\n             Middle: Places the strip line text in the middle.\r\n             End: Places the strip line text at the end.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Anchor","Common.PropertyName":"VerticalAlignment"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.Visible\">\r\n            <summary>\r\n            If set true, strip line for axis renders.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"ZIndex","TypeName":"Syncfusion.Blazor.Charts.ZIndex","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStripline.ZIndex\">\r\n            <summary>\r\n            Specifies the order of the strip line. They are,\r\n            Behind: Places the strip line behind the series elements.\r\n            Over: Places the strip line over the series elements.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ZIndex","Common.PropertyName":"ZIndex"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartStripline","Common.TypeNameIdentifier":"ChartStripline"}},{"HashCode":1920133081,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartStripline.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartStripline"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartStripline.ChildContent","Common.TypeNameIdentifier":"ChartStripline"}},{"HashCode":-1660986149,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartStripline.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartStripline"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartStripline.ChildContent","Common.TypeNameIdentifier":"ChartStripline"}},{"HashCode":-1324775888,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartStriplineBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartStriplineBorder\">\r\n            <summary>\r\n            Specifies the configuration of border for the striplines.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartStriplineBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Width\">\r\n            <summary>\r\n            Sets and gets the the width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartStriplineBorder","Common.TypeNameIdentifier":"ChartStriplineBorder"}},{"HashCode":1426069754,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartStriplineBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartStriplineBorder\">\r\n            <summary>\r\n            Specifies the configuration of border for the striplines.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartStriplineBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Width\">\r\n            <summary>\r\n            Sets and gets the the width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartStriplineBorder","Common.TypeNameIdentifier":"ChartStriplineBorder"}},{"HashCode":-184574783,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartStriplineBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartStriplineBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartStriplineBorder.ChildContent","Common.TypeNameIdentifier":"ChartStriplineBorder"}},{"HashCode":1985545563,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartStriplineBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartStriplineBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartStriplineBorder.ChildContent","Common.TypeNameIdentifier":"ChartStriplineBorder"}},{"HashCode":-683872903,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartStriplines","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartStriplines\">\r\n            <summary>\r\n            Strip lines are used to shade the different ranges in plot area in different colors to improve the readability of the chart.\r\n            You can annotate it with text to indicate what that particular region indicates.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartStriplines"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartStriplines","Common.TypeNameIdentifier":"ChartStriplines"}},{"HashCode":2128073585,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartStriplines","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartStriplines\">\r\n            <summary>\r\n            Strip lines are used to shade the different ranges in plot area in different colors to improve the readability of the chart.\r\n            You can annotate it with text to indicate what that particular region indicates.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartStriplines"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartStriplines","Common.TypeNameIdentifier":"ChartStriplines"}},{"HashCode":524921216,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartStriplines.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartStriplines"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartStriplines.ChildContent","Common.TypeNameIdentifier":"ChartStriplines"}},{"HashCode":-2061354393,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartStriplines.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartStriplines"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartStriplines.ChildContent","Common.TypeNameIdentifier":"ChartStriplines"}},{"HashCode":843567751,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartStriplineTextStyle","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartStriplineTextStyle\">\r\n            <summary>\r\n            Specifies the configuration of textstyle for the stripline text.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartStriplineTextStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStriplineTextStyle.Size\">\r\n            <summary>\r\n            Unique size of the axis labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStriplineTextStyle.Color\">\r\n            <summary>\r\n            Font color for the axis title.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartStriplineTextStyle","Common.TypeNameIdentifier":"ChartStriplineTextStyle"}},{"HashCode":-1339345815,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartStriplineTextStyle","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartStriplineTextStyle\">\r\n            <summary>\r\n            Specifies the configuration of textstyle for the stripline text.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartStriplineTextStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStriplineTextStyle.Size\">\r\n            <summary>\r\n            Unique size of the axis labels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartStriplineTextStyle.Color\">\r\n            <summary>\r\n            Font color for the axis title.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartStriplineTextStyle","Common.TypeNameIdentifier":"ChartStriplineTextStyle"}},{"HashCode":-756626649,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartStriplineTextStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartStriplineTextStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartStriplineTextStyle.ChildContent","Common.TypeNameIdentifier":"ChartStriplineTextStyle"}},{"HashCode":1091855282,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartStriplineTextStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartStriplineTextStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartStriplineTextStyle.ChildContent","Common.TypeNameIdentifier":"ChartStriplineTextStyle"}},{"HashCode":794575141,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartEvents","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnAxisLabelRender","TypeName":"System.Action<Syncfusion.Blazor.Charts.AxisLabelRenderEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnAxisLabelRender\">\r\n            <summary>\r\n            Triggers before each axis label is rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.AxisLabelRenderEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnAxisLabelRender"}},{"Kind":"Components.Component","Name":"OnAxisActualRangeCalculated","TypeName":"System.Action<Syncfusion.Blazor.Charts.AxisRangeCalculatedEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnAxisActualRangeCalculated\">\r\n            <summary>\r\n            Triggers before each axis range is rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.AxisRangeCalculatedEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnAxisActualRangeCalculated"}},{"Kind":"Components.Component","Name":"OnPointRender","TypeName":"System.Action<Syncfusion.Blazor.Charts.PointRenderEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnPointRender\">\r\n            <summary>\r\n             Triggers before each points for the series is rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.PointRenderEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnPointRender"}},{"Kind":"Components.Component","Name":"OnDataLabelRender","TypeName":"System.Action<Syncfusion.Blazor.Charts.TextRenderEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnDataLabelRender\">\r\n            <summary>\r\n            Triggers before the data label for series is rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.TextRenderEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnDataLabelRender"}},{"Kind":"Components.Component","Name":"ChartMouseClick","TypeName":"System.Action<Syncfusion.Blazor.Charts.ChartMouseEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.ChartMouseClick\">\r\n            <summary>\r\n            Triggers when mouse click.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.ChartMouseEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"ChartMouseClick"}},{"Kind":"Components.Component","Name":"ChartMouseDown","TypeName":"System.Action<Syncfusion.Blazor.Charts.ChartMouseEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.ChartMouseDown\">\r\n            <summary>\r\n            Triggers when mouse down.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.ChartMouseEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"ChartMouseDown"}},{"Kind":"Components.Component","Name":"ChartMouseUp","TypeName":"System.Action<Syncfusion.Blazor.Charts.ChartMouseEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.ChartMouseUp\">\r\n            <summary>\r\n            Triggers when mouse up.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.ChartMouseEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"ChartMouseUp"}},{"Kind":"Components.Component","Name":"ChartMouseMove","TypeName":"System.Action<Syncfusion.Blazor.Charts.ChartMouseEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.ChartMouseMove\">\r\n            <summary>\r\n            Triggers when mouse move.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.ChartMouseEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"ChartMouseMove"}},{"Kind":"Components.Component","Name":"OnSeriesRender","TypeName":"System.Action<Syncfusion.Blazor.Charts.SeriesRenderEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnSeriesRender\">\r\n            <summary>\r\n             Triggers before each series is rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.SeriesRenderEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnSeriesRender"}},{"Kind":"Components.Component","Name":"OnLegendItemRender","TypeName":"System.Action<Syncfusion.Blazor.Charts.LegendRenderEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnLegendItemRender\">\r\n            <summary>\r\n             Triggers before each legend item is rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.LegendRenderEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnLegendItemRender"}},{"Kind":"Components.Component","Name":"OnAxisMultiLevelLabelRender","TypeName":"System.Action<Syncfusion.Blazor.Charts.AxisMultiLabelRenderEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnAxisMultiLevelLabelRender\">\r\n            <summary>\r\n            Triggers while render multiLevelLabels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.AxisMultiLabelRenderEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnAxisMultiLevelLabelRender"}},{"Kind":"Components.Component","Name":"OnScrollChanged","TypeName":"System.Action<Syncfusion.Blazor.Charts.ScrollEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnScrollChanged\">\r\n            <summary>\r\n            Triggers when change the scroll.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.ScrollEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnScrollChanged"}},{"Kind":"Components.Component","Name":"OnZooming","TypeName":"System.Action<Syncfusion.Blazor.Charts.ZoomingEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnZooming\">\r\n            <summary>\r\n            Triggers after the zoom selection is triggered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.ZoomingEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnZooming"}},{"Kind":"Components.Component","Name":"OnZoomStart","TypeName":"System.Action<Syncfusion.Blazor.Charts.ZoomingEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnZoomStart\">\r\n            <summary>\r\n            Triggers after the zoom selection is triggered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.ZoomingEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnZoomStart"}},{"Kind":"Components.Component","Name":"OnZoomEnd","TypeName":"System.Action<Syncfusion.Blazor.Charts.ZoomingEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnZoomEnd\">\r\n            <summary>\r\n            Triggers after the zoom selection is triggered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.ZoomingEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnZoomEnd"}},{"Kind":"Components.Component","Name":"OnLegendClick","TypeName":"System.Action<Syncfusion.Blazor.Charts.LegendClickEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnLegendClick\">\r\n            <summary>\r\n            Triggers when the legend item is clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.LegendClickEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnLegendClick"}},{"Kind":"Components.Component","Name":"OnCrosshairMove","TypeName":"System.Action<Syncfusion.Blazor.Charts.CrosshairMoveEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnCrosshairMove\">\r\n            <summary>\r\n            Triggers when the crosshair axis value updated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.CrosshairMoveEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnCrosshairMove"}},{"Kind":"Components.Component","Name":"OnDataEditCompleted","TypeName":"System.Action<Syncfusion.Blazor.Charts.DataEditingEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnDataEditCompleted\">\r\n            <summary>\r\n            Triggers when the point drag end.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.DataEditingEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnDataEditCompleted"}},{"Kind":"Components.Component","Name":"OnDataEdit","TypeName":"System.Action<Syncfusion.Blazor.Charts.DataEditingEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnDataEdit\">\r\n            <summary>\r\n            Triggers when the point drag start.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.DataEditingEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnDataEdit"}},{"Kind":"Components.Component","Name":"OnSelectionChanged","TypeName":"System.Action<Syncfusion.Blazor.Charts.SelectionCompleteEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnSelectionChanged\">\r\n            <summary>\r\n            Triggers after the selection is completed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.SelectionCompleteEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnSelectionChanged"}},{"Kind":"Components.Component","Name":"OnExportComplete","TypeName":"System.Action<Syncfusion.Blazor.Charts.ExportEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnExportComplete\">\r\n            <summary>\r\n            Triggers after the print completed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.ExportEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnExportComplete"}},{"Kind":"Components.Component","Name":"OnPrintComplete","TypeName":"System.Action","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnPrintComplete\">\r\n            <summary>\r\n            Triggers after the print completed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnPrintComplete"}},{"Kind":"Components.Component","Name":"SizeChanged","TypeName":"System.Action<Syncfusion.Blazor.Charts.ResizeEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.SizeChanged\">\r\n            <summary>\r\n            Triggers after resizing of chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.ResizeEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"SizeChanged"}},{"Kind":"Components.Component","Name":"TooltipRender","TypeName":"System.Action<Syncfusion.Blazor.Charts.TooltipRenderEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.TooltipRender\">\r\n            <summary>\r\n            Triggers before the tooltip for series is rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.TooltipRenderEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"TooltipRender"}},{"Kind":"Components.Component","Name":"SharedTooltipRender","TypeName":"System.Action<Syncfusion.Blazor.Charts.SharedTooltipRenderEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.SharedTooltipRender\">\r\n            <summary>\r\n            Triggers before the tooltip for series is rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.SharedTooltipRenderEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"SharedTooltipRender"}},{"Kind":"Components.Component","Name":"OnPointClick","TypeName":"System.Action<Syncfusion.Blazor.Charts.PointEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnPointClick\">\r\n            <summary>\r\n            Triggers on point click.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.PointEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnPointClick"}},{"Kind":"Components.Component","Name":"OnMultiLevelLabelClick","TypeName":"System.Action<Syncfusion.Blazor.Charts.MultiLevelLabelClickEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnMultiLevelLabelClick\">\r\n            <summary>\r\n            Triggers after click on multiLevelLabelClick.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.MultiLevelLabelClickEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnMultiLevelLabelClick"}},{"Kind":"Components.Component","Name":"Loaded","TypeName":"System.Action<Syncfusion.Blazor.Charts.LoadedEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.Loaded\">\r\n            <summary>\r\n            Triggers when the chart rendering completed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.LoadedEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"Loaded"}},{"Kind":"Components.Component","Name":"OnAxisLabelClick","TypeName":"System.Action<Syncfusion.Blazor.Charts.AxisLabelClickEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnAxisLabelClick\">\r\n            <summary>\r\n            Triggers when x axis label clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.AxisLabelClickEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnAxisLabelClick"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartEvents","Common.TypeNameIdentifier":"ChartEvents"}},{"HashCode":-1804201043,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartEvents","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartEvents"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnAxisLabelRender","TypeName":"System.Action<Syncfusion.Blazor.Charts.AxisLabelRenderEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnAxisLabelRender\">\r\n            <summary>\r\n            Triggers before each axis label is rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.AxisLabelRenderEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnAxisLabelRender"}},{"Kind":"Components.Component","Name":"OnAxisActualRangeCalculated","TypeName":"System.Action<Syncfusion.Blazor.Charts.AxisRangeCalculatedEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnAxisActualRangeCalculated\">\r\n            <summary>\r\n            Triggers before each axis range is rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.AxisRangeCalculatedEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnAxisActualRangeCalculated"}},{"Kind":"Components.Component","Name":"OnPointRender","TypeName":"System.Action<Syncfusion.Blazor.Charts.PointRenderEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnPointRender\">\r\n            <summary>\r\n             Triggers before each points for the series is rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.PointRenderEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnPointRender"}},{"Kind":"Components.Component","Name":"OnDataLabelRender","TypeName":"System.Action<Syncfusion.Blazor.Charts.TextRenderEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnDataLabelRender\">\r\n            <summary>\r\n            Triggers before the data label for series is rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.TextRenderEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnDataLabelRender"}},{"Kind":"Components.Component","Name":"ChartMouseClick","TypeName":"System.Action<Syncfusion.Blazor.Charts.ChartMouseEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.ChartMouseClick\">\r\n            <summary>\r\n            Triggers when mouse click.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.ChartMouseEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"ChartMouseClick"}},{"Kind":"Components.Component","Name":"ChartMouseDown","TypeName":"System.Action<Syncfusion.Blazor.Charts.ChartMouseEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.ChartMouseDown\">\r\n            <summary>\r\n            Triggers when mouse down.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.ChartMouseEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"ChartMouseDown"}},{"Kind":"Components.Component","Name":"ChartMouseUp","TypeName":"System.Action<Syncfusion.Blazor.Charts.ChartMouseEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.ChartMouseUp\">\r\n            <summary>\r\n            Triggers when mouse up.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.ChartMouseEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"ChartMouseUp"}},{"Kind":"Components.Component","Name":"ChartMouseMove","TypeName":"System.Action<Syncfusion.Blazor.Charts.ChartMouseEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.ChartMouseMove\">\r\n            <summary>\r\n            Triggers when mouse move.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.ChartMouseEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"ChartMouseMove"}},{"Kind":"Components.Component","Name":"OnSeriesRender","TypeName":"System.Action<Syncfusion.Blazor.Charts.SeriesRenderEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnSeriesRender\">\r\n            <summary>\r\n             Triggers before each series is rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.SeriesRenderEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnSeriesRender"}},{"Kind":"Components.Component","Name":"OnLegendItemRender","TypeName":"System.Action<Syncfusion.Blazor.Charts.LegendRenderEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnLegendItemRender\">\r\n            <summary>\r\n             Triggers before each legend item is rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.LegendRenderEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnLegendItemRender"}},{"Kind":"Components.Component","Name":"OnAxisMultiLevelLabelRender","TypeName":"System.Action<Syncfusion.Blazor.Charts.AxisMultiLabelRenderEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnAxisMultiLevelLabelRender\">\r\n            <summary>\r\n            Triggers while render multiLevelLabels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.AxisMultiLabelRenderEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnAxisMultiLevelLabelRender"}},{"Kind":"Components.Component","Name":"OnScrollChanged","TypeName":"System.Action<Syncfusion.Blazor.Charts.ScrollEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnScrollChanged\">\r\n            <summary>\r\n            Triggers when change the scroll.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.ScrollEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnScrollChanged"}},{"Kind":"Components.Component","Name":"OnZooming","TypeName":"System.Action<Syncfusion.Blazor.Charts.ZoomingEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnZooming\">\r\n            <summary>\r\n            Triggers after the zoom selection is triggered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.ZoomingEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnZooming"}},{"Kind":"Components.Component","Name":"OnZoomStart","TypeName":"System.Action<Syncfusion.Blazor.Charts.ZoomingEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnZoomStart\">\r\n            <summary>\r\n            Triggers after the zoom selection is triggered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.ZoomingEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnZoomStart"}},{"Kind":"Components.Component","Name":"OnZoomEnd","TypeName":"System.Action<Syncfusion.Blazor.Charts.ZoomingEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnZoomEnd\">\r\n            <summary>\r\n            Triggers after the zoom selection is triggered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.ZoomingEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnZoomEnd"}},{"Kind":"Components.Component","Name":"OnLegendClick","TypeName":"System.Action<Syncfusion.Blazor.Charts.LegendClickEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnLegendClick\">\r\n            <summary>\r\n            Triggers when the legend item is clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.LegendClickEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnLegendClick"}},{"Kind":"Components.Component","Name":"OnCrosshairMove","TypeName":"System.Action<Syncfusion.Blazor.Charts.CrosshairMoveEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnCrosshairMove\">\r\n            <summary>\r\n            Triggers when the crosshair axis value updated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.CrosshairMoveEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnCrosshairMove"}},{"Kind":"Components.Component","Name":"OnDataEditCompleted","TypeName":"System.Action<Syncfusion.Blazor.Charts.DataEditingEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnDataEditCompleted\">\r\n            <summary>\r\n            Triggers when the point drag end.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.DataEditingEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnDataEditCompleted"}},{"Kind":"Components.Component","Name":"OnDataEdit","TypeName":"System.Action<Syncfusion.Blazor.Charts.DataEditingEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnDataEdit\">\r\n            <summary>\r\n            Triggers when the point drag start.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.DataEditingEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnDataEdit"}},{"Kind":"Components.Component","Name":"OnSelectionChanged","TypeName":"System.Action<Syncfusion.Blazor.Charts.SelectionCompleteEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnSelectionChanged\">\r\n            <summary>\r\n            Triggers after the selection is completed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.SelectionCompleteEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnSelectionChanged"}},{"Kind":"Components.Component","Name":"OnExportComplete","TypeName":"System.Action<Syncfusion.Blazor.Charts.ExportEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnExportComplete\">\r\n            <summary>\r\n            Triggers after the print completed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.ExportEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnExportComplete"}},{"Kind":"Components.Component","Name":"OnPrintComplete","TypeName":"System.Action","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnPrintComplete\">\r\n            <summary>\r\n            Triggers after the print completed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnPrintComplete"}},{"Kind":"Components.Component","Name":"SizeChanged","TypeName":"System.Action<Syncfusion.Blazor.Charts.ResizeEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.SizeChanged\">\r\n            <summary>\r\n            Triggers after resizing of chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.ResizeEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"SizeChanged"}},{"Kind":"Components.Component","Name":"TooltipRender","TypeName":"System.Action<Syncfusion.Blazor.Charts.TooltipRenderEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.TooltipRender\">\r\n            <summary>\r\n            Triggers before the tooltip for series is rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.TooltipRenderEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"TooltipRender"}},{"Kind":"Components.Component","Name":"SharedTooltipRender","TypeName":"System.Action<Syncfusion.Blazor.Charts.SharedTooltipRenderEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.SharedTooltipRender\">\r\n            <summary>\r\n            Triggers before the tooltip for series is rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.SharedTooltipRenderEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"SharedTooltipRender"}},{"Kind":"Components.Component","Name":"OnPointClick","TypeName":"System.Action<Syncfusion.Blazor.Charts.PointEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnPointClick\">\r\n            <summary>\r\n            Triggers on point click.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.PointEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnPointClick"}},{"Kind":"Components.Component","Name":"OnMultiLevelLabelClick","TypeName":"System.Action<Syncfusion.Blazor.Charts.MultiLevelLabelClickEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnMultiLevelLabelClick\">\r\n            <summary>\r\n            Triggers after click on multiLevelLabelClick.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.MultiLevelLabelClickEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnMultiLevelLabelClick"}},{"Kind":"Components.Component","Name":"Loaded","TypeName":"System.Action<Syncfusion.Blazor.Charts.LoadedEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.Loaded\">\r\n            <summary>\r\n            Triggers when the chart rendering completed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.LoadedEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"Loaded"}},{"Kind":"Components.Component","Name":"OnAxisLabelClick","TypeName":"System.Action<Syncfusion.Blazor.Charts.AxisLabelClickEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEvents.OnAxisLabelClick\">\r\n            <summary>\r\n            Triggers when x axis label clicked.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Syncfusion.Blazor.Charts.AxisLabelClickEventArgs>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"OnAxisLabelClick"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartEvents","Common.TypeNameIdentifier":"ChartEvents"}},{"HashCode":1857207146,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartEvents.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartEvents"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartEvents.ChildContent","Common.TypeNameIdentifier":"ChartEvents"}},{"HashCode":-279995603,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartEvents.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartEvents"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartEvents.ChildContent","Common.TypeNameIdentifier":"ChartEvents"}},{"HashCode":686182271,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartDefaultConnector","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartDefaultConnector\">\r\n            <summary>\r\n            Specifies the connector line style.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartDefaultConnector"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Charts.ConnectorType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDefaultConnector.Type\">\r\n            <summary>\r\n            Specifies the type of the connector line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ConnectorType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDefaultConnector.Color\">\r\n            <summary>\r\n            Specifies the color of the connector line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDefaultConnector.Width\">\r\n            <summary>\r\n            Specifies the width of the connector line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Length","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDefaultConnector.Length\">\r\n            <summary>\r\n            Specifies the length of the connector line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Length"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDefaultConnector.DashArray\">\r\n            <summary>\r\n            Specifies the dashArray for the connector line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDefaultConnector","Common.TypeNameIdentifier":"ChartDefaultConnector"}},{"HashCode":105379301,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartDefaultConnector","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartDefaultConnector\">\r\n            <summary>\r\n            Specifies the connector line style.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartDefaultConnector"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Charts.ConnectorType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDefaultConnector.Type\">\r\n            <summary>\r\n            Specifies the type of the connector line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ConnectorType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDefaultConnector.Color\">\r\n            <summary>\r\n            Specifies the color of the connector line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDefaultConnector.Width\">\r\n            <summary>\r\n            Specifies the width of the connector line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Length","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDefaultConnector.Length\">\r\n            <summary>\r\n            Specifies the length of the connector line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Length"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDefaultConnector.DashArray\">\r\n            <summary>\r\n            Specifies the dashArray for the connector line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDefaultConnector","Common.TypeNameIdentifier":"ChartDefaultConnector"}},{"HashCode":1650401095,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartDefaultConnector.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartDefaultConnector"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDefaultConnector.ChildContent","Common.TypeNameIdentifier":"ChartDefaultConnector"}},{"HashCode":-1043795954,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartDefaultConnector.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartDefaultConnector"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDefaultConnector.ChildContent","Common.TypeNameIdentifier":"ChartDefaultConnector"}},{"HashCode":1578934867,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartIndicator","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartIndicator\">\r\n            <summary>\r\n             Defines the technical indicator, that are used in financial markets.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartIndicator"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Charts.TechnicalIndicators","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.Type\">\r\n            <summary>\r\n            Defines the type of the technical indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TechnicalIndicators","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Period","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.Period\">\r\n            <summary>\r\n            Defines the period, the price changes over which will be considered to predict the trend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Period"}},{"Kind":"Components.Component","Name":"KPeriod","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.KPeriod\">\r\n            <summary>\r\n            Defines the look back period, the price changes over which will define the %K value in stochastic indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"KPeriod"}},{"Kind":"Components.Component","Name":"DPeriod","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.DPeriod\">\r\n            <summary>\r\n            Defines the period, the price changes over which will define the %D value in stochastic indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"DPeriod"}},{"Kind":"Components.Component","Name":"OverBought","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.OverBought\">\r\n            <summary>\r\n            Defines the over-bought(threshold) values. It is applicable for RSI and stochastic indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"OverBought"}},{"Kind":"Components.Component","Name":"OverSold","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.OverSold\">\r\n            <summary>\r\n            Defines the over-sold(threshold) values. It is applicable for RSI and stochastic indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"OverSold"}},{"Kind":"Components.Component","Name":"StandardDeviation","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.StandardDeviation\">\r\n            <summary>\r\n            Sets the standard deviation values that helps to define the upper and lower bollinger bands.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"StandardDeviation"}},{"Kind":"Components.Component","Name":"Field","TypeName":"Syncfusion.Blazor.Charts.FinancialDataFields","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.Field\">\r\n            <summary>\r\n            Defines the field to compare the current value with previous values.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.FinancialDataFields","Common.PropertyName":"Field"}},{"Kind":"Components.Component","Name":"SlowPeriod","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.SlowPeriod\">\r\n            <summary>\r\n            Defines the field to compare the current value with previous values.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"SlowPeriod"}},{"Kind":"Components.Component","Name":"FastPeriod","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.FastPeriod\">\r\n            <summary>\r\n            Sets the fast period to define the Macd line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"FastPeriod"}},{"Kind":"Components.Component","Name":"ShowZones","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.ShowZones\">\r\n            <summary>\r\n            Enables/Disables the over-bought and over-sold regions.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ShowZones"}},{"Kind":"Components.Component","Name":"MacdType","TypeName":"Syncfusion.Blazor.Charts.MacdType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.MacdType\">\r\n            <summary>\r\n            Defines the type of the Macd indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.MacdType","Common.PropertyName":"MacdType"}},{"Kind":"Components.Component","Name":"MacdPositiveColor","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.MacdPositiveColor\">\r\n            <summary>\r\n            Defines the color of the positive bars in Macd indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"MacdPositiveColor"}},{"Kind":"Components.Component","Name":"MacdNegativeColor","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.MacdNegativeColor\">\r\n            <summary>\r\n            Defines the color of the negative bars in Macd indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"MacdNegativeColor"}},{"Kind":"Components.Component","Name":"BandColor","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.BandColor\">\r\n            <summary>\r\n            Options for customizing the BollingerBand in the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"BandColor"}},{"Kind":"Components.Component","Name":"MacdLine","TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorMacdLine","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.MacdLine\">\r\n            <summary>\r\n            Defines the appearance of the the MacdLine of Macd indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartIndicatorMacdLine","Common.PropertyName":"MacdLine"}},{"Kind":"Components.Component","Name":"UpperLine","TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorUpperLine","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.UpperLine\">\r\n            <summary>\r\n            Defines the appearance of the upper line in technical indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartIndicatorUpperLine","Common.PropertyName":"UpperLine"}},{"Kind":"Components.Component","Name":"LowerLine","TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorLowerLine","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.LowerLine\">\r\n            <summary>\r\n            Defines the appearance of lower line in technical indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartIndicatorLowerLine","Common.PropertyName":"LowerLine"}},{"Kind":"Components.Component","Name":"PeriodLine","TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.PeriodLine\">\r\n            <summary>\r\n            Defines the appearance of Period Line in technical indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine","Common.PropertyName":"PeriodLine"}},{"Kind":"Components.Component","Name":"SeriesName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.SeriesName\">\r\n            <summary>\r\n            Defines the name of the series, the data of which has to be depicted as indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SeriesName"}},{"Kind":"Components.Component","Name":"Animation","TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorAnimation","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.Animation\">\r\n            <summary>\r\n            Animation settings for indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartIndicatorAnimation","Common.PropertyName":"Animation"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.Fill\">\r\n            <summary>\r\n            SPecifies the fill color of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Close","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.Close\">\r\n            <summary>\r\n            Specifies the close value of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Close"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.DashArray\">\r\n            <summary>\r\n            Specifies the dashArray of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.DataSource\">\r\n            <summary>\r\n            Defines the datasource for the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"DataSource"}},{"Kind":"Components.Component","Name":"EnableComplexProperty","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.EnableComplexProperty\">\r\n            <summary>\r\n            Enables the complex property data binding for the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableComplexProperty"}},{"Kind":"Components.Component","Name":"High","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.High\">\r\n            <summary>\r\n            Defines the high value of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"High"}},{"Kind":"Components.Component","Name":"Low","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.Low\">\r\n            <summary>\r\n            Defines the low value of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Low"}},{"Kind":"Components.Component","Name":"Open","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.Open\">\r\n            <summary>\r\n            Defines the open value of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Open"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.Visible\">\r\n            <summary>\r\n            Enables the visiblity of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"Volume","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.Volume\">\r\n            <summary>\r\n            Defines the volume value of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Volume"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.Width\">\r\n            <summary>\r\n            Defines the width of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"XAxisName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.XAxisName\">\r\n            <summary>\r\n            Defines the corresponding horizontal axis in which indicator to be plotted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"XAxisName"}},{"Kind":"Components.Component","Name":"XName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.XName\">\r\n            <summary>\r\n            Defines the xValue of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"XName"}},{"Kind":"Components.Component","Name":"YAxisName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.YAxisName\">\r\n            <summary>\r\n             Defines the corresponding vertical axis in which indicator to be plotted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"YAxisName"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicator","Common.TypeNameIdentifier":"ChartIndicator"}},{"HashCode":1686722405,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartIndicator","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartIndicator\">\r\n            <summary>\r\n             Defines the technical indicator, that are used in financial markets.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartIndicator"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Charts.TechnicalIndicators","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.Type\">\r\n            <summary>\r\n            Defines the type of the technical indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TechnicalIndicators","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Period","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.Period\">\r\n            <summary>\r\n            Defines the period, the price changes over which will be considered to predict the trend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Period"}},{"Kind":"Components.Component","Name":"KPeriod","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.KPeriod\">\r\n            <summary>\r\n            Defines the look back period, the price changes over which will define the %K value in stochastic indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"KPeriod"}},{"Kind":"Components.Component","Name":"DPeriod","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.DPeriod\">\r\n            <summary>\r\n            Defines the period, the price changes over which will define the %D value in stochastic indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"DPeriod"}},{"Kind":"Components.Component","Name":"OverBought","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.OverBought\">\r\n            <summary>\r\n            Defines the over-bought(threshold) values. It is applicable for RSI and stochastic indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"OverBought"}},{"Kind":"Components.Component","Name":"OverSold","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.OverSold\">\r\n            <summary>\r\n            Defines the over-sold(threshold) values. It is applicable for RSI and stochastic indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"OverSold"}},{"Kind":"Components.Component","Name":"StandardDeviation","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.StandardDeviation\">\r\n            <summary>\r\n            Sets the standard deviation values that helps to define the upper and lower bollinger bands.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"StandardDeviation"}},{"Kind":"Components.Component","Name":"Field","TypeName":"Syncfusion.Blazor.Charts.FinancialDataFields","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.Field\">\r\n            <summary>\r\n            Defines the field to compare the current value with previous values.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.FinancialDataFields","Common.PropertyName":"Field"}},{"Kind":"Components.Component","Name":"SlowPeriod","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.SlowPeriod\">\r\n            <summary>\r\n            Defines the field to compare the current value with previous values.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"SlowPeriod"}},{"Kind":"Components.Component","Name":"FastPeriod","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.FastPeriod\">\r\n            <summary>\r\n            Sets the fast period to define the Macd line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"FastPeriod"}},{"Kind":"Components.Component","Name":"ShowZones","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.ShowZones\">\r\n            <summary>\r\n            Enables/Disables the over-bought and over-sold regions.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ShowZones"}},{"Kind":"Components.Component","Name":"MacdType","TypeName":"Syncfusion.Blazor.Charts.MacdType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.MacdType\">\r\n            <summary>\r\n            Defines the type of the Macd indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.MacdType","Common.PropertyName":"MacdType"}},{"Kind":"Components.Component","Name":"MacdPositiveColor","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.MacdPositiveColor\">\r\n            <summary>\r\n            Defines the color of the positive bars in Macd indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"MacdPositiveColor"}},{"Kind":"Components.Component","Name":"MacdNegativeColor","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.MacdNegativeColor\">\r\n            <summary>\r\n            Defines the color of the negative bars in Macd indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"MacdNegativeColor"}},{"Kind":"Components.Component","Name":"BandColor","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.BandColor\">\r\n            <summary>\r\n            Options for customizing the BollingerBand in the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"BandColor"}},{"Kind":"Components.Component","Name":"MacdLine","TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorMacdLine","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.MacdLine\">\r\n            <summary>\r\n            Defines the appearance of the the MacdLine of Macd indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartIndicatorMacdLine","Common.PropertyName":"MacdLine"}},{"Kind":"Components.Component","Name":"UpperLine","TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorUpperLine","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.UpperLine\">\r\n            <summary>\r\n            Defines the appearance of the upper line in technical indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartIndicatorUpperLine","Common.PropertyName":"UpperLine"}},{"Kind":"Components.Component","Name":"LowerLine","TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorLowerLine","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.LowerLine\">\r\n            <summary>\r\n            Defines the appearance of lower line in technical indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartIndicatorLowerLine","Common.PropertyName":"LowerLine"}},{"Kind":"Components.Component","Name":"PeriodLine","TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.PeriodLine\">\r\n            <summary>\r\n            Defines the appearance of Period Line in technical indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine","Common.PropertyName":"PeriodLine"}},{"Kind":"Components.Component","Name":"SeriesName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.SeriesName\">\r\n            <summary>\r\n            Defines the name of the series, the data of which has to be depicted as indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SeriesName"}},{"Kind":"Components.Component","Name":"Animation","TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorAnimation","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.Animation\">\r\n            <summary>\r\n            Animation settings for indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartIndicatorAnimation","Common.PropertyName":"Animation"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.Fill\">\r\n            <summary>\r\n            SPecifies the fill color of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Close","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.Close\">\r\n            <summary>\r\n            Specifies the close value of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Close"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.DashArray\">\r\n            <summary>\r\n            Specifies the dashArray of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.DataSource\">\r\n            <summary>\r\n            Defines the datasource for the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"DataSource"}},{"Kind":"Components.Component","Name":"EnableComplexProperty","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.EnableComplexProperty\">\r\n            <summary>\r\n            Enables the complex property data binding for the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableComplexProperty"}},{"Kind":"Components.Component","Name":"High","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.High\">\r\n            <summary>\r\n            Defines the high value of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"High"}},{"Kind":"Components.Component","Name":"Low","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.Low\">\r\n            <summary>\r\n            Defines the low value of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Low"}},{"Kind":"Components.Component","Name":"Open","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.Open\">\r\n            <summary>\r\n            Defines the open value of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Open"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.Visible\">\r\n            <summary>\r\n            Enables the visiblity of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"Volume","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.Volume\">\r\n            <summary>\r\n            Defines the volume value of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Volume"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.Width\">\r\n            <summary>\r\n            Defines the width of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"XAxisName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.XAxisName\">\r\n            <summary>\r\n            Defines the corresponding horizontal axis in which indicator to be plotted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"XAxisName"}},{"Kind":"Components.Component","Name":"XName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.XName\">\r\n            <summary>\r\n            Defines the xValue of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"XName"}},{"Kind":"Components.Component","Name":"YAxisName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicator.YAxisName\">\r\n            <summary>\r\n             Defines the corresponding vertical axis in which indicator to be plotted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"YAxisName"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicator","Common.TypeNameIdentifier":"ChartIndicator"}},{"HashCode":-1151471612,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartIndicator.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartIndicator"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicator.ChildContent","Common.TypeNameIdentifier":"ChartIndicator"}},{"HashCode":-2117312226,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartIndicator.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartIndicator"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicator.ChildContent","Common.TypeNameIdentifier":"ChartIndicator"}},{"HashCode":-1033814239,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartIndicatorAnimation","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartIndicatorAnimation\">\r\n            <summary>\r\n            Options to configure the Animation  for indicator.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartIndicatorAnimation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.Delay\">\r\n            <summary>\r\n            Sets and gets the option for animation delay of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.Duration\">\r\n            <summary>\r\n            Sets and gets the duration of animation in milliseconds.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.Enable\">\r\n            <summary>\r\n            Option to series gets animated on initial loading.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorAnimation","Common.TypeNameIdentifier":"ChartIndicatorAnimation"}},{"HashCode":-201982878,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartIndicatorAnimation","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartIndicatorAnimation\">\r\n            <summary>\r\n            Options to configure the Animation  for indicator.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartIndicatorAnimation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.Delay\">\r\n            <summary>\r\n            Sets and gets the option for animation delay of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.Duration\">\r\n            <summary>\r\n            Sets and gets the duration of animation in milliseconds.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.Enable\">\r\n            <summary>\r\n            Option to series gets animated on initial loading.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorAnimation","Common.TypeNameIdentifier":"ChartIndicatorAnimation"}},{"HashCode":154713541,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartIndicatorAnimation.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartIndicatorAnimation"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorAnimation.ChildContent","Common.TypeNameIdentifier":"ChartIndicatorAnimation"}},{"HashCode":-1032329670,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartIndicatorAnimation.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartIndicatorAnimation"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorAnimation.ChildContent","Common.TypeNameIdentifier":"ChartIndicatorAnimation"}},{"HashCode":-1114581289,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartIndicatorLowerLine","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartIndicatorLowerLine\">\r\n            <summary>\r\n            Options to customize the Lower line of the indicator.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartIndicatorLowerLine"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicatorLowerLine.Width\">\r\n            <summary>\r\n            Defins the width of the lower line of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicatorLowerLine.Color\">\r\n            <summary>\r\n            Defins the color of the lower line of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorLowerLine","Common.TypeNameIdentifier":"ChartIndicatorLowerLine"}},{"HashCode":1757685199,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartIndicatorLowerLine","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartIndicatorLowerLine\">\r\n            <summary>\r\n            Options to customize the Lower line of the indicator.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartIndicatorLowerLine"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicatorLowerLine.Width\">\r\n            <summary>\r\n            Defins the width of the lower line of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicatorLowerLine.Color\">\r\n            <summary>\r\n            Defins the color of the lower line of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorLowerLine","Common.TypeNameIdentifier":"ChartIndicatorLowerLine"}},{"HashCode":-1626335372,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartIndicatorLowerLine.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartIndicatorLowerLine"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorLowerLine.ChildContent","Common.TypeNameIdentifier":"ChartIndicatorLowerLine"}},{"HashCode":-1326955237,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartIndicatorLowerLine.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartIndicatorLowerLine"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorLowerLine.ChildContent","Common.TypeNameIdentifier":"ChartIndicatorLowerLine"}},{"HashCode":582350812,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartIndicatorMacdLine","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartIndicatorMacdLine\">\r\n            <summary>\r\n            Options to customize the Macd line of the indicator.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartIndicatorMacdLine"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicatorMacdLine.Width\">\r\n            <summary>\r\n            Defins the width of the Macd line of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicatorMacdLine.Color\">\r\n            <summary>\r\n            Defins the color of the Macd line of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorMacdLine","Common.TypeNameIdentifier":"ChartIndicatorMacdLine"}},{"HashCode":-689984841,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartIndicatorMacdLine","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartIndicatorMacdLine\">\r\n            <summary>\r\n            Options to customize the Macd line of the indicator.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartIndicatorMacdLine"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicatorMacdLine.Width\">\r\n            <summary>\r\n            Defins the width of the Macd line of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicatorMacdLine.Color\">\r\n            <summary>\r\n            Defins the color of the Macd line of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorMacdLine","Common.TypeNameIdentifier":"ChartIndicatorMacdLine"}},{"HashCode":-435168951,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartIndicatorMacdLine.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartIndicatorMacdLine"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorMacdLine.ChildContent","Common.TypeNameIdentifier":"ChartIndicatorMacdLine"}},{"HashCode":1049158126,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartIndicatorMacdLine.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartIndicatorMacdLine"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorMacdLine.ChildContent","Common.TypeNameIdentifier":"ChartIndicatorMacdLine"}},{"HashCode":-596127287,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine\">\r\n            <summary>\r\n            Options to customize the Lower line of the indicator.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartIndicatorPeriodLine"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine.Width\">\r\n            <summary>\r\n            Defins the width of the period line of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine.Color\">\r\n            <summary>\r\n            Defins the color of the period line of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine","Common.TypeNameIdentifier":"ChartIndicatorPeriodLine"}},{"HashCode":801625587,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine\">\r\n            <summary>\r\n            Options to customize the Lower line of the indicator.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine.Width\">\r\n            <summary>\r\n            Defins the width of the period line of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine.Color\">\r\n            <summary>\r\n            Defins the color of the period line of the indicator.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine","Common.TypeNameIdentifier":"ChartIndicatorPeriodLine"}},{"HashCode":-1414530055,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartIndicatorPeriodLine"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine.ChildContent","Common.TypeNameIdentifier":"ChartIndicatorPeriodLine"}},{"HashCode":2096278605,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorPeriodLine.ChildContent","Common.TypeNameIdentifier":"ChartIndicatorPeriodLine"}},{"HashCode":192832991,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartIndicators","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartIndicators\">\r\n            <summary>\r\n            Defines the collection of technical indicators, that are used in financial markets.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartIndicators"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicators","Common.TypeNameIdentifier":"ChartIndicators"}},{"HashCode":1390376491,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartIndicators","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartIndicators\">\r\n            <summary>\r\n            Defines the collection of technical indicators, that are used in financial markets.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartIndicators"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicators","Common.TypeNameIdentifier":"ChartIndicators"}},{"HashCode":1707523648,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartIndicators.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartIndicators"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicators.ChildContent","Common.TypeNameIdentifier":"ChartIndicators"}},{"HashCode":-1092868400,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartIndicators.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartIndicators"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicators.ChildContent","Common.TypeNameIdentifier":"ChartIndicators"}},{"HashCode":1037093839,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartIndicatorUpperLine","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartIndicatorUpperLine\">\r\n            <summary>\r\n            Options to customize the upper line of the indicator.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartIndicatorUpperLine"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicatorUpperLine.Width\">\r\n            <summary>\r\n            Specifies the width the upper line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicatorUpperLine.Color\">\r\n            <summary>\r\n            Specifies the color of the upper line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorUpperLine","Common.TypeNameIdentifier":"ChartIndicatorUpperLine"}},{"HashCode":1925492752,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartIndicatorUpperLine","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartIndicatorUpperLine\">\r\n            <summary>\r\n            Options to customize the upper line of the indicator.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartIndicatorUpperLine"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicatorUpperLine.Width\">\r\n            <summary>\r\n            Specifies the width the upper line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartIndicatorUpperLine.Color\">\r\n            <summary>\r\n            Specifies the color of the upper line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorUpperLine","Common.TypeNameIdentifier":"ChartIndicatorUpperLine"}},{"HashCode":-252090209,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartIndicatorUpperLine.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartIndicatorUpperLine"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorUpperLine.ChildContent","Common.TypeNameIdentifier":"ChartIndicatorUpperLine"}},{"HashCode":1253809521,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartIndicatorUpperLine.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartIndicatorUpperLine"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartIndicatorUpperLine.ChildContent","Common.TypeNameIdentifier":"ChartIndicatorUpperLine"}},{"HashCode":797049985,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartLegendBorder","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartLegendBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Width\">\r\n            <summary>\r\n            Sets and gets the the width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartLegendBorder","Common.TypeNameIdentifier":"ChartLegendBorder"}},{"HashCode":-819805766,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartLegendBorder","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartLegendBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Width\">\r\n            <summary>\r\n            Sets and gets the the width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartLegendBorder","Common.TypeNameIdentifier":"ChartLegendBorder"}},{"HashCode":410797907,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartLegendBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartLegendBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartLegendBorder.ChildContent","Common.TypeNameIdentifier":"ChartLegendBorder"}},{"HashCode":1220657580,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartLegendBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartLegendBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartLegendBorder.ChildContent","Common.TypeNameIdentifier":"ChartLegendBorder"}},{"HashCode":-1134304797,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartLegendMargin","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartLegendMargin"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Left","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Left"}},{"Kind":"Components.Component","Name":"Right","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Right"}},{"Kind":"Components.Component","Name":"Top","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Top"}},{"Kind":"Components.Component","Name":"Bottom","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Bottom"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartLegendMargin","Common.TypeNameIdentifier":"ChartLegendMargin"}},{"HashCode":-1167047058,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartLegendMargin","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartLegendMargin"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Left","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Left"}},{"Kind":"Components.Component","Name":"Right","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Right"}},{"Kind":"Components.Component","Name":"Top","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Top"}},{"Kind":"Components.Component","Name":"Bottom","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Bottom"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartLegendMargin","Common.TypeNameIdentifier":"ChartLegendMargin"}},{"HashCode":291071327,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartLegendMargin.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartLegendMargin"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartLegendMargin.ChildContent","Common.TypeNameIdentifier":"ChartLegendMargin"}},{"HashCode":1321254904,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartLegendMargin.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartLegendMargin"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartLegendMargin.ChildContent","Common.TypeNameIdentifier":"ChartLegendMargin"}},{"HashCode":-1111977292,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartLegendTextStyle","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartLegendTextStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendTextStyle.FontFamily\">\r\n            <summary>\r\n            Unique font family of the legend text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendTextStyle.FontWeight\">\r\n            <summary>\r\n            Unique font weight of the legend text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Color\">\r\n            <summary>\r\n            Sets and gets the color for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartLegendTextStyle","Common.TypeNameIdentifier":"ChartLegendTextStyle"}},{"HashCode":678325771,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartLegendTextStyle","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartLegendTextStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendTextStyle.FontFamily\">\r\n            <summary>\r\n            Unique font family of the legend text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendTextStyle.FontWeight\">\r\n            <summary>\r\n            Unique font weight of the legend text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Color\">\r\n            <summary>\r\n            Sets and gets the color for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartLegendTextStyle","Common.TypeNameIdentifier":"ChartLegendTextStyle"}},{"HashCode":1323997987,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartLegendTextStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartLegendTextStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartLegendTextStyle.ChildContent","Common.TypeNameIdentifier":"ChartLegendTextStyle"}},{"HashCode":-283403587,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartLegendTextStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartLegendTextStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartLegendTextStyle.ChildContent","Common.TypeNameIdentifier":"ChartLegendTextStyle"}},{"HashCode":-11084924,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartLocation","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartLocation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"X","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation.X\">\r\n            <summary>\r\n             Sets and gets the x coordinate of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation.Y\">\r\n            <summary>\r\n             Sets and gets the y coordinate of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Y"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartLocation","Common.TypeNameIdentifier":"ChartLocation"}},{"HashCode":-6986590,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartLocation","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartLocation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"X","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation.X\">\r\n            <summary>\r\n             Sets and gets the x coordinate of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation.Y\">\r\n            <summary>\r\n             Sets and gets the y coordinate of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Y"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartLocation","Common.TypeNameIdentifier":"ChartLocation"}},{"HashCode":57399481,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartLocation.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartLocation"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartLocation.ChildContent","Common.TypeNameIdentifier":"ChartLocation"}},{"HashCode":1848016411,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartLocation.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartLocation"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartLocation.ChildContent","Common.TypeNameIdentifier":"ChartLocation"}},{"HashCode":-1147920274,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartLegendSettings","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartLegendSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Visible\">\r\n            <summary>\r\n            Specifies the visibility of legend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"EnableHighlight","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.EnableHighlight\">\r\n            <summary>\r\n            Enabling the highlight options.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableHighlight"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Width\">\r\n            <summary>\r\n            Specifies the width for legend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Height\">\r\n            <summary>\r\n            Specifies the height for legend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Location","TypeName":"Syncfusion.Blazor.Charts.ChartLocation","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Location\">\r\n            <summary>\r\n            Specifies the location of the legend, relative to the chart.\r\n            If x is 20, legend moves by 20 pixels to the right of the chart. It requires the `position` to be `Custom`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartLocation","Common.PropertyName":"Location"}},{"Kind":"Components.Component","Name":"Position","TypeName":"Syncfusion.Blazor.Charts.LegendPosition","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Position\">\r\n            <summary>\r\n            Position of the legend in the chart are,\r\n             Auto: Places the legend based on area type.\r\n             Top: Displays the legend at the top of the chart.\r\n             Left: Displays the legend at the left of the chart.\r\n             Bottom: Displays the legend at the bottom of the chart.\r\n             Right: Displays the legend at the right of the chart.\r\n             Custom: Displays the legend  based on the given x and y values.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LegendPosition","Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Padding\">\r\n            <summary>\r\n            Option to customize the padding around legend collection.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"ItemPadding","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.ItemPadding\">\r\n            <summary>\r\n            Option to customize the padding between legend items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ItemPadding"}},{"Kind":"Components.Component","Name":"Alignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Alignment\">\r\n            <summary>\r\n            Legend in chart can be aligned as follows:\r\n             Near: Aligns the legend to the left of the chart.\r\n             Center: Aligns the legend to the center of the chart.\r\n             Far: Aligns the legend to the right of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"Alignment"}},{"Kind":"Components.Component","Name":"TextStyle","TypeName":"Syncfusion.Blazor.Charts.ChartLegendTextStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.TextStyle\">\r\n            <summary>\r\n            Options to customize the legend text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartLegendTextStyle","Common.PropertyName":"TextStyle"}},{"Kind":"Components.Component","Name":"ShapeWidth","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.ShapeWidth\">\r\n            <summary>\r\n            Shape width of the legend shape.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ShapeWidth"}},{"Kind":"Components.Component","Name":"ShapeHeight","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.ShapeHeight\">\r\n            <summary>\r\n            Shape height of the legend shape.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ShapeHeight"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartLegendBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Border\">\r\n            <summary>\r\n            Options to customize the border of the legend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartLegendBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Syncfusion.Blazor.Charts.ChartLegendMargin","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Margin\">\r\n            <summary>\r\n            Options to customize left, right, top and bottom margins of the legend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartLegendMargin","Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"ShapePadding","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.ShapePadding\">\r\n            <summary>\r\n            Padding between the legend shape and text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ShapePadding"}},{"Kind":"Components.Component","Name":"Background","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Background\">\r\n            <summary>\r\n            The background of the chart legend area.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Opacity\">\r\n            <summary>\r\n             Options to customize left, right, top and bottom margins of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"ToggleVisibility","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.ToggleVisibility\">\r\n            <summary>\r\n            If set to true, series' visibility collapses based on the legend visibility.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ToggleVisibility"}},{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Description\">\r\n            <summary>\r\n            Description for legends.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Description"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.TabIndex\">\r\n            <summary>\r\n            TabIndex value for the legend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"IsInversed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.IsInversed\">\r\n            <summary>\r\n            Gets or sets whether to inverse legend item content (image and text).\r\n            </summary>\r\n            <value> \r\n            true if the legend should be inversed; otherwise, false. \r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsInversed"}},{"Kind":"Components.Component","Name":"Reverse","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Reverse\">\r\n            <summary>\r\n            Gets or sets whether to reverse the legend items order.\r\n            </summary>\r\n            <value> \r\n            true if the legend should be reverse; otherwise, false. \r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Reverse"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.LabelOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.TextOverflow\">\r\n            <summary> \r\n             Gets and sets the text overflow behavior to employ when the individual legend text overflowing the legend bounds or \r\n             <see cref=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.MaximumLabelWidth\"> MaximumLabelWidth </see> \r\n            </summary> \r\n            <value> \r\n             One of the <see cref=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.TextOverflow\" /> enumeration.The default value is <see cref=\"F:Syncfusion.Blazor.LabelOverflow.Ellipse\" /> \r\n            </value> \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.LabelOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"TextWrap","TypeName":"Syncfusion.Blazor.TextWrap","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.TextWrap\">\r\n            <summary> \r\n             Gets and sets the text wrap behavior to employ when the individual legend text overflowing the legend bounds or <see cref=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.MaximumLabelWidth\"> MaximumLabelWidth </see> \r\n            </summary> \r\n            <value> \r\n             One of the <see cref=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.TextWrap\" /> enumeration. The default value is <see cref=\"F:Syncfusion.Blazor.TextWrap.Normal\" /> \r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.TextWrap","Common.PropertyName":"TextWrap"}},{"Kind":"Components.Component","Name":"MaximumLabelWidth","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.MaximumLabelWidth\">\r\n            <summary> \r\n             Gets and sets the maximum width of the individual legend item after which they get trimmed, wrapped or clipped. \r\n            </summary> \r\n            <value> \r\n             Specifies the maximum width for the legend text. The default value is <c>null</c>. \r\n            </value> \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MaximumLabelWidth"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartLegendSettings","Common.TypeNameIdentifier":"ChartLegendSettings"}},{"HashCode":200920489,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartLegendSettings","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartLegendSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Visible\">\r\n            <summary>\r\n            Specifies the visibility of legend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"EnableHighlight","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.EnableHighlight\">\r\n            <summary>\r\n            Enabling the highlight options.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableHighlight"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Width\">\r\n            <summary>\r\n            Specifies the width for legend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Height\">\r\n            <summary>\r\n            Specifies the height for legend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Location","TypeName":"Syncfusion.Blazor.Charts.ChartLocation","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Location\">\r\n            <summary>\r\n            Specifies the location of the legend, relative to the chart.\r\n            If x is 20, legend moves by 20 pixels to the right of the chart. It requires the `position` to be `Custom`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartLocation","Common.PropertyName":"Location"}},{"Kind":"Components.Component","Name":"Position","TypeName":"Syncfusion.Blazor.Charts.LegendPosition","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Position\">\r\n            <summary>\r\n            Position of the legend in the chart are,\r\n             Auto: Places the legend based on area type.\r\n             Top: Displays the legend at the top of the chart.\r\n             Left: Displays the legend at the left of the chart.\r\n             Bottom: Displays the legend at the bottom of the chart.\r\n             Right: Displays the legend at the right of the chart.\r\n             Custom: Displays the legend  based on the given x and y values.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LegendPosition","Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"Padding","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Padding\">\r\n            <summary>\r\n            Option to customize the padding around legend collection.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Padding"}},{"Kind":"Components.Component","Name":"ItemPadding","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.ItemPadding\">\r\n            <summary>\r\n            Option to customize the padding between legend items.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ItemPadding"}},{"Kind":"Components.Component","Name":"Alignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Alignment\">\r\n            <summary>\r\n            Legend in chart can be aligned as follows:\r\n             Near: Aligns the legend to the left of the chart.\r\n             Center: Aligns the legend to the center of the chart.\r\n             Far: Aligns the legend to the right of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"Alignment"}},{"Kind":"Components.Component","Name":"TextStyle","TypeName":"Syncfusion.Blazor.Charts.ChartLegendTextStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.TextStyle\">\r\n            <summary>\r\n            Options to customize the legend text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartLegendTextStyle","Common.PropertyName":"TextStyle"}},{"Kind":"Components.Component","Name":"ShapeWidth","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.ShapeWidth\">\r\n            <summary>\r\n            Shape width of the legend shape.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ShapeWidth"}},{"Kind":"Components.Component","Name":"ShapeHeight","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.ShapeHeight\">\r\n            <summary>\r\n            Shape height of the legend shape.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ShapeHeight"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartLegendBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Border\">\r\n            <summary>\r\n            Options to customize the border of the legend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartLegendBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Syncfusion.Blazor.Charts.ChartLegendMargin","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Margin\">\r\n            <summary>\r\n            Options to customize left, right, top and bottom margins of the legend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartLegendMargin","Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"ShapePadding","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.ShapePadding\">\r\n            <summary>\r\n            Padding between the legend shape and text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ShapePadding"}},{"Kind":"Components.Component","Name":"Background","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Background\">\r\n            <summary>\r\n            The background of the chart legend area.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Opacity\">\r\n            <summary>\r\n             Options to customize left, right, top and bottom margins of the chart.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"ToggleVisibility","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.ToggleVisibility\">\r\n            <summary>\r\n            If set to true, series' visibility collapses based on the legend visibility.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ToggleVisibility"}},{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Description\">\r\n            <summary>\r\n            Description for legends.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Description"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.TabIndex\">\r\n            <summary>\r\n            TabIndex value for the legend.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"IsInversed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.IsInversed\">\r\n            <summary>\r\n            Gets or sets whether to inverse legend item content (image and text).\r\n            </summary>\r\n            <value> \r\n            true if the legend should be inversed; otherwise, false. \r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsInversed"}},{"Kind":"Components.Component","Name":"Reverse","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.Reverse\">\r\n            <summary>\r\n            Gets or sets whether to reverse the legend items order.\r\n            </summary>\r\n            <value> \r\n            true if the legend should be reverse; otherwise, false. \r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Reverse"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.LabelOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.TextOverflow\">\r\n            <summary> \r\n             Gets and sets the text overflow behavior to employ when the individual legend text overflowing the legend bounds or \r\n             <see cref=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.MaximumLabelWidth\"> MaximumLabelWidth </see> \r\n            </summary> \r\n            <value> \r\n             One of the <see cref=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.TextOverflow\" /> enumeration.The default value is <see cref=\"F:Syncfusion.Blazor.LabelOverflow.Ellipse\" /> \r\n            </value> \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.LabelOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"TextWrap","TypeName":"Syncfusion.Blazor.TextWrap","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.TextWrap\">\r\n            <summary> \r\n             Gets and sets the text wrap behavior to employ when the individual legend text overflowing the legend bounds or <see cref=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.MaximumLabelWidth\"> MaximumLabelWidth </see> \r\n            </summary> \r\n            <value> \r\n             One of the <see cref=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.TextWrap\" /> enumeration. The default value is <see cref=\"F:Syncfusion.Blazor.TextWrap.Normal\" /> \r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.TextWrap","Common.PropertyName":"TextWrap"}},{"Kind":"Components.Component","Name":"MaximumLabelWidth","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartLegendSettings.MaximumLabelWidth\">\r\n            <summary> \r\n             Gets and sets the maximum width of the individual legend item after which they get trimmed, wrapped or clipped. \r\n            </summary> \r\n            <value> \r\n             Specifies the maximum width for the legend text. The default value is <c>null</c>. \r\n            </value> \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MaximumLabelWidth"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartLegendSettings","Common.TypeNameIdentifier":"ChartLegendSettings"}},{"HashCode":1694012863,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartLegendSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartLegendSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartLegendSettings.ChildContent","Common.TypeNameIdentifier":"ChartLegendSettings"}},{"HashCode":-1257157564,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartLegendSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartLegendSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartLegendSettings.ChildContent","Common.TypeNameIdentifier":"ChartLegendSettings"}},{"HashCode":1932560712,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartCornerRadius","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartCornerRadius\">\r\n            <summary>\r\n            Specifies the configuration of the corner radius for the reactangle type series.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartCornerRadius"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"BottomLeft","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCornerRadius.BottomLeft\">\r\n            <summary>\r\n            Sets and gets the bottom left value of the corner radius.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"BottomLeft"}},{"Kind":"Components.Component","Name":"BottomRight","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCornerRadius.BottomRight\">\r\n            <summary>\r\n            Sets and gets the bottom right value of the corner radius.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"BottomRight"}},{"Kind":"Components.Component","Name":"TopLeft","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCornerRadius.TopLeft\">\r\n            <summary>\r\n            Sets and gets the top left value of the corner radius.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"TopLeft"}},{"Kind":"Components.Component","Name":"TopRight","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCornerRadius.TopRight\">\r\n            <summary>\r\n            Sets and gets the top right value of the corner radius.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"TopRight"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCornerRadius","Common.TypeNameIdentifier":"ChartCornerRadius"}},{"HashCode":-550321397,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartCornerRadius","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartCornerRadius\">\r\n            <summary>\r\n            Specifies the configuration of the corner radius for the reactangle type series.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartCornerRadius"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"BottomLeft","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCornerRadius.BottomLeft\">\r\n            <summary>\r\n            Sets and gets the bottom left value of the corner radius.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"BottomLeft"}},{"Kind":"Components.Component","Name":"BottomRight","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCornerRadius.BottomRight\">\r\n            <summary>\r\n            Sets and gets the bottom right value of the corner radius.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"BottomRight"}},{"Kind":"Components.Component","Name":"TopLeft","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCornerRadius.TopLeft\">\r\n            <summary>\r\n            Sets and gets the top left value of the corner radius.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"TopLeft"}},{"Kind":"Components.Component","Name":"TopRight","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCornerRadius.TopRight\">\r\n            <summary>\r\n            Sets and gets the top right value of the corner radius.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"TopRight"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCornerRadius","Common.TypeNameIdentifier":"ChartCornerRadius"}},{"HashCode":660920513,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartCornerRadius.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartCornerRadius"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCornerRadius.ChildContent","Common.TypeNameIdentifier":"ChartCornerRadius"}},{"HashCode":-251893624,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartCornerRadius.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartCornerRadius"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCornerRadius.ChildContent","Common.TypeNameIdentifier":"ChartCornerRadius"}},{"HashCode":995979304,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartSeries","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartSeries"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Charts.ChartSeriesType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Type\">\r\n            <summary>\r\n            Specifies the type of series\r\n            The type of the series are\r\n            Line\r\n            Column\r\n            Area\r\n            Bar\r\n            Histogram\r\n            StackingColumn\r\n            StackingArea\r\n            StackingBar\r\n            StepLine\r\n            StepArea\r\n            Scatter\r\n            Spline\r\n            StackingColumn100\r\n            StackingBar100\r\n            StackingArea100\r\n            RangeColumn\r\n            Hilo\r\n            HiloOpenClose\r\n            Waterfall\r\n            RangeArea\r\n            Bubble\r\n            Candle\r\n            Polar\r\n            Radar\r\n            BoxAndWhisker\r\n            Pareto.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartSeriesType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Visible\">\r\n            <summary>\r\n            Specifies the visibility of series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Width\">\r\n            <summary>\r\n            The stroke width for the series that is applicable only for `Line` type series.\r\n            It also represent the stroke width of the signal lines in technical indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"XAxisName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.XAxisName\">\r\n            <summary>\r\n            The name of the horizontal axis associated with the series. It requires `Axes` of the chart.\r\n            It is applicable for series and technical indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"XAxisName"}},{"Kind":"Components.Component","Name":"XName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.XName\">\r\n            <summary>\r\n            The DataSource field that contains the x value.\r\n            It is applicable for series and technical indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"XName"}},{"Kind":"Components.Component","Name":"YAxisName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.YAxisName\">\r\n            <summary>\r\n            The name of the vertical axis associated with the series. It requires `Axes` of the chart.\r\n            It is applicable for series and technical indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"YAxisName"}},{"Kind":"Components.Component","Name":"YName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.YName\">\r\n            <summary>\r\n            The DataSource field that contains the y value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"YName"}},{"Kind":"Components.Component","Name":"High","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.High\">\r\n            <summary>\r\n            The DataSource field that contains the high value for financial type series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"High"}},{"Kind":"Components.Component","Name":"Low","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Low\">\r\n            <summary>\r\n            The DataSource field that contains the low value for financial type series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Low"}},{"Kind":"Components.Component","Name":"GroupName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.GroupName\">\r\n            <summary>\r\n            Defines the name that specifies the chart series are mutually exclusive and can be overlaid.\r\n            The axis in the same group shares the same baseline and location on the corresponding axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"GroupName"}},{"Kind":"Components.Component","Name":"Open","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Open\">\r\n            <summary>\r\n            The DataSource field that contains the open value for financial type series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Open"}},{"Kind":"Components.Component","Name":"Close","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Close\">\r\n            <summary>\r\n            The DataSource field that contains the close value for financial type series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Close"}},{"Kind":"Components.Component","Name":"Volume","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Volume\">\r\n            <summary>\r\n            The DataSource field that contains the volume value for financial type series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Volume"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Name\">\r\n            <summary>\r\n            Specifies the name of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"ZOrder","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.ZOrder\">\r\n            <summary>\r\n            Specifies the z order of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"ZOrder"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Fill\">\r\n            <summary>\r\n            The fill color for the series that accepts value in hex and rgba as a valid CSS color string.\r\n            It also represents the color of the signal lines in technical indicators.\r\n            For technical indicators, the default value is 'blue' and for series, it has null.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.DataSource\">\r\n            <summary>\r\n            Specifies the DataSource for the chart. It can be an array of JSON objects or an instance of DataManager.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Object>","Common.PropertyName":"DataSource"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Query\">\r\n            <summary>\r\n            Specifies query to select data from DataSource. This property is applicable only when the DataSource is `SfDataManager`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Data.Query","Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"DrawType","TypeName":"Syncfusion.Blazor.Charts.ChartDrawType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.DrawType\">\r\n            <summary>\r\n            Type of series to be drawn in radar or polar series. They are\r\n            'Line'\r\n            'Column'\r\n            'Area'\r\n            'Scatter'\r\n            'Spline'\r\n            'StackingColumn'\r\n            'StackingArea'\r\n            'RangeColumn'\r\n            'SplineArea'.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartDrawType","Common.PropertyName":"DrawType"}},{"Kind":"Components.Component","Name":"EnableComplexProperty","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.EnableComplexProperty\">\r\n            <summary>\r\n            This property used to improve chart performance via data mapping for series dataSource.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableComplexProperty"}},{"Kind":"Components.Component","Name":"EnableTooltip","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.EnableTooltip\">\r\n            <summary>\r\n            If set true, the Tooltip for series will be visible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableTooltip"}},{"Kind":"Components.Component","Name":"TooltipFormat","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.TooltipFormat\">\r\n            <summary>\r\n            Specifies the format of the tooltip for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TooltipFormat"}},{"Kind":"Components.Component","Name":"PointColorMapping","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.PointColorMapping\">\r\n            <summary>\r\n            The DataSource field that contains the color value of point\r\n            It is applicable for series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PointColorMapping"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Size\">\r\n            <summary>\r\n            The DataSource field that contains the size value for the bubble series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.DashArray\">\r\n            <summary>\r\n            Defines the pattern of dashes and gaps to stroke the lines in `Line` type series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Opacity\">\r\n            <summary>\r\n            Defines the opacity of the series fill.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartSeriesBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Border\">\r\n            <summary>\r\n            Defines the border of the rectangle shaped series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartSeriesBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"LegendShape","TypeName":"Syncfusion.Blazor.Charts.LegendShape","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.LegendShape\">\r\n            <summary>\r\n            Specifies the legend shape of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LegendShape","Common.PropertyName":"LegendShape"}},{"Kind":"Components.Component","Name":"Marker","TypeName":"Syncfusion.Blazor.Charts.ChartMarker","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Marker\">\r\n            <summary>\r\n            Specifies the customization of the marker of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartMarker","Common.PropertyName":"Marker"}},{"Kind":"Components.Component","Name":"EmptyPointSettings","TypeName":"Syncfusion.Blazor.Charts.ChartEmptyPointSettings","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.EmptyPointSettings\">\r\n            <summary>\r\n            Specifies the customization of the empty point settins for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartEmptyPointSettings","Common.PropertyName":"EmptyPointSettings"}},{"Kind":"Components.Component","Name":"ColumnSpacing","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.ColumnSpacing\">\r\n            <summary>\r\n            Defines the space between adjacent series for the rectangle shaped series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ColumnSpacing"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"Syncfusion.Blazor.Charts.ChartCornerRadius","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.CornerRadius\">\r\n            <summary>\r\n            Specifies the corner radius of the rectangle shaped series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartCornerRadius","Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"ColumnWidth","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.ColumnWidth\">\r\n            <summary>\r\n            Specifies the column width of the rectangle typed series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ColumnWidth"}},{"Kind":"Components.Component","Name":"StackingGroup","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.StackingGroup\">\r\n            <summary>\r\n            Based on this value stacking series are grouped together.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"StackingGroup"}},{"Kind":"Components.Component","Name":"SegmentAxis","TypeName":"Syncfusion.Blazor.Charts.Segment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.SegmentAxis\">\r\n            <summary>\r\n            Specifies in which axis segment will be done.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Segment","Common.PropertyName":"SegmentAxis"}},{"Kind":"Components.Component","Name":"IsClosed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.IsClosed\">\r\n            <summary>\r\n            Enables the polar line based series to be closed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsClosed"}},{"Kind":"Components.Component","Name":"CardinalSplineTension","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.CardinalSplineTension\">\r\n            <summary>\r\n            Specifies the CardinalSplineTension for spline series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"CardinalSplineTension"}},{"Kind":"Components.Component","Name":"SplineType","TypeName":"Syncfusion.Blazor.Charts.SplineType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.SplineType\">\r\n            <summary>\r\n            Specifies the splineType for spline series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.SplineType","Common.PropertyName":"SplineType"}},{"Kind":"Components.Component","Name":"EnableSolidCandles","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.EnableSolidCandles\">\r\n            <summary>\r\n            Enables SolidCandles for candle series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableSolidCandles"}},{"Kind":"Components.Component","Name":"BearFillColor","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.BearFillColor\">\r\n            <summary>\r\n            Specifies BearFillColor for candle series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"BearFillColor"}},{"Kind":"Components.Component","Name":"BullFillColor","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.BullFillColor\">\r\n            <summary>\r\n            Specifies the BullFillColor for candle series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"BullFillColor"}},{"Kind":"Components.Component","Name":"MaxRadius","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.MaxRadius\">\r\n            <summary>\r\n            Denoted the maximum radius for bubble series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MaxRadius"}},{"Kind":"Components.Component","Name":"MinRadius","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.MinRadius\">\r\n            <summary>\r\n            Denoted the minimum radius for bubble series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MinRadius"}},{"Kind":"Components.Component","Name":"Connector","TypeName":"Syncfusion.Blazor.Charts.ChartSeriesConnector","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartSeriesConnector","Common.PropertyName":"Connector"}},{"Kind":"Components.Component","Name":"TooltipMappingName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.TooltipMappingName\">\r\n            <summary>\r\n            Specifies the intermediateSumIndexes for waterfall series\r\n            The provided value will be considered as a Tooltip Mapping name.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TooltipMappingName"}},{"Kind":"Components.Component","Name":"IntermediateSumIndexes","TypeName":"System.Double[]","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.IntermediateSumIndexes\">\r\n            <summary>\r\n            IntermediateSumIndexes for waterfall series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double[]","Common.PropertyName":"IntermediateSumIndexes"}},{"Kind":"Components.Component","Name":"SumIndexes","TypeName":"System.Double[]","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.SumIndexes\">\r\n            <summary>\r\n            Specifies the sumIndexes for waterfall series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double[]","Common.PropertyName":"SumIndexes"}},{"Kind":"Components.Component","Name":"SummaryFillColor","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.SummaryFillColor\">\r\n            <summary>\r\n            Specifies the summaryFillColor for waterfall series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SummaryFillColor"}},{"Kind":"Components.Component","Name":"NegativeFillColor","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.NegativeFillColor\">\r\n            <summary>\r\n            Specifies the NegativeFillColor for waterfall series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"NegativeFillColor"}},{"Kind":"Components.Component","Name":"ShowNormalDistribution","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.ShowNormalDistribution\">\r\n            <summary>\r\n            Specifies the ShowNormalDistribution for Histogram series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ShowNormalDistribution"}},{"Kind":"Components.Component","Name":"BinInterval","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.BinInterval\">\r\n            <summary>\r\n            Specifies the BinInterval for Histogram series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"BinInterval"}},{"Kind":"Components.Component","Name":"BoxPlotMode","TypeName":"Syncfusion.Blazor.Charts.BoxPlotMode","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.BoxPlotMode\">\r\n            <summary>\r\n            Specifies the  BoxPlotMode for box and whisker series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.BoxPlotMode","Common.PropertyName":"BoxPlotMode"}},{"Kind":"Components.Component","Name":"ShowMean","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.ShowMean\">\r\n            <summary>\r\n            Specifies the Showmean for box and whisker series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ShowMean"}},{"Kind":"Components.Component","Name":"Trendlines","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartTrendline>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Trendlines\">\r\n            <summary>\r\n            Specifies the trendlines for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.Charts.ChartTrendline>","Common.PropertyName":"Trendlines"}},{"Kind":"Components.Component","Name":"Segments","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartSegment>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Segments\">\r\n            <summary>\r\n            Specified the segments of the multicolor series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.Charts.ChartSegment>","Common.PropertyName":"Segments"}},{"Kind":"Components.Component","Name":"Animation","TypeName":"Syncfusion.Blazor.Charts.ChartSeriesAnimation","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Animation\">\r\n            <summary>\r\n            Specifies the configuration of the  animation settings for series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartSeriesAnimation","Common.PropertyName":"Animation"}},{"Kind":"Components.Component","Name":"ErrorBar","TypeName":"Syncfusion.Blazor.Charts.ChartErrorBarSettings","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartErrorBarSettings","Common.PropertyName":"ErrorBar"}},{"Kind":"Components.Component","Name":"SelectionStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.SelectionStyle\">\r\n            <summary>\r\n            Spectifies class name when the series is selected.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SelectionStyle"}},{"Kind":"Components.Component","Name":"UnSelectedStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.UnSelectedStyle\">\r\n            <summary>\r\n            Spectifies class name when the series is deselected.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"UnSelectedStyle"}},{"Kind":"Components.Component","Name":"NonHighlightStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.NonHighlightStyle\">\r\n            <summary>\r\n            Specfies the class name when the series is  non-highlighted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"NonHighlightStyle"}},{"Kind":"Components.Component","Name":"HighlightStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.HighlightStyle\">\r\n            <summary>\r\n            Specfies the class name when the series is  highlighted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HighlightStyle"}},{"Kind":"Components.Component","Name":"ChartDataEditSettings","TypeName":"Syncfusion.Blazor.Charts.ChartDataEditSettings","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.ChartDataEditSettings\">\r\n            <summary>\r\n            Configuration of drag settings for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartDataEditSettings","Common.PropertyName":"ChartDataEditSettings"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSeries","Common.TypeNameIdentifier":"ChartSeries"}},{"HashCode":1674751139,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartSeries","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartSeries"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Charts.ChartSeriesType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Type\">\r\n            <summary>\r\n            Specifies the type of series\r\n            The type of the series are\r\n            Line\r\n            Column\r\n            Area\r\n            Bar\r\n            Histogram\r\n            StackingColumn\r\n            StackingArea\r\n            StackingBar\r\n            StepLine\r\n            StepArea\r\n            Scatter\r\n            Spline\r\n            StackingColumn100\r\n            StackingBar100\r\n            StackingArea100\r\n            RangeColumn\r\n            Hilo\r\n            HiloOpenClose\r\n            Waterfall\r\n            RangeArea\r\n            Bubble\r\n            Candle\r\n            Polar\r\n            Radar\r\n            BoxAndWhisker\r\n            Pareto.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartSeriesType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Visible\">\r\n            <summary>\r\n            Specifies the visibility of series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Width\">\r\n            <summary>\r\n            The stroke width for the series that is applicable only for `Line` type series.\r\n            It also represent the stroke width of the signal lines in technical indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"XAxisName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.XAxisName\">\r\n            <summary>\r\n            The name of the horizontal axis associated with the series. It requires `Axes` of the chart.\r\n            It is applicable for series and technical indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"XAxisName"}},{"Kind":"Components.Component","Name":"XName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.XName\">\r\n            <summary>\r\n            The DataSource field that contains the x value.\r\n            It is applicable for series and technical indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"XName"}},{"Kind":"Components.Component","Name":"YAxisName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.YAxisName\">\r\n            <summary>\r\n            The name of the vertical axis associated with the series. It requires `Axes` of the chart.\r\n            It is applicable for series and technical indicators.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"YAxisName"}},{"Kind":"Components.Component","Name":"YName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.YName\">\r\n            <summary>\r\n            The DataSource field that contains the y value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"YName"}},{"Kind":"Components.Component","Name":"High","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.High\">\r\n            <summary>\r\n            The DataSource field that contains the high value for financial type series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"High"}},{"Kind":"Components.Component","Name":"Low","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Low\">\r\n            <summary>\r\n            The DataSource field that contains the low value for financial type series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Low"}},{"Kind":"Components.Component","Name":"GroupName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.GroupName\">\r\n            <summary>\r\n            Defines the name that specifies the chart series are mutually exclusive and can be overlaid.\r\n            The axis in the same group shares the same baseline and location on the corresponding axis.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"GroupName"}},{"Kind":"Components.Component","Name":"Open","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Open\">\r\n            <summary>\r\n            The DataSource field that contains the open value for financial type series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Open"}},{"Kind":"Components.Component","Name":"Close","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Close\">\r\n            <summary>\r\n            The DataSource field that contains the close value for financial type series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Close"}},{"Kind":"Components.Component","Name":"Volume","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Volume\">\r\n            <summary>\r\n            The DataSource field that contains the volume value for financial type series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Volume"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Name\">\r\n            <summary>\r\n            Specifies the name of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"ZOrder","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.ZOrder\">\r\n            <summary>\r\n            Specifies the z order of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"ZOrder"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Fill\">\r\n            <summary>\r\n            The fill color for the series that accepts value in hex and rgba as a valid CSS color string.\r\n            It also represents the color of the signal lines in technical indicators.\r\n            For technical indicators, the default value is 'blue' and for series, it has null.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.DataSource\">\r\n            <summary>\r\n            Specifies the DataSource for the chart. It can be an array of JSON objects or an instance of DataManager.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Object>","Common.PropertyName":"DataSource"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Query\">\r\n            <summary>\r\n            Specifies query to select data from DataSource. This property is applicable only when the DataSource is `SfDataManager`.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Data.Query","Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"DrawType","TypeName":"Syncfusion.Blazor.Charts.ChartDrawType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.DrawType\">\r\n            <summary>\r\n            Type of series to be drawn in radar or polar series. They are\r\n            'Line'\r\n            'Column'\r\n            'Area'\r\n            'Scatter'\r\n            'Spline'\r\n            'StackingColumn'\r\n            'StackingArea'\r\n            'RangeColumn'\r\n            'SplineArea'.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartDrawType","Common.PropertyName":"DrawType"}},{"Kind":"Components.Component","Name":"EnableComplexProperty","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.EnableComplexProperty\">\r\n            <summary>\r\n            This property used to improve chart performance via data mapping for series dataSource.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableComplexProperty"}},{"Kind":"Components.Component","Name":"EnableTooltip","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.EnableTooltip\">\r\n            <summary>\r\n            If set true, the Tooltip for series will be visible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableTooltip"}},{"Kind":"Components.Component","Name":"TooltipFormat","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.TooltipFormat\">\r\n            <summary>\r\n            Specifies the format of the tooltip for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TooltipFormat"}},{"Kind":"Components.Component","Name":"PointColorMapping","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.PointColorMapping\">\r\n            <summary>\r\n            The DataSource field that contains the color value of point\r\n            It is applicable for series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PointColorMapping"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Size\">\r\n            <summary>\r\n            The DataSource field that contains the size value for the bubble series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.DashArray\">\r\n            <summary>\r\n            Defines the pattern of dashes and gaps to stroke the lines in `Line` type series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Opacity\">\r\n            <summary>\r\n            Defines the opacity of the series fill.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartSeriesBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Border\">\r\n            <summary>\r\n            Defines the border of the rectangle shaped series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartSeriesBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"LegendShape","TypeName":"Syncfusion.Blazor.Charts.LegendShape","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.LegendShape\">\r\n            <summary>\r\n            Specifies the legend shape of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LegendShape","Common.PropertyName":"LegendShape"}},{"Kind":"Components.Component","Name":"Marker","TypeName":"Syncfusion.Blazor.Charts.ChartMarker","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Marker\">\r\n            <summary>\r\n            Specifies the customization of the marker of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartMarker","Common.PropertyName":"Marker"}},{"Kind":"Components.Component","Name":"EmptyPointSettings","TypeName":"Syncfusion.Blazor.Charts.ChartEmptyPointSettings","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.EmptyPointSettings\">\r\n            <summary>\r\n            Specifies the customization of the empty point settins for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartEmptyPointSettings","Common.PropertyName":"EmptyPointSettings"}},{"Kind":"Components.Component","Name":"ColumnSpacing","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.ColumnSpacing\">\r\n            <summary>\r\n            Defines the space between adjacent series for the rectangle shaped series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ColumnSpacing"}},{"Kind":"Components.Component","Name":"CornerRadius","TypeName":"Syncfusion.Blazor.Charts.ChartCornerRadius","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.CornerRadius\">\r\n            <summary>\r\n            Specifies the corner radius of the rectangle shaped series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartCornerRadius","Common.PropertyName":"CornerRadius"}},{"Kind":"Components.Component","Name":"ColumnWidth","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.ColumnWidth\">\r\n            <summary>\r\n            Specifies the column width of the rectangle typed series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ColumnWidth"}},{"Kind":"Components.Component","Name":"StackingGroup","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.StackingGroup\">\r\n            <summary>\r\n            Based on this value stacking series are grouped together.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"StackingGroup"}},{"Kind":"Components.Component","Name":"SegmentAxis","TypeName":"Syncfusion.Blazor.Charts.Segment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.SegmentAxis\">\r\n            <summary>\r\n            Specifies in which axis segment will be done.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Segment","Common.PropertyName":"SegmentAxis"}},{"Kind":"Components.Component","Name":"IsClosed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.IsClosed\">\r\n            <summary>\r\n            Enables the polar line based series to be closed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsClosed"}},{"Kind":"Components.Component","Name":"CardinalSplineTension","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.CardinalSplineTension\">\r\n            <summary>\r\n            Specifies the CardinalSplineTension for spline series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"CardinalSplineTension"}},{"Kind":"Components.Component","Name":"SplineType","TypeName":"Syncfusion.Blazor.Charts.SplineType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.SplineType\">\r\n            <summary>\r\n            Specifies the splineType for spline series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.SplineType","Common.PropertyName":"SplineType"}},{"Kind":"Components.Component","Name":"EnableSolidCandles","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.EnableSolidCandles\">\r\n            <summary>\r\n            Enables SolidCandles for candle series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableSolidCandles"}},{"Kind":"Components.Component","Name":"BearFillColor","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.BearFillColor\">\r\n            <summary>\r\n            Specifies BearFillColor for candle series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"BearFillColor"}},{"Kind":"Components.Component","Name":"BullFillColor","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.BullFillColor\">\r\n            <summary>\r\n            Specifies the BullFillColor for candle series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"BullFillColor"}},{"Kind":"Components.Component","Name":"MaxRadius","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.MaxRadius\">\r\n            <summary>\r\n            Denoted the maximum radius for bubble series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MaxRadius"}},{"Kind":"Components.Component","Name":"MinRadius","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.MinRadius\">\r\n            <summary>\r\n            Denoted the minimum radius for bubble series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MinRadius"}},{"Kind":"Components.Component","Name":"Connector","TypeName":"Syncfusion.Blazor.Charts.ChartSeriesConnector","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartSeriesConnector","Common.PropertyName":"Connector"}},{"Kind":"Components.Component","Name":"TooltipMappingName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.TooltipMappingName\">\r\n            <summary>\r\n            Specifies the intermediateSumIndexes for waterfall series\r\n            The provided value will be considered as a Tooltip Mapping name.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TooltipMappingName"}},{"Kind":"Components.Component","Name":"IntermediateSumIndexes","TypeName":"System.Double[]","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.IntermediateSumIndexes\">\r\n            <summary>\r\n            IntermediateSumIndexes for waterfall series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double[]","Common.PropertyName":"IntermediateSumIndexes"}},{"Kind":"Components.Component","Name":"SumIndexes","TypeName":"System.Double[]","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.SumIndexes\">\r\n            <summary>\r\n            Specifies the sumIndexes for waterfall series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double[]","Common.PropertyName":"SumIndexes"}},{"Kind":"Components.Component","Name":"SummaryFillColor","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.SummaryFillColor\">\r\n            <summary>\r\n            Specifies the summaryFillColor for waterfall series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SummaryFillColor"}},{"Kind":"Components.Component","Name":"NegativeFillColor","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.NegativeFillColor\">\r\n            <summary>\r\n            Specifies the NegativeFillColor for waterfall series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"NegativeFillColor"}},{"Kind":"Components.Component","Name":"ShowNormalDistribution","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.ShowNormalDistribution\">\r\n            <summary>\r\n            Specifies the ShowNormalDistribution for Histogram series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ShowNormalDistribution"}},{"Kind":"Components.Component","Name":"BinInterval","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.BinInterval\">\r\n            <summary>\r\n            Specifies the BinInterval for Histogram series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"BinInterval"}},{"Kind":"Components.Component","Name":"BoxPlotMode","TypeName":"Syncfusion.Blazor.Charts.BoxPlotMode","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.BoxPlotMode\">\r\n            <summary>\r\n            Specifies the  BoxPlotMode for box and whisker series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.BoxPlotMode","Common.PropertyName":"BoxPlotMode"}},{"Kind":"Components.Component","Name":"ShowMean","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.ShowMean\">\r\n            <summary>\r\n            Specifies the Showmean for box and whisker series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ShowMean"}},{"Kind":"Components.Component","Name":"Trendlines","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartTrendline>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Trendlines\">\r\n            <summary>\r\n            Specifies the trendlines for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.Charts.ChartTrendline>","Common.PropertyName":"Trendlines"}},{"Kind":"Components.Component","Name":"Segments","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Charts.ChartSegment>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Segments\">\r\n            <summary>\r\n            Specified the segments of the multicolor series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.Charts.ChartSegment>","Common.PropertyName":"Segments"}},{"Kind":"Components.Component","Name":"Animation","TypeName":"Syncfusion.Blazor.Charts.ChartSeriesAnimation","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.Animation\">\r\n            <summary>\r\n            Specifies the configuration of the  animation settings for series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartSeriesAnimation","Common.PropertyName":"Animation"}},{"Kind":"Components.Component","Name":"ErrorBar","TypeName":"Syncfusion.Blazor.Charts.ChartErrorBarSettings","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartErrorBarSettings","Common.PropertyName":"ErrorBar"}},{"Kind":"Components.Component","Name":"SelectionStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.SelectionStyle\">\r\n            <summary>\r\n            Spectifies class name when the series is selected.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SelectionStyle"}},{"Kind":"Components.Component","Name":"UnSelectedStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.UnSelectedStyle\">\r\n            <summary>\r\n            Spectifies class name when the series is deselected.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"UnSelectedStyle"}},{"Kind":"Components.Component","Name":"NonHighlightStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.NonHighlightStyle\">\r\n            <summary>\r\n            Specfies the class name when the series is  non-highlighted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"NonHighlightStyle"}},{"Kind":"Components.Component","Name":"HighlightStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.HighlightStyle\">\r\n            <summary>\r\n            Specfies the class name when the series is  highlighted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HighlightStyle"}},{"Kind":"Components.Component","Name":"ChartDataEditSettings","TypeName":"Syncfusion.Blazor.Charts.ChartDataEditSettings","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeries.ChartDataEditSettings\">\r\n            <summary>\r\n            Configuration of drag settings for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartDataEditSettings","Common.PropertyName":"ChartDataEditSettings"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSeries","Common.TypeNameIdentifier":"ChartSeries"}},{"HashCode":1493422597,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartSeries.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartSeries"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSeries.ChildContent","Common.TypeNameIdentifier":"ChartSeries"}},{"HashCode":-634900035,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartSeries.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartSeries"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSeries.ChildContent","Common.TypeNameIdentifier":"ChartSeries"}},{"HashCode":246023138,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartSeriesCollection","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartSeriesCollection"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSeriesCollection","Common.TypeNameIdentifier":"ChartSeriesCollection"}},{"HashCode":1532817810,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartSeriesCollection","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartSeriesCollection"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSeriesCollection","Common.TypeNameIdentifier":"ChartSeriesCollection"}},{"HashCode":-1825061733,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartSeriesCollection.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartSeriesCollection"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSeriesCollection.ChildContent","Common.TypeNameIdentifier":"ChartSeriesCollection"}},{"HashCode":-1983520222,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartSeriesCollection.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartSeriesCollection"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSeriesCollection.ChildContent","Common.TypeNameIdentifier":"ChartSeriesCollection"}},{"HashCode":1339797472,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartSeriesAnimation","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartSeriesAnimation\">\r\n            <summary>\r\n            Specifies the configuration of the series animation.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartSeriesAnimation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.Delay\">\r\n            <summary>\r\n            Sets and gets the option for animation delay of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.Duration\">\r\n            <summary>\r\n            Sets and gets the duration of animation in milliseconds.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.Enable\">\r\n            <summary>\r\n            Option to series gets animated on initial loading.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSeriesAnimation","Common.TypeNameIdentifier":"ChartSeriesAnimation"}},{"HashCode":-2048307671,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartSeriesAnimation","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartSeriesAnimation\">\r\n            <summary>\r\n            Specifies the configuration of the series animation.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartSeriesAnimation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.Delay\">\r\n            <summary>\r\n            Sets and gets the option for animation delay of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.Duration\">\r\n            <summary>\r\n            Sets and gets the duration of animation in milliseconds.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.Enable\">\r\n            <summary>\r\n            Option to series gets animated on initial loading.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSeriesAnimation","Common.TypeNameIdentifier":"ChartSeriesAnimation"}},{"HashCode":-136129991,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartSeriesAnimation.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartSeriesAnimation"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSeriesAnimation.ChildContent","Common.TypeNameIdentifier":"ChartSeriesAnimation"}},{"HashCode":215271784,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartSeriesAnimation.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartSeriesAnimation"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSeriesAnimation.ChildContent","Common.TypeNameIdentifier":"ChartSeriesAnimation"}},{"HashCode":1732069726,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartSeriesBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartSeriesBorder\">\r\n            <summary>\r\n            Specifies the border of the series.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartSeriesBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeriesBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeriesBorder.Width\">\r\n            <summary>\r\n            Sets and gets the the width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSeriesBorder","Common.TypeNameIdentifier":"ChartSeriesBorder"}},{"HashCode":1533750697,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartSeriesBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartSeriesBorder\">\r\n            <summary>\r\n            Specifies the border of the series.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartSeriesBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeriesBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeriesBorder.Width\">\r\n            <summary>\r\n            Sets and gets the the width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSeriesBorder","Common.TypeNameIdentifier":"ChartSeriesBorder"}},{"HashCode":1980196145,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartSeriesBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartSeriesBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSeriesBorder.ChildContent","Common.TypeNameIdentifier":"ChartSeriesBorder"}},{"HashCode":-1139518313,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartSeriesBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartSeriesBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSeriesBorder.ChildContent","Common.TypeNameIdentifier":"ChartSeriesBorder"}},{"HashCode":-604088107,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartSeriesConnector","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartSeriesConnector\">\r\n            <summary>\r\n            Specifies the configuration of the series animation.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartSeriesConnector"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeriesConnector.Width\">\r\n            <summary>\r\n            Specifies the width of the connector line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeriesConnector.Color\">\r\n            <summary>\r\n            Specifies the color of the connector line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Charts.ConnectorType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDefaultConnector.Type\">\r\n            <summary>\r\n            Specifies the type of the connector line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ConnectorType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Length","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDefaultConnector.Length\">\r\n            <summary>\r\n            Specifies the length of the connector line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Length"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDefaultConnector.DashArray\">\r\n            <summary>\r\n            Specifies the dashArray for the connector line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSeriesConnector","Common.TypeNameIdentifier":"ChartSeriesConnector"}},{"HashCode":-33785578,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartSeriesConnector","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartSeriesConnector\">\r\n            <summary>\r\n            Specifies the configuration of the series animation.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartSeriesConnector"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeriesConnector.Width\">\r\n            <summary>\r\n            Specifies the width of the connector line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSeriesConnector.Color\">\r\n            <summary>\r\n            Specifies the color of the connector line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Charts.ConnectorType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDefaultConnector.Type\">\r\n            <summary>\r\n            Specifies the type of the connector line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ConnectorType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Length","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDefaultConnector.Length\">\r\n            <summary>\r\n            Specifies the length of the connector line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Length"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDefaultConnector.DashArray\">\r\n            <summary>\r\n            Specifies the dashArray for the connector line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSeriesConnector","Common.TypeNameIdentifier":"ChartSeriesConnector"}},{"HashCode":-46929328,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartSeriesConnector.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartSeriesConnector"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSeriesConnector.ChildContent","Common.TypeNameIdentifier":"ChartSeriesConnector"}},{"HashCode":175165590,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartSeriesConnector.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartSeriesConnector"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSeriesConnector.ChildContent","Common.TypeNameIdentifier":"ChartSeriesConnector"}},{"HashCode":-59127688,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartDataLabel","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartDataLabel\">\r\n            <summary>\r\n            Options to customize the datalabel for the series.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartDataLabel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Visible\">\r\n            <summary>\r\n            Enables the visiblity of datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Name\">\r\n            <summary>\r\n            Specifies the datalabel mapping name for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Format\">\r\n            <summary>\r\n             Gets and sets the data label format that accepts any global string format like 'C', 'P', 'N1', etc.\r\n             It also accepts placeholder like '{value}°C' in which value represent the data label, for example, 20°C. \r\n            </summary>\r\n            <value>\r\n             Specifies the format for the data label. The default value is <c>null</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Fill\">\r\n            <summary>\r\n            Specifies the fill color of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Opacity\">\r\n            <summary>\r\n            Defines the opacity of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Angle","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Angle\">\r\n            <summary>\r\n            Specifies the angle at which label rotation takes place.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Angle"}},{"Kind":"Components.Component","Name":"EnableRotation","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.EnableRotation\">\r\n            <summary>\r\n            Enable the rotation of datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableRotation"}},{"Kind":"Components.Component","Name":"Position","TypeName":"Syncfusion.Blazor.Charts.LabelPosition","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Position\">\r\n            <summary>\r\n            Specifies the label position of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LabelPosition","Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"Rx","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Rx\">\r\n            <summary>\r\n            Width of rounded corner in horizontal orientation.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Rx"}},{"Kind":"Components.Component","Name":"Ry","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Ry\">\r\n            <summary>\r\n             Width of rounded corner in vertical orientation.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Ry"}},{"Kind":"Components.Component","Name":"Alignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Alignment\">\r\n            <summary>\r\n            Specifies the alignment for the datalabels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"Alignment"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartDataLabelBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Border\">\r\n            <summary>\r\n            Options to customize the border of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartDataLabelBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Syncfusion.Blazor.Charts.ChartDataLabelMargin","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Margin\">\r\n            <summary>\r\n            Options to customize the margin for the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartDataLabelMargin","Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"Font","TypeName":"Syncfusion.Blazor.Charts.ChartDataLabelFont","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Font\">\r\n            <summary>\r\n            Options to customize the text style of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartDataLabelFont","Common.PropertyName":"Font"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.Charts.ChartDataPointInfo>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Template\">\r\n            <summary>\r\n            Specifies the custom HTML element in place of datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Syncfusion.Blazor.Charts.ChartDataPointInfo>","Common.PropertyName":"Template"}},{"Kind":"Components.Component","Name":"LabelIntersectAction","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.LabelIntersectAction\">\r\n            <summary>\r\n            Specifies the label intersect action for the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"LabelIntersectAction"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataLabel","Common.TypeNameIdentifier":"ChartDataLabel"}},{"HashCode":-688860778,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartDataLabel","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartDataLabel\">\r\n            <summary>\r\n            Options to customize the datalabel for the series.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartDataLabel"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Visible\">\r\n            <summary>\r\n            Enables the visiblity of datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Name\">\r\n            <summary>\r\n            Specifies the datalabel mapping name for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Format\">\r\n            <summary>\r\n             Gets and sets the data label format that accepts any global string format like 'C', 'P', 'N1', etc.\r\n             It also accepts placeholder like '{value}°C' in which value represent the data label, for example, 20°C. \r\n            </summary>\r\n            <value>\r\n             Specifies the format for the data label. The default value is <c>null</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Fill\">\r\n            <summary>\r\n            Specifies the fill color of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Opacity\">\r\n            <summary>\r\n            Defines the opacity of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Angle","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Angle\">\r\n            <summary>\r\n            Specifies the angle at which label rotation takes place.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Angle"}},{"Kind":"Components.Component","Name":"EnableRotation","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.EnableRotation\">\r\n            <summary>\r\n            Enable the rotation of datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableRotation"}},{"Kind":"Components.Component","Name":"Position","TypeName":"Syncfusion.Blazor.Charts.LabelPosition","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Position\">\r\n            <summary>\r\n            Specifies the label position of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LabelPosition","Common.PropertyName":"Position"}},{"Kind":"Components.Component","Name":"Rx","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Rx\">\r\n            <summary>\r\n            Width of rounded corner in horizontal orientation.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Rx"}},{"Kind":"Components.Component","Name":"Ry","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Ry\">\r\n            <summary>\r\n             Width of rounded corner in vertical orientation.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Ry"}},{"Kind":"Components.Component","Name":"Alignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Alignment\">\r\n            <summary>\r\n            Specifies the alignment for the datalabels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"Alignment"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartDataLabelBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Border\">\r\n            <summary>\r\n            Options to customize the border of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartDataLabelBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"Margin","TypeName":"Syncfusion.Blazor.Charts.ChartDataLabelMargin","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Margin\">\r\n            <summary>\r\n            Options to customize the margin for the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartDataLabelMargin","Common.PropertyName":"Margin"}},{"Kind":"Components.Component","Name":"Font","TypeName":"Syncfusion.Blazor.Charts.ChartDataLabelFont","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Font\">\r\n            <summary>\r\n            Options to customize the text style of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartDataLabelFont","Common.PropertyName":"Font"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Syncfusion.Blazor.Charts.ChartDataPointInfo>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Template\">\r\n            <summary>\r\n            Specifies the custom HTML element in place of datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Syncfusion.Blazor.Charts.ChartDataPointInfo>","Common.PropertyName":"Template"}},{"Kind":"Components.Component","Name":"LabelIntersectAction","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.LabelIntersectAction\">\r\n            <summary>\r\n            Specifies the label intersect action for the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"LabelIntersectAction"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataLabel","Common.TypeNameIdentifier":"ChartDataLabel"}},{"HashCode":523567422,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartDataLabel.Template","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Template\">\r\n            <summary>\r\n            Specifies the custom HTML element in place of datalabel.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"ChartDataLabel"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Template' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataLabel.Template","Common.TypeNameIdentifier":"ChartDataLabel"}},{"HashCode":-1754119016,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartDataLabel.Template","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabel.Template\">\r\n            <summary>\r\n            Specifies the custom HTML element in place of datalabel.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"Syncfusion.Blazor.Charts.ChartDataLabel"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Template' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataLabel.Template","Common.TypeNameIdentifier":"ChartDataLabel"}},{"HashCode":-892264632,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartDataLabel.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartDataLabel"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataLabel.ChildContent","Common.TypeNameIdentifier":"ChartDataLabel"}},{"HashCode":-455875628,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartDataLabel.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartDataLabel"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataLabel.ChildContent","Common.TypeNameIdentifier":"ChartDataLabel"}},{"HashCode":1598388441,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartDataLabelBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartDataLabelBorder\">\r\n            <summary>\r\n            Options to customize the datalabel border.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartDataLabelBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabelBorder.Width\">\r\n            <summary>\r\n            Specifies the width of the datalabel border.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataLabelBorder","Common.TypeNameIdentifier":"ChartDataLabelBorder"}},{"HashCode":329549107,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartDataLabelBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartDataLabelBorder\">\r\n            <summary>\r\n            Options to customize the datalabel border.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartDataLabelBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabelBorder.Width\">\r\n            <summary>\r\n            Specifies the width of the datalabel border.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataLabelBorder","Common.TypeNameIdentifier":"ChartDataLabelBorder"}},{"HashCode":-21342981,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartDataLabelBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartDataLabelBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataLabelBorder.ChildContent","Common.TypeNameIdentifier":"ChartDataLabelBorder"}},{"HashCode":1051115705,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartDataLabelBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartDataLabelBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataLabelBorder.ChildContent","Common.TypeNameIdentifier":"ChartDataLabelBorder"}},{"HashCode":-238674004,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartDataLabelFont","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartDataLabelFont\">\r\n            <summary>\r\n            Options to customize the text style of datalabel.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartDataLabelFont"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabelFont.Size\">\r\n            <summary>\r\n            Defines the size of the datalabel text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabelFont.Color\">\r\n            <summary>\r\n            Defind the color of the datalabel text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabelFont.FontFamily\">\r\n            <summary>\r\n            Unique font family of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabelFont.FontWeight\">\r\n            <summary>\r\n            Unique font weight of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataLabelFont","Common.TypeNameIdentifier":"ChartDataLabelFont"}},{"HashCode":-320891687,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartDataLabelFont","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartDataLabelFont\">\r\n            <summary>\r\n            Options to customize the text style of datalabel.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartDataLabelFont"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabelFont.Size\">\r\n            <summary>\r\n            Defines the size of the datalabel text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabelFont.Color\">\r\n            <summary>\r\n            Defind the color of the datalabel text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabelFont.FontFamily\">\r\n            <summary>\r\n            Unique font family of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabelFont.FontWeight\">\r\n            <summary>\r\n            Unique font weight of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataLabelFont","Common.TypeNameIdentifier":"ChartDataLabelFont"}},{"HashCode":-2008251023,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartDataLabelFont.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartDataLabelFont"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataLabelFont.ChildContent","Common.TypeNameIdentifier":"ChartDataLabelFont"}},{"HashCode":630934802,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartDataLabelFont.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartDataLabelFont"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataLabelFont.ChildContent","Common.TypeNameIdentifier":"ChartDataLabelFont"}},{"HashCode":-447937563,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartDataLabelMargin","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartDataLabelMargin\">\r\n            <summary>\r\n            Options to customize the margin of the datalabel.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartDataLabelMargin"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Bottom","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabelMargin.Bottom\">\r\n            <summary>\r\n            Specifies the bottom margin of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Bottom"}},{"Kind":"Components.Component","Name":"Left","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabelMargin.Left\">\r\n            <summary>\r\n            Specifies the left margin of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Left"}},{"Kind":"Components.Component","Name":"Right","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabelMargin.Right\">\r\n            <summary>\r\n            Specifies the right margin of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Right"}},{"Kind":"Components.Component","Name":"Top","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabelMargin.Top\">\r\n            <summary>\r\n            Specifies the top margin of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Top"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataLabelMargin","Common.TypeNameIdentifier":"ChartDataLabelMargin"}},{"HashCode":1389716333,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartDataLabelMargin","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartDataLabelMargin\">\r\n            <summary>\r\n            Options to customize the margin of the datalabel.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartDataLabelMargin"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Bottom","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabelMargin.Bottom\">\r\n            <summary>\r\n            Specifies the bottom margin of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Bottom"}},{"Kind":"Components.Component","Name":"Left","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabelMargin.Left\">\r\n            <summary>\r\n            Specifies the left margin of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Left"}},{"Kind":"Components.Component","Name":"Right","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabelMargin.Right\">\r\n            <summary>\r\n            Specifies the right margin of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Right"}},{"Kind":"Components.Component","Name":"Top","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataLabelMargin.Top\">\r\n            <summary>\r\n            Specifies the top margin of the datalabel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Top"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataLabelMargin","Common.TypeNameIdentifier":"ChartDataLabelMargin"}},{"HashCode":-1977841827,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartDataLabelMargin.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartDataLabelMargin"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataLabelMargin.ChildContent","Common.TypeNameIdentifier":"ChartDataLabelMargin"}},{"HashCode":1475113018,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartDataLabelMargin.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartDataLabelMargin"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataLabelMargin.ChildContent","Common.TypeNameIdentifier":"ChartDataLabelMargin"}},{"HashCode":1870573201,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartEmptyPointBorder","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartEmptyPointBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEmptyPointBorder.Color\">\r\n            <summary>\r\n            Specifies the border color of the empty point.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEmptyPointBorder.Width\">\r\n            <summary>\r\n            Specifies the width of the empty point.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartEmptyPointBorder","Common.TypeNameIdentifier":"ChartEmptyPointBorder"}},{"HashCode":1568183765,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartEmptyPointBorder","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartEmptyPointBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEmptyPointBorder.Color\">\r\n            <summary>\r\n            Specifies the border color of the empty point.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEmptyPointBorder.Width\">\r\n            <summary>\r\n            Specifies the width of the empty point.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartEmptyPointBorder","Common.TypeNameIdentifier":"ChartEmptyPointBorder"}},{"HashCode":-2064532112,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartEmptyPointBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartEmptyPointBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartEmptyPointBorder.ChildContent","Common.TypeNameIdentifier":"ChartEmptyPointBorder"}},{"HashCode":226560393,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartEmptyPointBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartEmptyPointBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartEmptyPointBorder.ChildContent","Common.TypeNameIdentifier":"ChartEmptyPointBorder"}},{"HashCode":-1893889684,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartEmptyPointSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartEmptyPointSettings\">\r\n            <summary>\r\n            Specifies the Empty Point configuration of the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartEmptyPointSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Mode","TypeName":"Syncfusion.Blazor.Charts.EmptyPointMode","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEmptyPointSettings.Mode\">\r\n            <summary>\r\n            Sets and gets the mode of the empty point.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.EmptyPointMode","Common.PropertyName":"Mode"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEmptyPointSettings.Fill\">\r\n            <summary>\r\n            Sets and gets the fill of the empty point.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartEmptyPointBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEmptyPointSettings.Border\">\r\n            <summary>\r\n            Sets and gets the border of the empty point.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartEmptyPointBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartEmptyPointSettings","Common.TypeNameIdentifier":"ChartEmptyPointSettings"}},{"HashCode":-80094728,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartEmptyPointSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartEmptyPointSettings\">\r\n            <summary>\r\n            Specifies the Empty Point configuration of the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartEmptyPointSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Mode","TypeName":"Syncfusion.Blazor.Charts.EmptyPointMode","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEmptyPointSettings.Mode\">\r\n            <summary>\r\n            Sets and gets the mode of the empty point.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.EmptyPointMode","Common.PropertyName":"Mode"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEmptyPointSettings.Fill\">\r\n            <summary>\r\n            Sets and gets the fill of the empty point.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartEmptyPointBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartEmptyPointSettings.Border\">\r\n            <summary>\r\n            Sets and gets the border of the empty point.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartEmptyPointBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartEmptyPointSettings","Common.TypeNameIdentifier":"ChartEmptyPointSettings"}},{"HashCode":971400285,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartEmptyPointSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartEmptyPointSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartEmptyPointSettings.ChildContent","Common.TypeNameIdentifier":"ChartEmptyPointSettings"}},{"HashCode":347437101,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartEmptyPointSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartEmptyPointSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartEmptyPointSettings.ChildContent","Common.TypeNameIdentifier":"ChartEmptyPointSettings"}},{"HashCode":1834979428,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartErrorBarCapSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartErrorBarCapSettings\">\r\n            <summary>\r\n            Specifies the configuration of the error bar cap settings.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartErrorBarCapSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarCapSettings.Color\">\r\n            <summary>\r\n             The stroke color of the cap, which accepts value in hex, rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Length","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarCapSettings.Length\">\r\n            <summary>\r\n            The length of the error bar in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Length"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarCapSettings.Opacity\">\r\n            <summary>\r\n            The opacity of the cap.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarCapSettings.Width\">\r\n            <summary>\r\n            The width of the error bar in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartErrorBarCapSettings","Common.TypeNameIdentifier":"ChartErrorBarCapSettings"}},{"HashCode":890513106,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartErrorBarCapSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartErrorBarCapSettings\">\r\n            <summary>\r\n            Specifies the configuration of the error bar cap settings.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartErrorBarCapSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarCapSettings.Color\">\r\n            <summary>\r\n             The stroke color of the cap, which accepts value in hex, rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Length","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarCapSettings.Length\">\r\n            <summary>\r\n            The length of the error bar in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Length"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarCapSettings.Opacity\">\r\n            <summary>\r\n            The opacity of the cap.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarCapSettings.Width\">\r\n            <summary>\r\n            The width of the error bar in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartErrorBarCapSettings","Common.TypeNameIdentifier":"ChartErrorBarCapSettings"}},{"HashCode":1999469830,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartErrorBarCapSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartErrorBarCapSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartErrorBarCapSettings.ChildContent","Common.TypeNameIdentifier":"ChartErrorBarCapSettings"}},{"HashCode":201708845,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartErrorBarCapSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartErrorBarCapSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartErrorBarCapSettings.ChildContent","Common.TypeNameIdentifier":"ChartErrorBarCapSettings"}},{"HashCode":35338553,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartErrorBarSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartErrorBarSettings\">\r\n            <summary>\r\n            Specifies the configuration of the error bar settings.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartErrorBarSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.Color\">\r\n            <summary>\r\n            The color for stroke of the error bar, which accepts value in hex, rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Direction","TypeName":"Syncfusion.Blazor.Charts.ErrorBarDirection","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.Direction\">\r\n            <summary>\r\n            The direction of the error bar . They are\r\n            both - Renders both direction of error bar.\r\n            minus - Renders minus direction of error bar.\r\n            plus - Renders plus direction error bar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ErrorBarDirection","Common.PropertyName":"Direction"}},{"Kind":"Components.Component","Name":"ErrorBarCap","TypeName":"Syncfusion.Blazor.Charts.ChartErrorBarCapSettings","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.ErrorBarCap\">\r\n            <summary>\r\n            Options for customizing the cap of the error bar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartErrorBarCapSettings","Common.PropertyName":"ErrorBarCap"}},{"Kind":"Components.Component","Name":"HorizontalError","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.HorizontalError\">\r\n            <summary>\r\n            Denotes the horizontal error of the error bar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"HorizontalError"}},{"Kind":"Components.Component","Name":"HorizontalNegativeError","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.HorizontalNegativeError\">\r\n            <summary>\r\n            Denotes the horizontal negative error of the error bar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"HorizontalNegativeError"}},{"Kind":"Components.Component","Name":"HorizontalPositiveError","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.HorizontalPositiveError\">\r\n            <summary>\r\n            Denotes the horizontal positive error of the error bar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"HorizontalPositiveError"}},{"Kind":"Components.Component","Name":"Mode","TypeName":"Syncfusion.Blazor.Charts.ErrorBarMode","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.Mode\">\r\n            <summary>\r\n            The mode of the error bar . They are\r\n            Vertical - Renders a vertical error bar.\r\n            Horizontal - Renders a horizontal error bar.\r\n            Both - Renders both side error bar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ErrorBarMode","Common.PropertyName":"Mode"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Charts.ErrorBarType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.Type\">\r\n            <summary>\r\n            The type of the error bar . They are\r\n            Fixed - Renders a fixed type error bar.\r\n            Percentage - Renders a percentage type error bar.\r\n            StandardDeviation - Renders a standard deviation type error bar.\r\n            StandardError -Renders a standard error type error bar.\r\n            Custom -Renders a custom type error bar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ErrorBarType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"VerticalError","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.VerticalError\">\r\n            <summary>\r\n            Denotes the vertical error of the error bar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"VerticalError"}},{"Kind":"Components.Component","Name":"VerticalNegativeError","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.VerticalNegativeError\">\r\n            <summary>\r\n            Denotes the vertical negative error of the error bar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"VerticalNegativeError"}},{"Kind":"Components.Component","Name":"VerticalPositiveError","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.VerticalPositiveError\">\r\n            <summary>\r\n            Denotes the vertical positive error of the error bar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"VerticalPositiveError"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.Visible\">\r\n            <summary>\r\n            If set true, error bar for data gets rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.Width\">\r\n            <summary>\r\n            The stroke width of the error bar..\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartErrorBarSettings","Common.TypeNameIdentifier":"ChartErrorBarSettings"}},{"HashCode":232025512,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartErrorBarSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartErrorBarSettings\">\r\n            <summary>\r\n            Specifies the configuration of the error bar settings.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartErrorBarSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.Color\">\r\n            <summary>\r\n            The color for stroke of the error bar, which accepts value in hex, rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Direction","TypeName":"Syncfusion.Blazor.Charts.ErrorBarDirection","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.Direction\">\r\n            <summary>\r\n            The direction of the error bar . They are\r\n            both - Renders both direction of error bar.\r\n            minus - Renders minus direction of error bar.\r\n            plus - Renders plus direction error bar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ErrorBarDirection","Common.PropertyName":"Direction"}},{"Kind":"Components.Component","Name":"ErrorBarCap","TypeName":"Syncfusion.Blazor.Charts.ChartErrorBarCapSettings","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.ErrorBarCap\">\r\n            <summary>\r\n            Options for customizing the cap of the error bar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartErrorBarCapSettings","Common.PropertyName":"ErrorBarCap"}},{"Kind":"Components.Component","Name":"HorizontalError","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.HorizontalError\">\r\n            <summary>\r\n            Denotes the horizontal error of the error bar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"HorizontalError"}},{"Kind":"Components.Component","Name":"HorizontalNegativeError","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.HorizontalNegativeError\">\r\n            <summary>\r\n            Denotes the horizontal negative error of the error bar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"HorizontalNegativeError"}},{"Kind":"Components.Component","Name":"HorizontalPositiveError","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.HorizontalPositiveError\">\r\n            <summary>\r\n            Denotes the horizontal positive error of the error bar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"HorizontalPositiveError"}},{"Kind":"Components.Component","Name":"Mode","TypeName":"Syncfusion.Blazor.Charts.ErrorBarMode","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.Mode\">\r\n            <summary>\r\n            The mode of the error bar . They are\r\n            Vertical - Renders a vertical error bar.\r\n            Horizontal - Renders a horizontal error bar.\r\n            Both - Renders both side error bar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ErrorBarMode","Common.PropertyName":"Mode"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Charts.ErrorBarType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.Type\">\r\n            <summary>\r\n            The type of the error bar . They are\r\n            Fixed - Renders a fixed type error bar.\r\n            Percentage - Renders a percentage type error bar.\r\n            StandardDeviation - Renders a standard deviation type error bar.\r\n            StandardError -Renders a standard error type error bar.\r\n            Custom -Renders a custom type error bar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ErrorBarType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"VerticalError","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.VerticalError\">\r\n            <summary>\r\n            Denotes the vertical error of the error bar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"VerticalError"}},{"Kind":"Components.Component","Name":"VerticalNegativeError","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.VerticalNegativeError\">\r\n            <summary>\r\n            Denotes the vertical negative error of the error bar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"VerticalNegativeError"}},{"Kind":"Components.Component","Name":"VerticalPositiveError","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.VerticalPositiveError\">\r\n            <summary>\r\n            Denotes the vertical positive error of the error bar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"VerticalPositiveError"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.Visible\">\r\n            <summary>\r\n            If set true, error bar for data gets rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartErrorBarSettings.Width\">\r\n            <summary>\r\n            The stroke width of the error bar..\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartErrorBarSettings","Common.TypeNameIdentifier":"ChartErrorBarSettings"}},{"HashCode":-1541206483,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartErrorBarSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartErrorBarSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartErrorBarSettings.ChildContent","Common.TypeNameIdentifier":"ChartErrorBarSettings"}},{"HashCode":621092233,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartErrorBarSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartErrorBarSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartErrorBarSettings.ChildContent","Common.TypeNameIdentifier":"ChartErrorBarSettings"}},{"HashCode":-1286760664,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartCommonMarker","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartCommonMarker\">\r\n            <summary>\r\n            Specifies the marker configuration of the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartCommonMarker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Visible\">\r\n            <summary>\r\n            Enables the visibility of marker for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"IsFilled","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.IsFilled\">\r\n            <summary>\r\n            Enables the fill visibility of marker for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsFilled"}},{"Kind":"Components.Component","Name":"Shape","TypeName":"Syncfusion.Blazor.Charts.ChartShape","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Shape\">\r\n            <summary>\r\n            Defines the shape of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartShape","Common.PropertyName":"Shape"}},{"Kind":"Components.Component","Name":"ImageUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.ImageUrl\">\r\n            <summary>\r\n            Specifies the url path for the image.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ImageUrl"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Height\">\r\n            <summary>\r\n            Specifies the height of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Width\">\r\n            <summary>\r\n            Specifies the width of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartMarkerBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Border\">\r\n            <summary>\r\n            Oprions to customize the border of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartMarkerBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"Offset","TypeName":"Syncfusion.Blazor.Charts.ChartMarkerOffset","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Offset\">\r\n            <summary>\r\n            Options to customize the offset of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartMarkerOffset","Common.PropertyName":"Offset"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Fill\">\r\n            <summary>\r\n            Specifies the fill color of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Opacity\">\r\n            <summary>\r\n            Specifies the opacity of the marker shape.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"DataLabel","TypeName":"Syncfusion.Blazor.Charts.ChartDataLabel","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.DataLabel\">\r\n            <summary>\r\n            Options to customize the datalabel for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartDataLabel","Common.PropertyName":"DataLabel"}},{"Kind":"Components.Component","Name":"AllowHighlight","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.AllowHighlight\">\r\n            <summary> \r\n            Get and set the marker explode for the chart tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowHighlight"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCommonMarker","Common.TypeNameIdentifier":"ChartCommonMarker"}},{"HashCode":719107590,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartCommonMarker","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartCommonMarker\">\r\n            <summary>\r\n            Specifies the marker configuration of the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartCommonMarker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Visible\">\r\n            <summary>\r\n            Enables the visibility of marker for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"IsFilled","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.IsFilled\">\r\n            <summary>\r\n            Enables the fill visibility of marker for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsFilled"}},{"Kind":"Components.Component","Name":"Shape","TypeName":"Syncfusion.Blazor.Charts.ChartShape","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Shape\">\r\n            <summary>\r\n            Defines the shape of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartShape","Common.PropertyName":"Shape"}},{"Kind":"Components.Component","Name":"ImageUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.ImageUrl\">\r\n            <summary>\r\n            Specifies the url path for the image.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ImageUrl"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Height\">\r\n            <summary>\r\n            Specifies the height of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Width\">\r\n            <summary>\r\n            Specifies the width of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartMarkerBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Border\">\r\n            <summary>\r\n            Oprions to customize the border of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartMarkerBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"Offset","TypeName":"Syncfusion.Blazor.Charts.ChartMarkerOffset","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Offset\">\r\n            <summary>\r\n            Options to customize the offset of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartMarkerOffset","Common.PropertyName":"Offset"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Fill\">\r\n            <summary>\r\n            Specifies the fill color of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Opacity\">\r\n            <summary>\r\n            Specifies the opacity of the marker shape.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"DataLabel","TypeName":"Syncfusion.Blazor.Charts.ChartDataLabel","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.DataLabel\">\r\n            <summary>\r\n            Options to customize the datalabel for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartDataLabel","Common.PropertyName":"DataLabel"}},{"Kind":"Components.Component","Name":"AllowHighlight","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.AllowHighlight\">\r\n            <summary> \r\n            Get and set the marker explode for the chart tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowHighlight"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCommonMarker","Common.TypeNameIdentifier":"ChartCommonMarker"}},{"HashCode":392939027,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartCommonMarker.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartCommonMarker"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCommonMarker.ChildContent","Common.TypeNameIdentifier":"ChartCommonMarker"}},{"HashCode":1294006203,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartCommonMarker.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartCommonMarker"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCommonMarker.ChildContent","Common.TypeNameIdentifier":"ChartCommonMarker"}},{"HashCode":836315072,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartMarker","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartMarker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Visible\">\r\n            <summary>\r\n            Enables the visibility of marker for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"IsFilled","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.IsFilled\">\r\n            <summary>\r\n            Enables the fill visibility of marker for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsFilled"}},{"Kind":"Components.Component","Name":"Shape","TypeName":"Syncfusion.Blazor.Charts.ChartShape","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Shape\">\r\n            <summary>\r\n            Defines the shape of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartShape","Common.PropertyName":"Shape"}},{"Kind":"Components.Component","Name":"ImageUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.ImageUrl\">\r\n            <summary>\r\n            Specifies the url path for the image.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ImageUrl"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Height\">\r\n            <summary>\r\n            Specifies the height of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Width\">\r\n            <summary>\r\n            Specifies the width of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartMarkerBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Border\">\r\n            <summary>\r\n            Oprions to customize the border of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartMarkerBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"Offset","TypeName":"Syncfusion.Blazor.Charts.ChartMarkerOffset","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Offset\">\r\n            <summary>\r\n            Options to customize the offset of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartMarkerOffset","Common.PropertyName":"Offset"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Fill\">\r\n            <summary>\r\n            Specifies the fill color of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Opacity\">\r\n            <summary>\r\n            Specifies the opacity of the marker shape.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"DataLabel","TypeName":"Syncfusion.Blazor.Charts.ChartDataLabel","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.DataLabel\">\r\n            <summary>\r\n            Options to customize the datalabel for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartDataLabel","Common.PropertyName":"DataLabel"}},{"Kind":"Components.Component","Name":"AllowHighlight","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.AllowHighlight\">\r\n            <summary> \r\n            Get and set the marker explode for the chart tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowHighlight"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartMarker","Common.TypeNameIdentifier":"ChartMarker"}},{"HashCode":-798132362,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartMarker","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartMarker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Visible\">\r\n            <summary>\r\n            Enables the visibility of marker for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"IsFilled","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.IsFilled\">\r\n            <summary>\r\n            Enables the fill visibility of marker for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsFilled"}},{"Kind":"Components.Component","Name":"Shape","TypeName":"Syncfusion.Blazor.Charts.ChartShape","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Shape\">\r\n            <summary>\r\n            Defines the shape of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartShape","Common.PropertyName":"Shape"}},{"Kind":"Components.Component","Name":"ImageUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.ImageUrl\">\r\n            <summary>\r\n            Specifies the url path for the image.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ImageUrl"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Height\">\r\n            <summary>\r\n            Specifies the height of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Width\">\r\n            <summary>\r\n            Specifies the width of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartMarkerBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Border\">\r\n            <summary>\r\n            Oprions to customize the border of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartMarkerBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"Offset","TypeName":"Syncfusion.Blazor.Charts.ChartMarkerOffset","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Offset\">\r\n            <summary>\r\n            Options to customize the offset of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartMarkerOffset","Common.PropertyName":"Offset"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Fill\">\r\n            <summary>\r\n            Specifies the fill color of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Opacity\">\r\n            <summary>\r\n            Specifies the opacity of the marker shape.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"DataLabel","TypeName":"Syncfusion.Blazor.Charts.ChartDataLabel","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.DataLabel\">\r\n            <summary>\r\n            Options to customize the datalabel for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartDataLabel","Common.PropertyName":"DataLabel"}},{"Kind":"Components.Component","Name":"AllowHighlight","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.AllowHighlight\">\r\n            <summary> \r\n            Get and set the marker explode for the chart tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowHighlight"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartMarker","Common.TypeNameIdentifier":"ChartMarker"}},{"HashCode":221030885,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartMarker.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartMarker"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartMarker.ChildContent","Common.TypeNameIdentifier":"ChartMarker"}},{"HashCode":274887581,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartMarker.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartMarker"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartMarker.ChildContent","Common.TypeNameIdentifier":"ChartMarker"}},{"HashCode":770827120,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartMarkerBorder","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartMarkerBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartMarkerBorder.Width\">\r\n            <summary>\r\n            Specifies the width of the marker border.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartMarkerBorder","Common.TypeNameIdentifier":"ChartMarkerBorder"}},{"HashCode":1155266578,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartMarkerBorder","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartMarkerBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartMarkerBorder.Width\">\r\n            <summary>\r\n            Specifies the width of the marker border.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartMarkerBorder","Common.TypeNameIdentifier":"ChartMarkerBorder"}},{"HashCode":-950362833,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartMarkerBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartMarkerBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartMarkerBorder.ChildContent","Common.TypeNameIdentifier":"ChartMarkerBorder"}},{"HashCode":-1793219616,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartMarkerBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartMarkerBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartMarkerBorder.ChildContent","Common.TypeNameIdentifier":"ChartMarkerBorder"}},{"HashCode":371804672,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartMarkerOffset","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartMarkerOffset"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"X","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation.X\">\r\n            <summary>\r\n             Sets and gets the x coordinate of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation.Y\">\r\n            <summary>\r\n             Sets and gets the y coordinate of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Y"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartMarkerOffset","Common.TypeNameIdentifier":"ChartMarkerOffset"}},{"HashCode":247025028,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartMarkerOffset","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartMarkerOffset"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"X","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation.X\">\r\n            <summary>\r\n             Sets and gets the x coordinate of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation.Y\">\r\n            <summary>\r\n             Sets and gets the y coordinate of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Y"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartMarkerOffset","Common.TypeNameIdentifier":"ChartMarkerOffset"}},{"HashCode":674923631,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartMarkerOffset.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartMarkerOffset"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartMarkerOffset.ChildContent","Common.TypeNameIdentifier":"ChartMarkerOffset"}},{"HashCode":-1076495341,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartMarkerOffset.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartMarkerOffset"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartMarkerOffset.ChildContent","Common.TypeNameIdentifier":"ChartMarkerOffset"}},{"HashCode":990445673,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartSegment","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartSegment\">\r\n            <summary>\r\n            Defines the collection of regions that helps to differentiate a line Type series.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartSegment"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Value","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSegment.Value\">\r\n            <summary>\r\n            Sets and gets the value of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSegment.Color\">\r\n            <summary>\r\n            Sets and gets the color of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSegment.DashArray\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSegment","Common.TypeNameIdentifier":"ChartSegment"}},{"HashCode":763915619,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartSegment","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartSegment\">\r\n            <summary>\r\n            Defines the collection of regions that helps to differentiate a line Type series.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartSegment"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Value","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSegment.Value\">\r\n            <summary>\r\n            Sets and gets the value of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSegment.Color\">\r\n            <summary>\r\n            Sets and gets the color of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSegment.DashArray\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSegment","Common.TypeNameIdentifier":"ChartSegment"}},{"HashCode":1338893279,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartSegment.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartSegment"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSegment.ChildContent","Common.TypeNameIdentifier":"ChartSegment"}},{"HashCode":-1882217943,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartSegment.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartSegment"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSegment.ChildContent","Common.TypeNameIdentifier":"ChartSegment"}},{"HashCode":-628555612,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartSegments","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartSegments\">\r\n            <summary>\r\n            Defines the collection of regions that helps to differentiate a line Type series.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartSegments"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSegments","Common.TypeNameIdentifier":"ChartSegments"}},{"HashCode":227625128,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartSegments","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartSegments\">\r\n            <summary>\r\n            Defines the collection of regions that helps to differentiate a line Type series.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartSegments"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSegments","Common.TypeNameIdentifier":"ChartSegments"}},{"HashCode":-696000287,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartSegments.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartSegments"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSegments.ChildContent","Common.TypeNameIdentifier":"ChartSegments"}},{"HashCode":150958437,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartSegments.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartSegments"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSegments.ChildContent","Common.TypeNameIdentifier":"ChartSegments"}},{"HashCode":-1419683155,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartSorting","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartSorting\">\r\n            <summary>\r\n            Configures the sorting option for the chart. \r\n            </summary>\r\n            <example>  \r\n            This example shows how to sort a chart by the \"Y\" property in asscending order. \r\n            <code>\r\n            <![CDATA[  \r\n            <SfChart @ref=”Chart” DataSource=”Data”>\r\n            <ChartSorting PropertyName =\"Y\" Direction =\"SortDirection.Descending\"/> \r\n            …  \r\n            </SfChart>\r\n            ]]>\r\n            </code>\r\n            </example> \r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartSorting"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Direction","TypeName":"Syncfusion.Blazor.Data.ListSortDirection","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSorting.Direction\">\r\n            <summary>\r\n            Get and set the sorting direction for the chart data. The available direction are,\r\n            <list type=\"bullet\">\r\n            <item> \r\n            <term>Ascending</term> \r\n            <description> Sort from smallest to largest. For example, from A to Z.</description>\r\n            </item> \r\n            <item> \r\n            <term>Descending</term>\r\n            <description> Sort from largest to smallest. For example, from Z to A.</description> \r\n            </item> \r\n            </list>\r\n            </summary> \r\n            <value>\r\n            Sorts the chart in ascending order.  \r\n            The default value is <see cref=\"F:Syncfusion.Blazor.Data.ListSortDirection.Ascending\" />.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Data.ListSortDirection","Common.PropertyName":"Direction"}},{"Kind":"Components.Component","Name":"PropertyName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSorting.PropertyName\">\r\n            <summary>\r\n            Gets or sets the property name being used as the sorting criteria. \r\n            </summary>\r\n            <value>\r\n            Specifies property name for the sorting. The default value is <c>null</c>. \r\n            </value>\r\n            <remarks> \r\n            PropertyName property takes x, y, high, low, open, close and size fields of the chart data source.\r\n            </remarks>\r\n             \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PropertyName"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSorting","Common.TypeNameIdentifier":"ChartSorting"}},{"HashCode":1934478560,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartSorting","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartSorting\">\r\n            <summary>\r\n            Configures the sorting option for the chart. \r\n            </summary>\r\n            <example>  \r\n            This example shows how to sort a chart by the \"Y\" property in asscending order. \r\n            <code>\r\n            <![CDATA[  \r\n            <SfChart @ref=”Chart” DataSource=”Data”>\r\n            <ChartSorting PropertyName =\"Y\" Direction =\"SortDirection.Descending\"/> \r\n            …  \r\n            </SfChart>\r\n            ]]>\r\n            </code>\r\n            </example> \r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartSorting"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Direction","TypeName":"Syncfusion.Blazor.Data.ListSortDirection","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSorting.Direction\">\r\n            <summary>\r\n            Get and set the sorting direction for the chart data. The available direction are,\r\n            <list type=\"bullet\">\r\n            <item> \r\n            <term>Ascending</term> \r\n            <description> Sort from smallest to largest. For example, from A to Z.</description>\r\n            </item> \r\n            <item> \r\n            <term>Descending</term>\r\n            <description> Sort from largest to smallest. For example, from Z to A.</description> \r\n            </item> \r\n            </list>\r\n            </summary> \r\n            <value>\r\n            Sorts the chart in ascending order.  \r\n            The default value is <see cref=\"F:Syncfusion.Blazor.Data.ListSortDirection.Ascending\" />.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Data.ListSortDirection","Common.PropertyName":"Direction"}},{"Kind":"Components.Component","Name":"PropertyName","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartSorting.PropertyName\">\r\n            <summary>\r\n            Gets or sets the property name being used as the sorting criteria. \r\n            </summary>\r\n            <value>\r\n            Specifies property name for the sorting. The default value is <c>null</c>. \r\n            </value>\r\n            <remarks> \r\n            PropertyName property takes x, y, high, low, open, close and size fields of the chart data source.\r\n            </remarks>\r\n             \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PropertyName"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSorting","Common.TypeNameIdentifier":"ChartSorting"}},{"HashCode":522839003,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartSorting.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartSorting"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSorting.ChildContent","Common.TypeNameIdentifier":"ChartSorting"}},{"HashCode":-275442807,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartSorting.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartSorting"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSorting.ChildContent","Common.TypeNameIdentifier":"ChartSorting"}},{"HashCode":-857762582,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartTrendline","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartTrendline\">\r\n            <summary>\r\n            Defines the collection of trendlines that are used to predict the trend.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartTrendline"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.Name\">\r\n            <summary>\r\n            Sets and gets the value of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.DashArray\">\r\n            <summary>\r\n            Sets and gets the color of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.Visible\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Charts.TrendlineTypes","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.Type\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TrendlineTypes","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Period","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.Period\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Period"}},{"Kind":"Components.Component","Name":"PolynomialOrder","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.PolynomialOrder\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PolynomialOrder"}},{"Kind":"Components.Component","Name":"BackwardForecast","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.BackwardForecast\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"BackwardForecast"}},{"Kind":"Components.Component","Name":"ForwardForecast","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.ForwardForecast\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ForwardForecast"}},{"Kind":"Components.Component","Name":"EnableTooltip","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.EnableTooltip\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableTooltip"}},{"Kind":"Components.Component","Name":"Intercept","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.Intercept\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Intercept"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.Fill\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.Width\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"LegendShape","TypeName":"Syncfusion.Blazor.Charts.LegendShape","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.LegendShape\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LegendShape","Common.PropertyName":"LegendShape"}},{"Kind":"Components.Component","Name":"Marker","TypeName":"Syncfusion.Blazor.Charts.ChartTrendlineMarker","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.Marker\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartTrendlineMarker","Common.PropertyName":"Marker"}},{"Kind":"Components.Component","Name":"Animation","TypeName":"Syncfusion.Blazor.Charts.ChartTrendlineAnimation","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.Animation\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartTrendlineAnimation","Common.PropertyName":"Animation"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTrendline","Common.TypeNameIdentifier":"ChartTrendline"}},{"HashCode":-1744686474,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartTrendline","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartTrendline\">\r\n            <summary>\r\n            Defines the collection of trendlines that are used to predict the trend.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartTrendline"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.Name\">\r\n            <summary>\r\n            Sets and gets the value of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.DashArray\">\r\n            <summary>\r\n            Sets and gets the color of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.Visible\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Charts.TrendlineTypes","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.Type\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TrendlineTypes","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Period","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.Period\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Period"}},{"Kind":"Components.Component","Name":"PolynomialOrder","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.PolynomialOrder\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"PolynomialOrder"}},{"Kind":"Components.Component","Name":"BackwardForecast","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.BackwardForecast\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"BackwardForecast"}},{"Kind":"Components.Component","Name":"ForwardForecast","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.ForwardForecast\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"ForwardForecast"}},{"Kind":"Components.Component","Name":"EnableTooltip","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.EnableTooltip\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableTooltip"}},{"Kind":"Components.Component","Name":"Intercept","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.Intercept\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Intercept"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.Fill\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.Width\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"LegendShape","TypeName":"Syncfusion.Blazor.Charts.LegendShape","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.LegendShape\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LegendShape","Common.PropertyName":"LegendShape"}},{"Kind":"Components.Component","Name":"Marker","TypeName":"Syncfusion.Blazor.Charts.ChartTrendlineMarker","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.Marker\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartTrendlineMarker","Common.PropertyName":"Marker"}},{"Kind":"Components.Component","Name":"Animation","TypeName":"Syncfusion.Blazor.Charts.ChartTrendlineAnimation","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTrendline.Animation\">\r\n            <summary>\r\n            Sets and gets the dash array of the segment series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartTrendlineAnimation","Common.PropertyName":"Animation"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTrendline","Common.TypeNameIdentifier":"ChartTrendline"}},{"HashCode":837362291,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartTrendline.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartTrendline"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTrendline.ChildContent","Common.TypeNameIdentifier":"ChartTrendline"}},{"HashCode":-1924628311,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartTrendline.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartTrendline"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTrendline.ChildContent","Common.TypeNameIdentifier":"ChartTrendline"}},{"HashCode":1679118172,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartTrendlineAnimation","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartTrendlineAnimation\">\r\n            <summary>\r\n            Specifies the configuration of animation for the trendlines.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartTrendlineAnimation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.Delay\">\r\n            <summary>\r\n            Sets and gets the option for animation delay of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.Duration\">\r\n            <summary>\r\n            Sets and gets the duration of animation in milliseconds.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.Enable\">\r\n            <summary>\r\n            Option to series gets animated on initial loading.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTrendlineAnimation","Common.TypeNameIdentifier":"ChartTrendlineAnimation"}},{"HashCode":1058475084,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartTrendlineAnimation","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartTrendlineAnimation\">\r\n            <summary>\r\n            Specifies the configuration of animation for the trendlines.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartTrendlineAnimation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.Delay\">\r\n            <summary>\r\n            Sets and gets the option for animation delay of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.Duration\">\r\n            <summary>\r\n            Sets and gets the duration of animation in milliseconds.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.Enable\">\r\n            <summary>\r\n            Option to series gets animated on initial loading.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTrendlineAnimation","Common.TypeNameIdentifier":"ChartTrendlineAnimation"}},{"HashCode":2144828394,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartTrendlineAnimation.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartTrendlineAnimation"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTrendlineAnimation.ChildContent","Common.TypeNameIdentifier":"ChartTrendlineAnimation"}},{"HashCode":-267489137,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartTrendlineAnimation.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartTrendlineAnimation"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTrendlineAnimation.ChildContent","Common.TypeNameIdentifier":"ChartTrendlineAnimation"}},{"HashCode":980074845,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartTrendlineMarker","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartTrendlineMarker\">\r\n            <summary>\r\n            Specifies the configuration of the marker in trendline.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartTrendlineMarker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Visible\">\r\n            <summary>\r\n            Enables the visibility of marker for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"IsFilled","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.IsFilled\">\r\n            <summary>\r\n            Enables the fill visibility of marker for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsFilled"}},{"Kind":"Components.Component","Name":"Shape","TypeName":"Syncfusion.Blazor.Charts.ChartShape","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Shape\">\r\n            <summary>\r\n            Defines the shape of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartShape","Common.PropertyName":"Shape"}},{"Kind":"Components.Component","Name":"ImageUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.ImageUrl\">\r\n            <summary>\r\n            Specifies the url path for the image.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ImageUrl"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Height\">\r\n            <summary>\r\n            Specifies the height of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Width\">\r\n            <summary>\r\n            Specifies the width of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartMarkerBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Border\">\r\n            <summary>\r\n            Oprions to customize the border of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartMarkerBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"Offset","TypeName":"Syncfusion.Blazor.Charts.ChartMarkerOffset","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Offset\">\r\n            <summary>\r\n            Options to customize the offset of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartMarkerOffset","Common.PropertyName":"Offset"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Fill\">\r\n            <summary>\r\n            Specifies the fill color of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Opacity\">\r\n            <summary>\r\n            Specifies the opacity of the marker shape.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"DataLabel","TypeName":"Syncfusion.Blazor.Charts.ChartDataLabel","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.DataLabel\">\r\n            <summary>\r\n            Options to customize the datalabel for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartDataLabel","Common.PropertyName":"DataLabel"}},{"Kind":"Components.Component","Name":"AllowHighlight","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.AllowHighlight\">\r\n            <summary> \r\n            Get and set the marker explode for the chart tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowHighlight"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTrendlineMarker","Common.TypeNameIdentifier":"ChartTrendlineMarker"}},{"HashCode":-1095306676,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartTrendlineMarker","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartTrendlineMarker\">\r\n            <summary>\r\n            Specifies the configuration of the marker in trendline.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartTrendlineMarker"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Visible","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Visible\">\r\n            <summary>\r\n            Enables the visibility of marker for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Visible"}},{"Kind":"Components.Component","Name":"IsFilled","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.IsFilled\">\r\n            <summary>\r\n            Enables the fill visibility of marker for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsFilled"}},{"Kind":"Components.Component","Name":"Shape","TypeName":"Syncfusion.Blazor.Charts.ChartShape","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Shape\">\r\n            <summary>\r\n            Defines the shape of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartShape","Common.PropertyName":"Shape"}},{"Kind":"Components.Component","Name":"ImageUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.ImageUrl\">\r\n            <summary>\r\n            Specifies the url path for the image.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ImageUrl"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Height\">\r\n            <summary>\r\n            Specifies the height of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Width\">\r\n            <summary>\r\n            Specifies the width of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartMarkerBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Border\">\r\n            <summary>\r\n            Oprions to customize the border of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartMarkerBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"Offset","TypeName":"Syncfusion.Blazor.Charts.ChartMarkerOffset","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Offset\">\r\n            <summary>\r\n            Options to customize the offset of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartMarkerOffset","Common.PropertyName":"Offset"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Fill\">\r\n            <summary>\r\n            Specifies the fill color of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.Opacity\">\r\n            <summary>\r\n            Specifies the opacity of the marker shape.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"DataLabel","TypeName":"Syncfusion.Blazor.Charts.ChartDataLabel","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.DataLabel\">\r\n            <summary>\r\n            Options to customize the datalabel for the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartDataLabel","Common.PropertyName":"DataLabel"}},{"Kind":"Components.Component","Name":"AllowHighlight","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonMarker.AllowHighlight\">\r\n            <summary> \r\n            Get and set the marker explode for the chart tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowHighlight"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTrendlineMarker","Common.TypeNameIdentifier":"ChartTrendlineMarker"}},{"HashCode":2040646340,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartTrendlineMarker.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartTrendlineMarker"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTrendlineMarker.ChildContent","Common.TypeNameIdentifier":"ChartTrendlineMarker"}},{"HashCode":1824082871,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartTrendlineMarker.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartTrendlineMarker"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTrendlineMarker.ChildContent","Common.TypeNameIdentifier":"ChartTrendlineMarker"}},{"HashCode":1033314038,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartTrendlines","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartTrendlines\">\r\n            <summary>\r\n            Defines the collection of trendlines that are used to predict the trend.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartTrendlines"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTrendlines","Common.TypeNameIdentifier":"ChartTrendlines"}},{"HashCode":-434049510,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartTrendlines","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartTrendlines\">\r\n            <summary>\r\n            Defines the collection of trendlines that are used to predict the trend.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartTrendlines"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTrendlines","Common.TypeNameIdentifier":"ChartTrendlines"}},{"HashCode":1635636709,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartTrendlines.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartTrendlines"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTrendlines.ChildContent","Common.TypeNameIdentifier":"ChartTrendlines"}},{"HashCode":-322240609,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartTrendlines.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartTrendlines"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTrendlines.ChildContent","Common.TypeNameIdentifier":"ChartTrendlines"}},{"HashCode":-876638839,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.SfChart","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfChart"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.Height\">\r\n            <summary>\r\n            The height of the chart as a string accepts input both as '100px' or '100%'.\r\n            If specified as '100%, chart renders to the full height of its parent element.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value. The default value is <c>100%</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.Width\">\r\n            <summary>\r\n            The width of the chart as a string accepts input as both like '100px' or '100%'.\r\n            If specified as '100%, chart renders to the full width of its parent element.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.Title\">\r\n            <summary>\r\n            Gets and sets the title of the chart component.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"SubTitle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.SubTitle\">\r\n            <summary>\r\n            Gets and sets the sub title of the chart component.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value. The default value is empty.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SubTitle"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.ID\">\r\n            <summary>\r\n            Defines id of the chart component.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"IsTransposed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.IsTransposed\">\r\n            <summary>\r\n            Gets and sets whether the chart should be render in transposed manner or not.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the transposed can be enabled. Otherwise, <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsTransposed"}},{"Kind":"Components.Component","Name":"Theme","TypeName":"Syncfusion.Blazor.Theme","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.Theme\">\r\n            <summary>\r\n            Gets and sets the theme for the chart.\r\n            </summary>\r\n            <value>\r\n            Accepts the value from the <see cref=\"P:Syncfusion.Blazor.Charts.SfChart.Theme\" /> enum.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Theme","Common.PropertyName":"Theme"}},{"Kind":"Components.Component","Name":"Palettes","TypeName":"System.String[]","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.Palettes\">\r\n            <summary>\r\n            Gets and sets the palette for the chart series.\r\n            </summary>\r\n            <value>\r\n            Accepts the string array that specifies the palette for chart series.    \r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String[]","Common.PropertyName":"Palettes"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.DataSource\">\r\n            <summary>\r\n            Specifies the DataSource for the chart. It can be an array of JSON objects or an instance of DataManager.\r\n            </summary>\r\n            <value>\r\n            An array of objects or an instance of DataManager that represents the data source for the chart.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Object>","Common.PropertyName":"DataSource"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.Query\">\r\n            <summary>\r\n            Specifies query to select data from DataSource. This property is applicable only when the DataSource is `SfDataManager`.\r\n            </summary>\r\n            <value>\r\n            An object of the type <see cref=\"P:Syncfusion.Blazor.Charts.SfChart.Query\" /> that represents the query to be selected the data from data source.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Data.Query","Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"Background","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.Background\">\r\n            <summary>\r\n            Gets and sets the background color of the chart that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value that specifies the background color of the chart.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.EnableRtl\">\r\n            <summary>\r\n            Gets or sets the right to left direction that defines the text writing and user interface (UI) elements direction in layout.\r\n            </summary>\r\n            <value> \r\n            <c>true</c>, if the right to left direction can be enabled for chart component. Otherwise, <c>false</c>. The default value is <c>false</c>.\r\n            </value> \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"EnableSideBySidePlacement","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.EnableSideBySidePlacement\">\r\n            <summary>\r\n            Option for enable the side by side placement.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the side by side placement can be enabled. Otherwise, <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableSideBySidePlacement"}},{"Kind":"Components.Component","Name":"EnableAutoIntervalOnBothAxis","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.EnableAutoIntervalOnBothAxis\">\r\n            <summary>\r\n            Gets and sets both axis interval will be calculated automatically with respect to the zoomed range.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, the intervals for both axes will be calculated automatically based on the zoom range. Otherwise, <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableAutoIntervalOnBothAxis"}},{"Kind":"Components.Component","Name":"BackgroundImage","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.BackgroundImage\">\r\n            <summary>\r\n            Gets and sets the background image for chart.\r\n            </summary>\r\n            <value>\r\n            A string representing the URL or path to the background image. The default value is empty.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"BackgroundImage"}},{"Kind":"Components.Component","Name":"HighlightColor","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.HighlightColor\">\r\n            <summary>\r\n            Gets and sets the highlight color for the data point when user hover the data point. \r\n            </summary>\r\n            <value>\r\n            Accepts the string value.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HighlightColor"}},{"Kind":"Components.Component","Name":"SelectionMode","TypeName":"Syncfusion.Blazor.Charts.SelectionMode","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.SelectionMode\">\r\n            <summary>\r\n            Gets and sets the selection mode of the chart component.\r\n            </summary>\r\n            <value>\r\n            One of the <see cref=\"P:Syncfusion.Blazor.Charts.SfChart.SelectionMode\" /> enumeration values that specifies the mode of selection in chart component.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.SelectionMode","Common.PropertyName":"SelectionMode"}},{"Kind":"Components.Component","Name":"HighlightMode","TypeName":"Syncfusion.Blazor.Charts.HighlightMode","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.HighlightMode\">\r\n            <summary>\r\n            Gets and sets the highlight mode of the chart component.\r\n            </summary>\r\n            <value>\r\n            The highlight mode of the chart component.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.HighlightMode","Common.PropertyName":"HighlightMode"}},{"Kind":"Components.Component","Name":"SelectionPattern","TypeName":"Syncfusion.Blazor.Charts.SelectionPattern","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.SelectionPattern\">\r\n            <summary>\r\n            Gets and sets the selection pattern of the chart component.\r\n            </summary>\r\n            <value>\r\n            The selection pattern for the series or data point in the chart.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.SelectionPattern","Common.PropertyName":"SelectionPattern"}},{"Kind":"Components.Component","Name":"HighlightPattern","TypeName":"Syncfusion.Blazor.Charts.SelectionPattern","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.HighlightPattern\">\r\n            <summary>\r\n            Gets and sets the highlight pattern of the chart component.\r\n            </summary>\r\n            <value>\r\n            The highlighting pattern for the series or data point in the chart.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.SelectionPattern","Common.PropertyName":"HighlightPattern"}},{"Kind":"Components.Component","Name":"IsMultiSelect","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.IsMultiSelect\">\r\n            <summary>\r\n            Option for enable the multi select of the chart component.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the multiple selection can be enabled. Otherwise, <c>false</c>. The default value is <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsMultiSelect"}},{"Kind":"Components.Component","Name":"AllowMultiSelection","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.AllowMultiSelection\">\r\n            <summary>\r\n            Option for enable to allow the multi select of the chart component.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the multiple selection can be enabled. Otherwise, <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowMultiSelection"}},{"Kind":"Components.Component","Name":"UseGroupingSeparator","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.UseGroupingSeparator\">\r\n            <summary>\r\n            Option for enable the group separator for yaxis label.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the grouping separator can be enabled. Otherwise, <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"UseGroupingSeparator"}},{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.Description\">\r\n            <summary>\r\n            Gets and sets the access text for chart title.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Description"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.TabIndex\">\r\n            <summary>\r\n            Gets and sets the tabIndex for chart title.\r\n            </summary>\r\n            <value>\r\n            A double value representing the tab index of chart. The default value is <c>0</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"EnableAnimation","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.EnableAnimation\">\r\n            <summary>\r\n            Option for enable the animation for chart.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the animation can be enabled. Otherwise, <c>false</c>. The default value is <c>true</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableAnimation"}},{"Kind":"Components.Component","Name":"CustomClass","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.CustomClass\">\r\n            <summary>\r\n            Gets and sets the custom class for the chart.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value. The default value is empty.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"CustomClass"}},{"Kind":"Components.Component","Name":"IsStockChart","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.IsStockChart\">\r\n            <exclude />\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsStockChart"}},{"Kind":"Components.Component","Name":"StockEventsRender","TypeName":"System.Action<Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.StockEventsRender\">\r\n            <exclude />\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"StockEventsRender"}},{"Kind":"Components.Component","Name":"GetTooltipTop","TypeName":"System.Func<System.Double>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.GetTooltipTop\">\r\n            <exclude />\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::System.Double>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"GetTooltipTop"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.SfChart","Common.TypeNameIdentifier":"SfChart"}},{"HashCode":-1085851237,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.SfChart","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.SfChart"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Height","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.Height\">\r\n            <summary>\r\n            The height of the chart as a string accepts input both as '100px' or '100%'.\r\n            If specified as '100%, chart renders to the full height of its parent element.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value. The default value is <c>100%</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.Width\">\r\n            <summary>\r\n            The width of the chart as a string accepts input as both like '100px' or '100%'.\r\n            If specified as '100%, chart renders to the full width of its parent element.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Title","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.Title\">\r\n            <summary>\r\n            Gets and sets the title of the chart component.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Title"}},{"Kind":"Components.Component","Name":"SubTitle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.SubTitle\">\r\n            <summary>\r\n            Gets and sets the sub title of the chart component.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value. The default value is empty.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"SubTitle"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.ID\">\r\n            <summary>\r\n            Defines id of the chart component.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"IsTransposed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.IsTransposed\">\r\n            <summary>\r\n            Gets and sets whether the chart should be render in transposed manner or not.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the transposed can be enabled. Otherwise, <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsTransposed"}},{"Kind":"Components.Component","Name":"Theme","TypeName":"Syncfusion.Blazor.Theme","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.Theme\">\r\n            <summary>\r\n            Gets and sets the theme for the chart.\r\n            </summary>\r\n            <value>\r\n            Accepts the value from the <see cref=\"P:Syncfusion.Blazor.Charts.SfChart.Theme\" /> enum.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Theme","Common.PropertyName":"Theme"}},{"Kind":"Components.Component","Name":"Palettes","TypeName":"System.String[]","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.Palettes\">\r\n            <summary>\r\n            Gets and sets the palette for the chart series.\r\n            </summary>\r\n            <value>\r\n            Accepts the string array that specifies the palette for chart series.    \r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String[]","Common.PropertyName":"Palettes"}},{"Kind":"Components.Component","Name":"DataSource","TypeName":"System.Collections.Generic.IEnumerable<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.DataSource\">\r\n            <summary>\r\n            Specifies the DataSource for the chart. It can be an array of JSON objects or an instance of DataManager.\r\n            </summary>\r\n            <value>\r\n            An array of objects or an instance of DataManager that represents the data source for the chart.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Object>","Common.PropertyName":"DataSource"}},{"Kind":"Components.Component","Name":"Query","TypeName":"Syncfusion.Blazor.Data.Query","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.Query\">\r\n            <summary>\r\n            Specifies query to select data from DataSource. This property is applicable only when the DataSource is `SfDataManager`.\r\n            </summary>\r\n            <value>\r\n            An object of the type <see cref=\"P:Syncfusion.Blazor.Charts.SfChart.Query\" /> that represents the query to be selected the data from data source.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Data.Query","Common.PropertyName":"Query"}},{"Kind":"Components.Component","Name":"Background","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.Background\">\r\n            <summary>\r\n            Gets and sets the background color of the chart that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value that specifies the background color of the chart.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Background"}},{"Kind":"Components.Component","Name":"EnableRtl","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.EnableRtl\">\r\n            <summary>\r\n            Gets or sets the right to left direction that defines the text writing and user interface (UI) elements direction in layout.\r\n            </summary>\r\n            <value> \r\n            <c>true</c>, if the right to left direction can be enabled for chart component. Otherwise, <c>false</c>. The default value is <c>false</c>.\r\n            </value> \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableRtl"}},{"Kind":"Components.Component","Name":"EnableSideBySidePlacement","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.EnableSideBySidePlacement\">\r\n            <summary>\r\n            Option for enable the side by side placement.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the side by side placement can be enabled. Otherwise, <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableSideBySidePlacement"}},{"Kind":"Components.Component","Name":"EnableAutoIntervalOnBothAxis","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.EnableAutoIntervalOnBothAxis\">\r\n            <summary>\r\n            Gets and sets both axis interval will be calculated automatically with respect to the zoomed range.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, the intervals for both axes will be calculated automatically based on the zoom range. Otherwise, <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableAutoIntervalOnBothAxis"}},{"Kind":"Components.Component","Name":"BackgroundImage","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.BackgroundImage\">\r\n            <summary>\r\n            Gets and sets the background image for chart.\r\n            </summary>\r\n            <value>\r\n            A string representing the URL or path to the background image. The default value is empty.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"BackgroundImage"}},{"Kind":"Components.Component","Name":"HighlightColor","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.HighlightColor\">\r\n            <summary>\r\n            Gets and sets the highlight color for the data point when user hover the data point. \r\n            </summary>\r\n            <value>\r\n            Accepts the string value.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"HighlightColor"}},{"Kind":"Components.Component","Name":"SelectionMode","TypeName":"Syncfusion.Blazor.Charts.SelectionMode","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.SelectionMode\">\r\n            <summary>\r\n            Gets and sets the selection mode of the chart component.\r\n            </summary>\r\n            <value>\r\n            One of the <see cref=\"P:Syncfusion.Blazor.Charts.SfChart.SelectionMode\" /> enumeration values that specifies the mode of selection in chart component.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.SelectionMode","Common.PropertyName":"SelectionMode"}},{"Kind":"Components.Component","Name":"HighlightMode","TypeName":"Syncfusion.Blazor.Charts.HighlightMode","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.HighlightMode\">\r\n            <summary>\r\n            Gets and sets the highlight mode of the chart component.\r\n            </summary>\r\n            <value>\r\n            The highlight mode of the chart component.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.HighlightMode","Common.PropertyName":"HighlightMode"}},{"Kind":"Components.Component","Name":"SelectionPattern","TypeName":"Syncfusion.Blazor.Charts.SelectionPattern","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.SelectionPattern\">\r\n            <summary>\r\n            Gets and sets the selection pattern of the chart component.\r\n            </summary>\r\n            <value>\r\n            The selection pattern for the series or data point in the chart.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.SelectionPattern","Common.PropertyName":"SelectionPattern"}},{"Kind":"Components.Component","Name":"HighlightPattern","TypeName":"Syncfusion.Blazor.Charts.SelectionPattern","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.HighlightPattern\">\r\n            <summary>\r\n            Gets and sets the highlight pattern of the chart component.\r\n            </summary>\r\n            <value>\r\n            The highlighting pattern for the series or data point in the chart.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.SelectionPattern","Common.PropertyName":"HighlightPattern"}},{"Kind":"Components.Component","Name":"IsMultiSelect","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.IsMultiSelect\">\r\n            <summary>\r\n            Option for enable the multi select of the chart component.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the multiple selection can be enabled. Otherwise, <c>false</c>. The default value is <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsMultiSelect"}},{"Kind":"Components.Component","Name":"AllowMultiSelection","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.AllowMultiSelection\">\r\n            <summary>\r\n            Option for enable to allow the multi select of the chart component.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the multiple selection can be enabled. Otherwise, <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"AllowMultiSelection"}},{"Kind":"Components.Component","Name":"UseGroupingSeparator","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.UseGroupingSeparator\">\r\n            <summary>\r\n            Option for enable the group separator for yaxis label.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the grouping separator can be enabled. Otherwise, <c>false</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"UseGroupingSeparator"}},{"Kind":"Components.Component","Name":"Description","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.Description\">\r\n            <summary>\r\n            Gets and sets the access text for chart title.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Description"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.TabIndex\">\r\n            <summary>\r\n            Gets and sets the tabIndex for chart title.\r\n            </summary>\r\n            <value>\r\n            A double value representing the tab index of chart. The default value is <c>0</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"EnableAnimation","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.EnableAnimation\">\r\n            <summary>\r\n            Option for enable the animation for chart.\r\n            </summary>\r\n            <value>\r\n            <c>true</c>, if the animation can be enabled. Otherwise, <c>false</c>. The default value is <c>true</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableAnimation"}},{"Kind":"Components.Component","Name":"CustomClass","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.CustomClass\">\r\n            <summary>\r\n            Gets and sets the custom class for the chart.\r\n            </summary>\r\n            <value>\r\n            Accepts the string value. The default value is empty.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"CustomClass"}},{"Kind":"Components.Component","Name":"IsStockChart","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.IsStockChart\">\r\n            <exclude />\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsStockChart"}},{"Kind":"Components.Component","Name":"StockEventsRender","TypeName":"System.Action<Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.StockEventsRender\">\r\n            <exclude />\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Action<global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"StockEventsRender"}},{"Kind":"Components.Component","Name":"GetTooltipTop","TypeName":"System.Func<System.Double>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.SfChart.GetTooltipTop\">\r\n            <exclude />\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Func<global::System.Double>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"False","Common.PropertyName":"GetTooltipTop"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.SfChart","Common.TypeNameIdentifier":"SfChart"}},{"HashCode":-1338005768,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.SfChart.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfChart"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.SfChart.ChildContent","Common.TypeNameIdentifier":"SfChart"}},{"HashCode":-185116743,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.SfChart.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.SfChart"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.SfChart.ChildContent","Common.TypeNameIdentifier":"SfChart"}},{"HashCode":53236794,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartDataBoundComponent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartDataBoundComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataBoundComponent","Common.TypeNameIdentifier":"ChartDataBoundComponent"}},{"HashCode":-446762202,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartDataBoundComponent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartDataBoundComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataBoundComponent","Common.TypeNameIdentifier":"ChartDataBoundComponent"}},{"HashCode":198697735,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartDataBoundComponent.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartDataBoundComponent"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataBoundComponent.ChildContent","Common.TypeNameIdentifier":"ChartDataBoundComponent"}},{"HashCode":-561528372,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartDataBoundComponent.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartDataBoundComponent"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataBoundComponent.ChildContent","Common.TypeNameIdentifier":"ChartDataBoundComponent"}},{"HashCode":-69195607,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartDataEditSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartDataEditSettings\">\r\n            <summary>\r\n            Options to customize the drag settings for series.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartDataEditSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataEditSettings.Enable\">\r\n            <summary>\r\n            To enable the drag the points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataEditSettings.Fill\">\r\n            <summary>\r\n            To set the color of the edited point.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"MaxY","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataEditSettings.MaxY\">\r\n            <summary>\r\n            To set the maximum y of the point.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MaxY"}},{"Kind":"Components.Component","Name":"MinY","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataEditSettings.MinY\">\r\n            <summary>\r\n            To set the minimum y of the point.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MinY"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataEditSettings","Common.TypeNameIdentifier":"ChartDataEditSettings"}},{"HashCode":969938693,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartDataEditSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartDataEditSettings\">\r\n            <summary>\r\n            Options to customize the drag settings for series.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartDataEditSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataEditSettings.Enable\">\r\n            <summary>\r\n            To enable the drag the points.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataEditSettings.Fill\">\r\n            <summary>\r\n            To set the color of the edited point.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"MaxY","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataEditSettings.MaxY\">\r\n            <summary>\r\n            To set the maximum y of the point.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MaxY"}},{"Kind":"Components.Component","Name":"MinY","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartDataEditSettings.MinY\">\r\n            <summary>\r\n            To set the minimum y of the point.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"MinY"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataEditSettings","Common.TypeNameIdentifier":"ChartDataEditSettings"}},{"HashCode":509310809,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartDataEditSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartDataEditSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataEditSettings.ChildContent","Common.TypeNameIdentifier":"ChartDataEditSettings"}},{"HashCode":1206421715,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartDataEditSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartDataEditSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartDataEditSettings.ChildContent","Common.TypeNameIdentifier":"ChartDataEditSettings"}},{"HashCode":-1606746913,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartZoomSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartZoomSettings\">\r\n            <summary>\r\n            Options to customize the zoom settings of the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartZoomSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"EnableDeferredZooming","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartZoomSettings.EnableDeferredZooming\">\r\n             <summary>\r\n             If set to true, zooming will be performed on mouse up. It requires `EnableSelectionZooming` to be true.\r\n            \r\n             </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableDeferredZooming"}},{"Kind":"Components.Component","Name":"EnableMouseWheelZooming","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartZoomSettings.EnableMouseWheelZooming\">\r\n            <summary>\r\n            If set to true, chart can be zoomed by using mouse wheel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableMouseWheelZooming"}},{"Kind":"Components.Component","Name":"EnablePan","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartZoomSettings.EnablePan\">\r\n            <summary>\r\n            Specifies whether chart needs to be panned by default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnablePan"}},{"Kind":"Components.Component","Name":"EnablePinchZooming","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartZoomSettings.EnablePinchZooming\">\r\n            <summary>\r\n            If to true, chart can be pinched to zoom in / zoom out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnablePinchZooming"}},{"Kind":"Components.Component","Name":"EnableScrollbar","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartZoomSettings.EnableScrollbar\">\r\n            <summary>\r\n            Specifies whether axis needs to have scrollbar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableScrollbar"}},{"Kind":"Components.Component","Name":"EnableSelectionZooming","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartZoomSettings.EnableSelectionZooming\">\r\n            <summary>\r\n            If set to true, chart can be zoomed by a rectangular selecting region on the plot area.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableSelectionZooming"}},{"Kind":"Components.Component","Name":"Mode","TypeName":"Syncfusion.Blazor.Charts.ZoomMode","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartZoomSettings.Mode\">\r\n            <summary>\r\n            Specifies whether to allow zooming vertically or horizontally or in both ways. They are,\r\n            x,y: Chart can be zoomed both vertically and horizontally.\r\n            x: Chart can be zoomed horizontally.\r\n            y: Chart can be zoomed  vertically.\r\n            It requires `EnableSelectionZooming` to be true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ZoomMode","Common.PropertyName":"Mode"}},{"Kind":"Components.Component","Name":"ToolbarDisplayMode","TypeName":"Syncfusion.Blazor.Charts.ToolbarMode","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartZoomSettings.ToolbarDisplayMode\">\r\n            <summary>\r\n            Gets and sets the zooming toolbar visibility for the chart. The available modes are,\r\n            OnDemand: The zooming toolbar items are only visible while the chart has zoomed.\r\n            Always: The zooming toolbar items are always visible even though the chart has not zoomed.\r\n            None: The zooming toolbar items will not be visible even though the chart is zoomed.\r\n            </summary>\r\n            <value>\r\n            Customize the zooming toolbar items visibility. The default value is <see cref=\"F:Syncfusion.Blazor.Charts.ToolbarMode.OnDemand\" />\r\n            </value> \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ToolbarMode","Common.PropertyName":"ToolbarDisplayMode"}},{"Kind":"Components.Component","Name":"ToolbarItems","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Charts.ToolbarItems>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartZoomSettings.ToolbarItems\">\r\n            <summary>\r\n            Specifies the toolkit options for the zooming as follows:\r\n            Zoom\r\n            ZoomIn\r\n            ZoomOut\r\n            Pan\r\n            Reset.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.Charts.ToolbarItems>","Common.PropertyName":"ToolbarItems"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartZoomSettings","Common.TypeNameIdentifier":"ChartZoomSettings"}},{"HashCode":1926690244,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartZoomSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartZoomSettings\">\r\n            <summary>\r\n            Options to customize the zoom settings of the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartZoomSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"EnableDeferredZooming","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartZoomSettings.EnableDeferredZooming\">\r\n             <summary>\r\n             If set to true, zooming will be performed on mouse up. It requires `EnableSelectionZooming` to be true.\r\n            \r\n             </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableDeferredZooming"}},{"Kind":"Components.Component","Name":"EnableMouseWheelZooming","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartZoomSettings.EnableMouseWheelZooming\">\r\n            <summary>\r\n            If set to true, chart can be zoomed by using mouse wheel.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableMouseWheelZooming"}},{"Kind":"Components.Component","Name":"EnablePan","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartZoomSettings.EnablePan\">\r\n            <summary>\r\n            Specifies whether chart needs to be panned by default.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnablePan"}},{"Kind":"Components.Component","Name":"EnablePinchZooming","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartZoomSettings.EnablePinchZooming\">\r\n            <summary>\r\n            If to true, chart can be pinched to zoom in / zoom out.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnablePinchZooming"}},{"Kind":"Components.Component","Name":"EnableScrollbar","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartZoomSettings.EnableScrollbar\">\r\n            <summary>\r\n            Specifies whether axis needs to have scrollbar.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableScrollbar"}},{"Kind":"Components.Component","Name":"EnableSelectionZooming","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartZoomSettings.EnableSelectionZooming\">\r\n            <summary>\r\n            If set to true, chart can be zoomed by a rectangular selecting region on the plot area.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableSelectionZooming"}},{"Kind":"Components.Component","Name":"Mode","TypeName":"Syncfusion.Blazor.Charts.ZoomMode","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartZoomSettings.Mode\">\r\n            <summary>\r\n            Specifies whether to allow zooming vertically or horizontally or in both ways. They are,\r\n            x,y: Chart can be zoomed both vertically and horizontally.\r\n            x: Chart can be zoomed horizontally.\r\n            y: Chart can be zoomed  vertically.\r\n            It requires `EnableSelectionZooming` to be true.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ZoomMode","Common.PropertyName":"Mode"}},{"Kind":"Components.Component","Name":"ToolbarDisplayMode","TypeName":"Syncfusion.Blazor.Charts.ToolbarMode","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartZoomSettings.ToolbarDisplayMode\">\r\n            <summary>\r\n            Gets and sets the zooming toolbar visibility for the chart. The available modes are,\r\n            OnDemand: The zooming toolbar items are only visible while the chart has zoomed.\r\n            Always: The zooming toolbar items are always visible even though the chart has not zoomed.\r\n            None: The zooming toolbar items will not be visible even though the chart is zoomed.\r\n            </summary>\r\n            <value>\r\n            Customize the zooming toolbar items visibility. The default value is <see cref=\"F:Syncfusion.Blazor.Charts.ToolbarMode.OnDemand\" />\r\n            </value> \r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ToolbarMode","Common.PropertyName":"ToolbarDisplayMode"}},{"Kind":"Components.Component","Name":"ToolbarItems","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Charts.ToolbarItems>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartZoomSettings.ToolbarItems\">\r\n            <summary>\r\n            Specifies the toolkit options for the zooming as follows:\r\n            Zoom\r\n            ZoomIn\r\n            ZoomOut\r\n            Pan\r\n            Reset.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.Charts.ToolbarItems>","Common.PropertyName":"ToolbarItems"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartZoomSettings","Common.TypeNameIdentifier":"ChartZoomSettings"}},{"HashCode":-569186901,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartZoomSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartZoomSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartZoomSettings.ChildContent","Common.TypeNameIdentifier":"ChartZoomSettings"}},{"HashCode":-802232094,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartZoomSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartZoomSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartZoomSettings.ChildContent","Common.TypeNameIdentifier":"ChartZoomSettings"}},{"HashCode":666374963,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip\">\r\n            <summary>\r\n            Options to customize the axis's crosshair tooltip.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartAxisCrosshairTooltip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip.Enable\">\r\n            <summary>\r\n            If set to true, crosshair ToolTip will be visible.\r\n            @default false.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip.Fill\">\r\n            <summary>\r\n            The fill color of the ToolTip accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"TextStyle","TypeName":"Syncfusion.Blazor.Charts.ChartCrosshairTextStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip.TextStyle\">\r\n            <summary>\r\n            Options to customize the crosshair ToolTip text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartCrosshairTextStyle","Common.PropertyName":"TextStyle"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip","Common.TypeNameIdentifier":"ChartAxisCrosshairTooltip"}},{"HashCode":1026139072,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip\">\r\n            <summary>\r\n            Options to customize the axis's crosshair tooltip.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip.Enable\">\r\n            <summary>\r\n            If set to true, crosshair ToolTip will be visible.\r\n            @default false.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip.Fill\">\r\n            <summary>\r\n            The fill color of the ToolTip accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"TextStyle","TypeName":"Syncfusion.Blazor.Charts.ChartCrosshairTextStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip.TextStyle\">\r\n            <summary>\r\n            Options to customize the crosshair ToolTip text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartCrosshairTextStyle","Common.PropertyName":"TextStyle"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip","Common.TypeNameIdentifier":"ChartAxisCrosshairTooltip"}},{"HashCode":-513387787,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartAxisCrosshairTooltip"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip.ChildContent","Common.TypeNameIdentifier":"ChartAxisCrosshairTooltip"}},{"HashCode":1141054115,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartAxisCrosshairTooltip.ChildContent","Common.TypeNameIdentifier":"ChartAxisCrosshairTooltip"}},{"HashCode":355944076,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartCrosshairLine","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartCrosshairLine\">\r\n            <summary>\r\n            Options to customize the crosshair line of the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartCrosshairLine"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Width\">\r\n            <summary>\r\n            Sets and gets the the width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCrosshairLine","Common.TypeNameIdentifier":"ChartCrosshairLine"}},{"HashCode":-2001608448,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartCrosshairLine","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartCrosshairLine\">\r\n            <summary>\r\n            Options to customize the crosshair line of the chart.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartCrosshairLine"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Width\">\r\n            <summary>\r\n            Sets and gets the the width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCrosshairLine","Common.TypeNameIdentifier":"ChartCrosshairLine"}},{"HashCode":-1791169011,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartCrosshairLine.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartCrosshairLine"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCrosshairLine.ChildContent","Common.TypeNameIdentifier":"ChartCrosshairLine"}},{"HashCode":165141755,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartCrosshairLine.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartCrosshairLine"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCrosshairLine.ChildContent","Common.TypeNameIdentifier":"ChartCrosshairLine"}},{"HashCode":-1141754501,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartCrosshairSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartCrosshairSettings\">\r\n            <summary>\r\n            Options to customize the crosshair for the charts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartCrosshairSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCrosshairSettings.DashArray\">\r\n            <summary>\r\n            Specifies the dashArray for crosshair.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCrosshairSettings.Enable\">\r\n            <summary>\r\n            If set to true, crosshair line becomes visible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}},{"Kind":"Components.Component","Name":"Line","TypeName":"Syncfusion.Blazor.Charts.ChartCrosshairLine","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCrosshairSettings.Line\">\r\n            <summary>\r\n            Options to customize the crosshair line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartCrosshairLine","Common.PropertyName":"Line"}},{"Kind":"Components.Component","Name":"LineType","TypeName":"Syncfusion.Blazor.Charts.LineType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCrosshairSettings.LineType\">\r\n            <summary>\r\n            Specifies the line type. Horizontal mode enables the horizontal line and Vertical mode enables the vertical line. They are,\r\n            None: Hides both vertical and horizontal crosshair lines.\r\n            Both: Shows both vertical and horizontal crosshair lines.\r\n            Vertical: Shows the vertical line.\r\n            Horizontal: Shows the horizontal line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LineType","Common.PropertyName":"LineType"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCrosshairSettings","Common.TypeNameIdentifier":"ChartCrosshairSettings"}},{"HashCode":-1434766745,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartCrosshairSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartCrosshairSettings\">\r\n            <summary>\r\n            Options to customize the crosshair for the charts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartCrosshairSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCrosshairSettings.DashArray\">\r\n            <summary>\r\n            Specifies the dashArray for crosshair.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCrosshairSettings.Enable\">\r\n            <summary>\r\n            If set to true, crosshair line becomes visible.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}},{"Kind":"Components.Component","Name":"Line","TypeName":"Syncfusion.Blazor.Charts.ChartCrosshairLine","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCrosshairSettings.Line\">\r\n            <summary>\r\n            Options to customize the crosshair line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartCrosshairLine","Common.PropertyName":"Line"}},{"Kind":"Components.Component","Name":"LineType","TypeName":"Syncfusion.Blazor.Charts.LineType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCrosshairSettings.LineType\">\r\n            <summary>\r\n            Specifies the line type. Horizontal mode enables the horizontal line and Vertical mode enables the vertical line. They are,\r\n            None: Hides both vertical and horizontal crosshair lines.\r\n            Both: Shows both vertical and horizontal crosshair lines.\r\n            Vertical: Shows the vertical line.\r\n            Horizontal: Shows the horizontal line.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.LineType","Common.PropertyName":"LineType"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCrosshairSettings","Common.TypeNameIdentifier":"ChartCrosshairSettings"}},{"HashCode":-1539912614,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartCrosshairSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartCrosshairSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCrosshairSettings.ChildContent","Common.TypeNameIdentifier":"ChartCrosshairSettings"}},{"HashCode":-1665631275,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartCrosshairSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartCrosshairSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCrosshairSettings.ChildContent","Common.TypeNameIdentifier":"ChartCrosshairSettings"}},{"HashCode":1153899287,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartCrosshairTextStyle","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartCrosshairTextStyle\">\r\n            <summary>\r\n            Options to cusomize the tooltip text style of the crosshair tooltip.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartCrosshairTextStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCrosshairTextStyle.Color\">\r\n            <summary>\r\n            Color for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCrosshairTextStyle.Size\">\r\n            <summary>\r\n            Font size for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontFamily\">\r\n            <summary>\r\n            Sets and gets the font family for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontWeight\">\r\n            <summary>\r\n            Sets and gets the font weight for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCrosshairTextStyle","Common.TypeNameIdentifier":"ChartCrosshairTextStyle"}},{"HashCode":-1790739503,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartCrosshairTextStyle","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartCrosshairTextStyle\">\r\n            <summary>\r\n            Options to cusomize the tooltip text style of the crosshair tooltip.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartCrosshairTextStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCrosshairTextStyle.Color\">\r\n            <summary>\r\n            Color for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCrosshairTextStyle.Size\">\r\n            <summary>\r\n            Font size for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontFamily\">\r\n            <summary>\r\n            Sets and gets the font family for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontWeight\">\r\n            <summary>\r\n            Sets and gets the font weight for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCrosshairTextStyle","Common.TypeNameIdentifier":"ChartCrosshairTextStyle"}},{"HashCode":1051049560,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartCrosshairTextStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartCrosshairTextStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCrosshairTextStyle.ChildContent","Common.TypeNameIdentifier":"ChartCrosshairTextStyle"}},{"HashCode":-1233033930,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartCrosshairTextStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartCrosshairTextStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCrosshairTextStyle.ChildContent","Common.TypeNameIdentifier":"ChartCrosshairTextStyle"}},{"HashCode":942138789,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartSelectedDataIndex","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartSelectedDataIndex\">\r\n            <summary>\r\n            SelectedData in the chart appears inimitable from the rest of the data points.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartSelectedDataIndex"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Series","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData.Series\">\r\n            <summary>\r\n            Sets and gets the series index for the seleceted data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Series"}},{"Kind":"Components.Component","Name":"Point","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData.Point\">\r\n            <summary>\r\n            Sets and gets the point index for the seleceted data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Point"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSelectedDataIndex","Common.TypeNameIdentifier":"ChartSelectedDataIndex"}},{"HashCode":-1727078939,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartSelectedDataIndex","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartSelectedDataIndex\">\r\n            <summary>\r\n            SelectedData in the chart appears inimitable from the rest of the data points.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartSelectedDataIndex"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Series","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData.Series\">\r\n            <summary>\r\n            Sets and gets the series index for the seleceted data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Series"}},{"Kind":"Components.Component","Name":"Point","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData.Point\">\r\n            <summary>\r\n            Sets and gets the point index for the seleceted data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Point"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSelectedDataIndex","Common.TypeNameIdentifier":"ChartSelectedDataIndex"}},{"HashCode":-279474690,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartSelectedDataIndex.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartSelectedDataIndex"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSelectedDataIndex.ChildContent","Common.TypeNameIdentifier":"ChartSelectedDataIndex"}},{"HashCode":971060367,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartSelectedDataIndex.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartSelectedDataIndex"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSelectedDataIndex.ChildContent","Common.TypeNameIdentifier":"ChartSelectedDataIndex"}},{"HashCode":-209517889,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartSelectedDataIndexes","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartSelectedDataIndexes\">\r\n            <summary>\r\n            SelectedData in the chart appears inimitable from the rest of the data points.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartSelectedDataIndexes"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSelectedDataIndexes","Common.TypeNameIdentifier":"ChartSelectedDataIndexes"}},{"HashCode":1327945063,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartSelectedDataIndexes","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartSelectedDataIndexes\">\r\n            <summary>\r\n            SelectedData in the chart appears inimitable from the rest of the data points.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartSelectedDataIndexes"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSelectedDataIndexes","Common.TypeNameIdentifier":"ChartSelectedDataIndexes"}},{"HashCode":-1233579711,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartSelectedDataIndexes.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartSelectedDataIndexes"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSelectedDataIndexes.ChildContent","Common.TypeNameIdentifier":"ChartSelectedDataIndexes"}},{"HashCode":-466651666,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartSelectedDataIndexes.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartSelectedDataIndexes"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartSelectedDataIndexes.ChildContent","Common.TypeNameIdentifier":"ChartSelectedDataIndexes"}},{"HashCode":-1794998370,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartTooltipBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartTooltipBorder\">\r\n            <summary>\r\n            Options to customize the border of the tooltip.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartTooltipBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipBorder.Width\">\r\n            <summary>\r\n            Sets and gets the border width for the tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTooltipBorder","Common.TypeNameIdentifier":"ChartTooltipBorder"}},{"HashCode":-537902031,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartTooltipBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartTooltipBorder\">\r\n            <summary>\r\n            Options to customize the border of the tooltip.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartTooltipBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipBorder.Width\">\r\n            <summary>\r\n            Sets and gets the border width for the tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTooltipBorder","Common.TypeNameIdentifier":"ChartTooltipBorder"}},{"HashCode":-1944482091,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartTooltipBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartTooltipBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTooltipBorder.ChildContent","Common.TypeNameIdentifier":"ChartTooltipBorder"}},{"HashCode":2100391331,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartTooltipBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartTooltipBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTooltipBorder.ChildContent","Common.TypeNameIdentifier":"ChartTooltipBorder"}},{"HashCode":-1110188151,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartTooltipSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartTooltipSettings\">\r\n            <summary>\r\n            Options to customize the tooltip.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartTooltipSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartTooltipBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.Border\">\r\n            <summary>\r\n            Options to customize tooltip borders.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartTooltipBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.Duration\">\r\n            <summary>\r\n            Duration for the ToolTip animation.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.Enable\">\r\n            <summary>\r\n            Enables / Disables the visibility of the tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}},{"Kind":"Components.Component","Name":"EnableAnimation","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.EnableAnimation\">\r\n            <summary>\r\n            If set to true, ToolTip will animate while moving from one point to another.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableAnimation"}},{"Kind":"Components.Component","Name":"EnableMarker","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.EnableMarker\">\r\n            <summary>\r\n            Enables / Disables the visibility of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableMarker"}},{"Kind":"Components.Component","Name":"EnableTextWrap","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.EnableTextWrap\">\r\n            <summary>\r\n            To wrap the tooltip long text based on available space.\r\n            This is only application for chart tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableTextWrap"}},{"Kind":"Components.Component","Name":"FadeOutDuration","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.FadeOutDuration\">\r\n            <summary>\r\n            Fade Out duration for the ToolTip hide.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"FadeOutDuration"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.Fill\">\r\n            <summary>\r\n            The fill color of the tooltip that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.Format\">\r\n            <summary>\r\n            Format the ToolTip content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.Header\">\r\n            <summary>\r\n            Header for tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.Opacity\">\r\n            <summary>\r\n            The fill color of the tooltip that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Shared","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.Shared\">\r\n            <summary>\r\n            If set to true, a single ToolTip will be displayed for every index.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Shared"}},{"Kind":"Components.Component","Name":"ShowNearestPoint","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.ShowNearestPoint\">\r\n            <summary>\r\n            Gets or sets the option to toggle the visibility of the nearest points values for all visible series in the shared tooltip.\r\n            </summary>\r\n            <value>\r\n            <b>true</b> If the values of the nearest points are allowed to be shown in the tooltip; otherwise, <b>false</b>.The default value is <b>false</b>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ShowNearestPoint"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.Template\">\r\n            <summary>\r\n            Custom template to format the ToolTip content. Use ${x} and ${y} as the placeholder text to display the corresponding data point.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Object>","Common.PropertyName":"Template"}},{"Kind":"Components.Component","Name":"TextStyle","TypeName":"Syncfusion.Blazor.Charts.ChartTooltipTextStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.TextStyle\">\r\n            <summary>\r\n            Options to customize the ToolTip text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartTooltipTextStyle","Common.PropertyName":"TextStyle"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTooltipSettings","Common.TypeNameIdentifier":"ChartTooltipSettings"}},{"HashCode":-2069439340,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartTooltipSettings","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartTooltipSettings\">\r\n            <summary>\r\n            Options to customize the tooltip.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartTooltipSettings"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Border","TypeName":"Syncfusion.Blazor.Charts.ChartTooltipBorder","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.Border\">\r\n            <summary>\r\n            Options to customize tooltip borders.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartTooltipBorder","Common.PropertyName":"Border"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.Duration\">\r\n            <summary>\r\n            Duration for the ToolTip animation.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.Enable\">\r\n            <summary>\r\n            Enables / Disables the visibility of the tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}},{"Kind":"Components.Component","Name":"EnableAnimation","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.EnableAnimation\">\r\n            <summary>\r\n            If set to true, ToolTip will animate while moving from one point to another.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableAnimation"}},{"Kind":"Components.Component","Name":"EnableMarker","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.EnableMarker\">\r\n            <summary>\r\n            Enables / Disables the visibility of the marker.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableMarker"}},{"Kind":"Components.Component","Name":"EnableTextWrap","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.EnableTextWrap\">\r\n            <summary>\r\n            To wrap the tooltip long text based on available space.\r\n            This is only application for chart tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableTextWrap"}},{"Kind":"Components.Component","Name":"FadeOutDuration","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.FadeOutDuration\">\r\n            <summary>\r\n            Fade Out duration for the ToolTip hide.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"FadeOutDuration"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.Fill\">\r\n            <summary>\r\n            The fill color of the tooltip that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Format","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.Format\">\r\n            <summary>\r\n            Format the ToolTip content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Format"}},{"Kind":"Components.Component","Name":"Header","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.Header\">\r\n            <summary>\r\n            Header for tooltip.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Header"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.Opacity\">\r\n            <summary>\r\n            The fill color of the tooltip that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Shared","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.Shared\">\r\n            <summary>\r\n            If set to true, a single ToolTip will be displayed for every index.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Shared"}},{"Kind":"Components.Component","Name":"ShowNearestPoint","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.ShowNearestPoint\">\r\n            <summary>\r\n            Gets or sets the option to toggle the visibility of the nearest points values for all visible series in the shared tooltip.\r\n            </summary>\r\n            <value>\r\n            <b>true</b> If the values of the nearest points are allowed to be shown in the tooltip; otherwise, <b>false</b>.The default value is <b>false</b>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"ShowNearestPoint"}},{"Kind":"Components.Component","Name":"Template","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.Template\">\r\n            <summary>\r\n            Custom template to format the ToolTip content. Use ${x} and ${y} as the placeholder text to display the corresponding data point.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Object>","Common.PropertyName":"Template"}},{"Kind":"Components.Component","Name":"TextStyle","TypeName":"Syncfusion.Blazor.Charts.ChartTooltipTextStyle","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.TextStyle\">\r\n            <summary>\r\n            Options to customize the ToolTip text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartTooltipTextStyle","Common.PropertyName":"TextStyle"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTooltipSettings","Common.TypeNameIdentifier":"ChartTooltipSettings"}},{"HashCode":1452202978,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartTooltipSettings.Template","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.Template\">\r\n            <summary>\r\n            Custom template to format the ToolTip content. Use ${x} and ${y} as the placeholder text to display the corresponding data point.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"ChartTooltipSettings"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Template' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTooltipSettings.Template","Common.TypeNameIdentifier":"ChartTooltipSettings"}},{"HashCode":-121919924,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartTooltipSettings.Template","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipSettings.Template\">\r\n            <summary>\r\n            Custom template to format the ToolTip content. Use ${x} and ${y} as the placeholder text to display the corresponding data point.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Template","ParentTag":"Syncfusion.Blazor.Charts.ChartTooltipSettings"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Template' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTooltipSettings.Template","Common.TypeNameIdentifier":"ChartTooltipSettings"}},{"HashCode":209425118,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartTooltipSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartTooltipSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTooltipSettings.ChildContent","Common.TypeNameIdentifier":"ChartTooltipSettings"}},{"HashCode":-768071467,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartTooltipSettings.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartTooltipSettings"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTooltipSettings.ChildContent","Common.TypeNameIdentifier":"ChartTooltipSettings"}},{"HashCode":-1968125152,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartTooltipTextStyle","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartTooltipTextStyle\">\r\n            <summary>\r\n            Options to customize the text style of the tooltip.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartTooltipTextStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipTextStyle.FontFamily\">\r\n            <summary>\r\n            Unique font family of the tooltip text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipTextStyle.FontWeight\">\r\n            <summary>\r\n            Unique font weight of the tooltip text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipTextStyle.Color\">\r\n            <summary>\r\n            Unique font color of the tooltip text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Size\">\r\n            <summary>\r\n            Sets and gets the size for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTooltipTextStyle","Common.TypeNameIdentifier":"ChartTooltipTextStyle"}},{"HashCode":1384072402,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartTooltipTextStyle","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartTooltipTextStyle\">\r\n            <summary>\r\n            Options to customize the text style of the tooltip.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartTooltipTextStyle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipTextStyle.FontFamily\">\r\n            <summary>\r\n            Unique font family of the tooltip text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipTextStyle.FontWeight\">\r\n            <summary>\r\n            Unique font weight of the tooltip text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartTooltipTextStyle.Color\">\r\n            <summary>\r\n            Unique font color of the tooltip text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Size\">\r\n            <summary>\r\n            Sets and gets the size for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTooltipTextStyle","Common.TypeNameIdentifier":"ChartTooltipTextStyle"}},{"HashCode":361077482,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartTooltipTextStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartTooltipTextStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTooltipTextStyle.ChildContent","Common.TypeNameIdentifier":"ChartTooltipTextStyle"}},{"HashCode":-357462339,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.ChartTooltipTextStyle.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.ChartTooltipTextStyle"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartTooltipTextStyle.ChildContent","Common.TypeNameIdentifier":"ChartTooltipTextStyle"}},{"HashCode":1781719303,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.SelectionStyleComponent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SelectionStyleComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ComponentId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ComponentId"}},{"Kind":"Components.Component","Name":"GivenPattern","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.DataVizCommon.PatternOptions>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.DataVizCommon.PatternOptions>","Common.PropertyName":"GivenPattern"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.SelectionStyleComponent","Common.TypeNameIdentifier":"SelectionStyleComponent"}},{"HashCode":-48785838,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.SelectionStyleComponent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.SelectionStyleComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ComponentId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ComponentId"}},{"Kind":"Components.Component","Name":"GivenPattern","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.DataVizCommon.PatternOptions>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.DataVizCommon.PatternOptions>","Common.PropertyName":"GivenPattern"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.SelectionStyleComponent","Common.TypeNameIdentifier":"SelectionStyleComponent"}},{"HashCode":-726617101,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.LegendBase","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LegendBase"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.LegendBase","Common.TypeNameIdentifier":"LegendBase"}},{"HashCode":1230209116,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.LegendBase","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.LegendBase"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.LegendBase","Common.TypeNameIdentifier":"LegendBase"}},{"HashCode":2129151782,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.LegendBase.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"LegendBase"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.LegendBase.ChildContent","Common.TypeNameIdentifier":"LegendBase"}},{"HashCode":-460594132,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.LegendBase.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.LegendBase"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.LegendBase.ChildContent","Common.TypeNameIdentifier":"LegendBase"}},{"HashCode":-1377381884,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartCommonFont","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartCommonFont\">\r\n            <summary>\r\n            Sets and gets the options for customizing the text style of the chart component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartCommonFont"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Color\">\r\n            <summary>\r\n            Sets and gets the color for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.FontFamily\">\r\n            <summary>\r\n            Sets and gets the font family for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.FontWeight\">\r\n            <summary>\r\n            Sets and gets the font weight for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Size\">\r\n            <summary>\r\n            Sets and gets the size for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCommonFont","Common.TypeNameIdentifier":"ChartCommonFont"}},{"HashCode":1219199280,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.ChartCommonFont","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.ChartCommonFont\">\r\n            <summary>\r\n            Sets and gets the options for customizing the text style of the chart component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.ChartCommonFont"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Color\">\r\n            <summary>\r\n            Sets and gets the color for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.FontFamily\">\r\n            <summary>\r\n            Sets and gets the font family for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.FontWeight\">\r\n            <summary>\r\n            Sets and gets the font weight for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.Size\">\r\n            <summary>\r\n            Sets and gets the size for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.ChartCommonFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.ChartCommonFont","Common.TypeNameIdentifier":"ChartCommonFont"}},{"HashCode":-158258901,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts._Imports","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"_Imports"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts._Imports","Common.TypeNameIdentifier":"_Imports"}},{"HashCode":-108437041,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts._Imports","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts._Imports"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts._Imports","Common.TypeNameIdentifier":"_Imports"}},{"HashCode":765163192,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChart.Internal.AnnotationElements","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AnnotationElements"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.AccumulationChart.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChart.Internal.AnnotationElements","Common.TypeNameIdentifier":"AnnotationElements"}},{"HashCode":261943557,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChart.Internal.AnnotationElements","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChart.Internal.AnnotationElements"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.AccumulationChart.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChart.Internal.AnnotationElements","Common.TypeNameIdentifier":"AnnotationElements"}},{"HashCode":-301814671,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChart.Internal.TemplateDataLabel","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TemplateDataLabel"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.AccumulationChart.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChart.Internal.TemplateDataLabel","Common.TypeNameIdentifier":"TemplateDataLabel"}},{"HashCode":-1786781004,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.AccumulationChart.Internal.TemplateDataLabel","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.AccumulationChart.Internal.TemplateDataLabel"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.AccumulationChart.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.AccumulationChart.Internal.TemplateDataLabel","Common.TypeNameIdentifier":"TemplateDataLabel"}},{"HashCode":-1488226545,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation\">\r\n            <summary>\r\n            Sets and gets the animation options of chart component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartDefaultAnimation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.Delay\">\r\n            <summary>\r\n            Sets and gets the option for animation delay of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.Duration\">\r\n            <summary>\r\n            Sets and gets the duration of animation in milliseconds.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.Enable\">\r\n            <summary>\r\n            Option to series gets animated on initial loading.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation","Common.TypeNameIdentifier":"ChartDefaultAnimation"}},{"HashCode":-407279027,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation\">\r\n            <summary>\r\n            Sets and gets the animation options of chart component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.Delay\">\r\n            <summary>\r\n            Sets and gets the option for animation delay of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.Duration\">\r\n            <summary>\r\n            Sets and gets the duration of animation in milliseconds.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.Enable\">\r\n            <summary>\r\n            Option to series gets animated on initial loading.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation","Common.TypeNameIdentifier":"ChartDefaultAnimation"}},{"HashCode":-311311605,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartDefaultAnimation"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.ChildContent","Common.TypeNameIdentifier":"ChartDefaultAnimation"}},{"HashCode":-810341924,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultAnimation.ChildContent","Common.TypeNameIdentifier":"ChartDefaultAnimation"}},{"HashCode":1525221963,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder\">\r\n            <summary>\r\n            Sets and gets the options for customizing the color and width of the border.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartDefaultBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Width\">\r\n            <summary>\r\n            Sets and gets the the width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder","Common.TypeNameIdentifier":"ChartDefaultBorder"}},{"HashCode":1015033180,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder\">\r\n            <summary>\r\n            Sets and gets the options for customizing the color and width of the border.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.Width\">\r\n            <summary>\r\n            Sets and gets the the width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder","Common.TypeNameIdentifier":"ChartDefaultBorder"}},{"HashCode":1374056728,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartDefaultBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.ChildContent","Common.TypeNameIdentifier":"ChartDefaultBorder"}},{"HashCode":-227214983,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultBorder.ChildContent","Common.TypeNameIdentifier":"ChartDefaultBorder"}},{"HashCode":784906645,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartDefaultFont","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont\">\r\n            <summary>\r\n            Sets and gets the options for customizing the text style of the chart component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartDefaultFont"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Color\">\r\n            <summary>\r\n            Sets and gets the color for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontFamily\">\r\n            <summary>\r\n            Sets and gets the font family for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontWeight\">\r\n            <summary>\r\n            Sets and gets the font weight for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Size\">\r\n            <summary>\r\n            Sets and gets the size for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultFont","Common.TypeNameIdentifier":"ChartDefaultFont"}},{"HashCode":-1648082178,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartDefaultFont","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont\">\r\n            <summary>\r\n            Sets and gets the options for customizing the text style of the chart component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultFont"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Color\">\r\n            <summary>\r\n            Sets and gets the color for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontFamily\">\r\n            <summary>\r\n            Sets and gets the font family for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontStyle\">\r\n            <summary>\r\n            Sets and gets the font style for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.FontWeight\">\r\n            <summary>\r\n            Sets and gets the font weight for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Opacity\">\r\n            <summary>\r\n            Sets and gets the opacity for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Size","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.Size\">\r\n            <summary>\r\n            Sets and gets the size for the text.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Size"}},{"Kind":"Components.Component","Name":"TextAlignment","TypeName":"Syncfusion.Blazor.Charts.Alignment","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextAlignment\">\r\n            <summary>\r\n            Sets and gets the text alignment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Alignment","Common.PropertyName":"TextAlignment"}},{"Kind":"Components.Component","Name":"TextOverflow","TypeName":"Syncfusion.Blazor.Charts.TextOverflow","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.TextOverflow\">\r\n            <summary>\r\n            Sets and gets the chart text overflow.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.TextOverflow","Common.PropertyName":"TextOverflow"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultFont","Common.TypeNameIdentifier":"ChartDefaultFont"}},{"HashCode":722465228,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartDefaultFont"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.ChildContent","Common.TypeNameIdentifier":"ChartDefaultFont"}},{"HashCode":-1560812469,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartDefaultFont"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultFont.ChildContent","Common.TypeNameIdentifier":"ChartDefaultFont"}},{"HashCode":-1610022947,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation\">\r\n            <summary>\r\n            Sets and gets the options for customizing the location.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartDefaultLocation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"X","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation.X\">\r\n            <summary>\r\n             Sets and gets the x coordinate of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation.Y\">\r\n            <summary>\r\n             Sets and gets the y coordinate of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Y"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation","Common.TypeNameIdentifier":"ChartDefaultLocation"}},{"HashCode":-1663875448,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation\">\r\n            <summary>\r\n            Sets and gets the options for customizing the location.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"X","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation.X\">\r\n            <summary>\r\n             Sets and gets the x coordinate of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation.Y\">\r\n            <summary>\r\n             Sets and gets the y coordinate of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Y"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation","Common.TypeNameIdentifier":"ChartDefaultLocation"}},{"HashCode":1278414355,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartDefaultLocation"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation.ChildContent","Common.TypeNameIdentifier":"ChartDefaultLocation"}},{"HashCode":-189862342,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultLocation.ChildContent","Common.TypeNameIdentifier":"ChartDefaultLocation"}},{"HashCode":-1942057445,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin\">\r\n            <summary>\r\n            Sets and gets the options for customizing the bottom, left, right, top margin of the chart component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartDefaultMargin"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Bottom","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin.Bottom\">\r\n            <summary>\r\n            Sets and gets the bottom margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Bottom"}},{"Kind":"Components.Component","Name":"Left","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin.Left\">\r\n            <summary>\r\n            Sets and gets the left margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Left"}},{"Kind":"Components.Component","Name":"Right","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin.Right\">\r\n            <summary>\r\n            Sets and gets the right margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Right"}},{"Kind":"Components.Component","Name":"Top","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin.Top\">\r\n            <summary>\r\n            Sets and gets the top margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Top"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin","Common.TypeNameIdentifier":"ChartDefaultMargin"}},{"HashCode":-636257043,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin\">\r\n            <summary>\r\n            Sets and gets the options for customizing the bottom, left, right, top margin of the chart component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Bottom","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin.Bottom\">\r\n            <summary>\r\n            Sets and gets the bottom margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Bottom"}},{"Kind":"Components.Component","Name":"Left","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin.Left\">\r\n            <summary>\r\n            Sets and gets the left margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Left"}},{"Kind":"Components.Component","Name":"Right","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin.Right\">\r\n            <summary>\r\n            Sets and gets the right margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Right"}},{"Kind":"Components.Component","Name":"Top","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin.Top\">\r\n            <summary>\r\n            Sets and gets the top margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Top"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin","Common.TypeNameIdentifier":"ChartDefaultMargin"}},{"HashCode":1502984811,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartDefaultMargin"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin.ChildContent","Common.TypeNameIdentifier":"ChartDefaultMargin"}},{"HashCode":802948624,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultMargin.ChildContent","Common.TypeNameIdentifier":"ChartDefaultMargin"}},{"HashCode":-1320136828,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData\">\r\n            <summary>\r\n            Options to customize the selected data of the chart component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartDefaultSelectedData"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Series","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData.Series\">\r\n            <summary>\r\n            Sets and gets the series index for the seleceted data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Series"}},{"Kind":"Components.Component","Name":"Point","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData.Point\">\r\n            <summary>\r\n            Sets and gets the point index for the seleceted data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Point"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData","Common.TypeNameIdentifier":"ChartDefaultSelectedData"}},{"HashCode":-1244206441,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData\">\r\n            <summary>\r\n            Options to customize the selected data of the chart component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Series","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData.Series\">\r\n            <summary>\r\n            Sets and gets the series index for the seleceted data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Series"}},{"Kind":"Components.Component","Name":"Point","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData.Point\">\r\n            <summary>\r\n            Sets and gets the point index for the seleceted data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Point"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData","Common.TypeNameIdentifier":"ChartDefaultSelectedData"}},{"HashCode":-1016176232,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartDefaultSelectedData"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData.ChildContent","Common.TypeNameIdentifier":"ChartDefaultSelectedData"}},{"HashCode":1019862227,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDefaultSelectedData.ChildContent","Common.TypeNameIdentifier":"ChartDefaultSelectedData"}},{"HashCode":1830202075,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.DateTimeAxisRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DateTimeAxisRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.DateTimeAxisRenderer","Common.TypeNameIdentifier":"DateTimeAxisRenderer"}},{"HashCode":-1541049034,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.DateTimeAxisRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.DateTimeAxisRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.DateTimeAxisRenderer","Common.TypeNameIdentifier":"DateTimeAxisRenderer"}},{"HashCode":-255698709,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.DateTimeAxisRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"DateTimeAxisRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.DateTimeAxisRenderer.ChildContent","Common.TypeNameIdentifier":"DateTimeAxisRenderer"}},{"HashCode":1673444285,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.DateTimeAxisRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.DateTimeAxisRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.DateTimeAxisRenderer.ChildContent","Common.TypeNameIdentifier":"DateTimeAxisRenderer"}},{"HashCode":920305111,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.DateTimeBase","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DateTimeBase"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.DateTimeBase","Common.TypeNameIdentifier":"DateTimeBase"}},{"HashCode":-1066272619,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.DateTimeBase","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.DateTimeBase"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.DateTimeBase","Common.TypeNameIdentifier":"DateTimeBase"}},{"HashCode":1220772977,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.DateTimeBase.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"DateTimeBase"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.DateTimeBase.ChildContent","Common.TypeNameIdentifier":"DateTimeBase"}},{"HashCode":-483349092,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.DateTimeBase.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.DateTimeBase"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.DateTimeBase.ChildContent","Common.TypeNameIdentifier":"DateTimeBase"}},{"HashCode":23026567,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.LogarithmicAxisRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LogarithmicAxisRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.LogarithmicAxisRenderer","Common.TypeNameIdentifier":"LogarithmicAxisRenderer"}},{"HashCode":-876720799,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.LogarithmicAxisRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.LogarithmicAxisRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.LogarithmicAxisRenderer","Common.TypeNameIdentifier":"LogarithmicAxisRenderer"}},{"HashCode":387482236,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.LogarithmicAxisRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"LogarithmicAxisRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.LogarithmicAxisRenderer.ChildContent","Common.TypeNameIdentifier":"LogarithmicAxisRenderer"}},{"HashCode":-703560328,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.LogarithmicAxisRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.LogarithmicAxisRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.LogarithmicAxisRenderer.ChildContent","Common.TypeNameIdentifier":"LogarithmicAxisRenderer"}},{"HashCode":-1812753794,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.NumericAxisRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NumericAxisRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.NumericAxisRenderer","Common.TypeNameIdentifier":"NumericAxisRenderer"}},{"HashCode":47851372,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.NumericAxisRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.NumericAxisRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.NumericAxisRenderer","Common.TypeNameIdentifier":"NumericAxisRenderer"}},{"HashCode":-467605402,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.NumericAxisRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"NumericAxisRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.NumericAxisRenderer.ChildContent","Common.TypeNameIdentifier":"NumericAxisRenderer"}},{"HashCode":1559236727,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.NumericAxisRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.NumericAxisRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.NumericAxisRenderer.ChildContent","Common.TypeNameIdentifier":"NumericAxisRenderer"}},{"HashCode":-1737908746,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.PrimaryXAxisRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PrimaryXAxisRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.PrimaryXAxisRenderer","Common.TypeNameIdentifier":"PrimaryXAxisRenderer"}},{"HashCode":1101084669,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.PrimaryXAxisRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.PrimaryXAxisRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.PrimaryXAxisRenderer","Common.TypeNameIdentifier":"PrimaryXAxisRenderer"}},{"HashCode":-311522401,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.PrimaryXAxisRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PrimaryXAxisRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.PrimaryXAxisRenderer.ChildContent","Common.TypeNameIdentifier":"PrimaryXAxisRenderer"}},{"HashCode":1177944742,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.PrimaryXAxisRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.PrimaryXAxisRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.PrimaryXAxisRenderer.ChildContent","Common.TypeNameIdentifier":"PrimaryXAxisRenderer"}},{"HashCode":358234421,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.PrimaryYAxisRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PrimaryYAxisRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.PrimaryYAxisRenderer","Common.TypeNameIdentifier":"PrimaryYAxisRenderer"}},{"HashCode":-239850888,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.PrimaryYAxisRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.PrimaryYAxisRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.PrimaryYAxisRenderer","Common.TypeNameIdentifier":"PrimaryYAxisRenderer"}},{"HashCode":1950870659,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.PrimaryYAxisRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PrimaryYAxisRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.PrimaryYAxisRenderer.ChildContent","Common.TypeNameIdentifier":"PrimaryYAxisRenderer"}},{"HashCode":-988382961,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.PrimaryYAxisRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.PrimaryYAxisRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.PrimaryYAxisRenderer.ChildContent","Common.TypeNameIdentifier":"PrimaryYAxisRenderer"}},{"HashCode":-748982187,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ParetoAxisRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ParetoAxisRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ParetoAxisRenderer","Common.TypeNameIdentifier":"ParetoAxisRenderer"}},{"HashCode":-1424614687,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ParetoAxisRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ParetoAxisRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ParetoAxisRenderer","Common.TypeNameIdentifier":"ParetoAxisRenderer"}},{"HashCode":-331202419,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ParetoAxisRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ParetoAxisRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ParetoAxisRenderer.ChildContent","Common.TypeNameIdentifier":"ParetoAxisRenderer"}},{"HashCode":-578913838,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ParetoAxisRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ParetoAxisRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ParetoAxisRenderer.ChildContent","Common.TypeNameIdentifier":"ParetoAxisRenderer"}},{"HashCode":-1612048743,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartAxisRendererContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartAxisRendererContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAxisRendererContainer","Common.TypeNameIdentifier":"ChartAxisRendererContainer"}},{"HashCode":1599631078,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartAxisRendererContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartAxisRendererContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAxisRendererContainer","Common.TypeNameIdentifier":"ChartAxisRendererContainer"}},{"HashCode":-58413166,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartAxisRendererContainer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartAxisRendererContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAxisRendererContainer.ChildContent","Common.TypeNameIdentifier":"ChartAxisRendererContainer"}},{"HashCode":932744348,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartAxisRendererContainer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartAxisRendererContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAxisRendererContainer.ChildContent","Common.TypeNameIdentifier":"ChartAxisRendererContainer"}},{"HashCode":1899626327,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartAxisOutsideContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideContainer","Common.TypeNameIdentifier":"ChartAxisOutsideContainer"}},{"HashCode":-421814838,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideContainer","Common.TypeNameIdentifier":"ChartAxisOutsideContainer"}},{"HashCode":409685498,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideContainer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartAxisOutsideContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideContainer.ChildContent","Common.TypeNameIdentifier":"ChartAxisOutsideContainer"}},{"HashCode":-448096208,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideContainer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideContainer.ChildContent","Common.TypeNameIdentifier":"ChartAxisOutsideContainer"}},{"HashCode":837744839,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartAxisOutsideRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AxisRenderer","TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer","Common.PropertyName":"AxisRenderer"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideRenderer","Common.TypeNameIdentifier":"ChartAxisOutsideRenderer"}},{"HashCode":-1420950809,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AxisRenderer","TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer","Common.PropertyName":"AxisRenderer"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideRenderer","Common.TypeNameIdentifier":"ChartAxisOutsideRenderer"}},{"HashCode":-390117143,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartAxisOutsideRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideRenderer.ChildContent","Common.TypeNameIdentifier":"ChartAxisOutsideRenderer"}},{"HashCode":-581629509,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAxisOutsideRenderer.ChildContent","Common.TypeNameIdentifier":"ChartAxisOutsideRenderer"}},{"HashCode":1380724878,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartAxisRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer","Common.TypeNameIdentifier":"ChartAxisRenderer"}},{"HashCode":1718241657,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer","Common.TypeNameIdentifier":"ChartAxisRenderer"}},{"HashCode":2124348214,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartAxisRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer.ChildContent","Common.TypeNameIdentifier":"ChartAxisRenderer"}},{"HashCode":-1195560184,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAxisRenderer.ChildContent","Common.TypeNameIdentifier":"ChartAxisRenderer"}},{"HashCode":1077089746,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartColumnRendererContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartColumnRendererContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartColumnRendererContainer","Common.TypeNameIdentifier":"ChartColumnRendererContainer"}},{"HashCode":1279007175,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartColumnRendererContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartColumnRendererContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartColumnRendererContainer","Common.TypeNameIdentifier":"ChartColumnRendererContainer"}},{"HashCode":1696386028,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartColumnRendererContainer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartColumnRendererContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartColumnRendererContainer.ChildContent","Common.TypeNameIdentifier":"ChartColumnRendererContainer"}},{"HashCode":-1164090648,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartColumnRendererContainer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartColumnRendererContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartColumnRendererContainer.ChildContent","Common.TypeNameIdentifier":"ChartColumnRendererContainer"}},{"HashCode":1114361409,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartColumnRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartColumnRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartColumnRenderer","Common.TypeNameIdentifier":"ChartColumnRenderer"}},{"HashCode":-247597361,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartColumnRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartColumnRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartColumnRenderer","Common.TypeNameIdentifier":"ChartColumnRenderer"}},{"HashCode":-912087206,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartColumnRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartColumnRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartColumnRenderer.ChildContent","Common.TypeNameIdentifier":"ChartColumnRenderer"}},{"HashCode":164953822,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartColumnRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartColumnRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartColumnRenderer.ChildContent","Common.TypeNameIdentifier":"ChartColumnRenderer"}},{"HashCode":954125079,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartRowRendererContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartRowRendererContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartRowRendererContainer","Common.TypeNameIdentifier":"ChartRowRendererContainer"}},{"HashCode":-715669356,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartRowRendererContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartRowRendererContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartRowRendererContainer","Common.TypeNameIdentifier":"ChartRowRendererContainer"}},{"HashCode":1719057420,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartRowRendererContainer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartRowRendererContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartRowRendererContainer.ChildContent","Common.TypeNameIdentifier":"ChartRowRendererContainer"}},{"HashCode":2032591546,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartRowRendererContainer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartRowRendererContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartRowRendererContainer.ChildContent","Common.TypeNameIdentifier":"ChartRowRendererContainer"}},{"HashCode":-1976098476,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartRowRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartRowRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartRowRenderer","Common.TypeNameIdentifier":"ChartRowRenderer"}},{"HashCode":28851803,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartRowRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartRowRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartRowRenderer","Common.TypeNameIdentifier":"ChartRowRenderer"}},{"HashCode":264492399,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartRowRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartRowRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartRowRenderer.ChildContent","Common.TypeNameIdentifier":"ChartRowRenderer"}},{"HashCode":-729664467,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartRowRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartRowRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartRowRenderer.ChildContent","Common.TypeNameIdentifier":"ChartRowRenderer"}},{"HashCode":869572258,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartAnnotationRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartAnnotationRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAnnotationRenderer","Common.TypeNameIdentifier":"ChartAnnotationRenderer"}},{"HashCode":1933876349,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartAnnotationRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartAnnotationRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAnnotationRenderer","Common.TypeNameIdentifier":"ChartAnnotationRenderer"}},{"HashCode":849737302,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartAnnotationRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartAnnotationRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAnnotationRenderer.ChildContent","Common.TypeNameIdentifier":"ChartAnnotationRenderer"}},{"HashCode":1622538482,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartAnnotationRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartAnnotationRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAnnotationRenderer.ChildContent","Common.TypeNameIdentifier":"ChartAnnotationRenderer"}},{"HashCode":375626021,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartAreaRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartAreaRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAreaRenderer","Common.TypeNameIdentifier":"ChartAreaRenderer"}},{"HashCode":1647799431,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartAreaRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartAreaRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAreaRenderer","Common.TypeNameIdentifier":"ChartAreaRenderer"}},{"HashCode":417932732,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartAreaRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartAreaRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAreaRenderer.ChildContent","Common.TypeNameIdentifier":"ChartAreaRenderer"}},{"HashCode":-210617013,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartAreaRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartAreaRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartAreaRenderer.ChildContent","Common.TypeNameIdentifier":"ChartAreaRenderer"}},{"HashCode":-54001663,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartBorderRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartBorderRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartBorderRenderer","Common.TypeNameIdentifier":"ChartBorderRenderer"}},{"HashCode":-1054613474,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartBorderRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartBorderRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartBorderRenderer","Common.TypeNameIdentifier":"ChartBorderRenderer"}},{"HashCode":1989370448,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartBorderRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartBorderRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartBorderRenderer.ChildContent","Common.TypeNameIdentifier":"ChartBorderRenderer"}},{"HashCode":-1925059166,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartBorderRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartBorderRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartBorderRenderer.ChildContent","Common.TypeNameIdentifier":"ChartBorderRenderer"}},{"HashCode":513253733,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartRendererContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartRendererContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartRendererContainer","Common.TypeNameIdentifier":"ChartRendererContainer"}},{"HashCode":2003058927,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartRendererContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartRendererContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartRendererContainer","Common.TypeNameIdentifier":"ChartRendererContainer"}},{"HashCode":4313756,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartRendererContainer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartRendererContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartRendererContainer.ChildContent","Common.TypeNameIdentifier":"ChartRendererContainer"}},{"HashCode":1811026778,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartRendererContainer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartRendererContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartRendererContainer.ChildContent","Common.TypeNameIdentifier":"ChartRendererContainer"}},{"HashCode":994079624,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartLegendRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartLegendRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartLegendRenderer","Common.TypeNameIdentifier":"ChartLegendRenderer"}},{"HashCode":-1292033412,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartLegendRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartLegendRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartLegendRenderer","Common.TypeNameIdentifier":"ChartLegendRenderer"}},{"HashCode":-297328795,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartLegendRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartLegendRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartLegendRenderer.ChildContent","Common.TypeNameIdentifier":"ChartLegendRenderer"}},{"HashCode":-2124779560,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartLegendRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartLegendRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartLegendRenderer.ChildContent","Common.TypeNameIdentifier":"ChartLegendRenderer"}},{"HashCode":1829993005,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartRenderer","Common.TypeNameIdentifier":"ChartRenderer"}},{"HashCode":-749641366,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartRenderer","Common.TypeNameIdentifier":"ChartRenderer"}},{"HashCode":648460156,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartRenderer.ChildContent","Common.TypeNameIdentifier":"ChartRenderer"}},{"HashCode":8914337,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartRenderer.ChildContent","Common.TypeNameIdentifier":"ChartRenderer"}},{"HashCode":206577137,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartTitleRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartTitleRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartTitleRenderer","Common.TypeNameIdentifier":"ChartTitleRenderer"}},{"HashCode":1223142972,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartTitleRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartTitleRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartTitleRenderer","Common.TypeNameIdentifier":"ChartTitleRenderer"}},{"HashCode":71403842,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartTitleRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartTitleRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartTitleRenderer.ChildContent","Common.TypeNameIdentifier":"ChartTitleRenderer"}},{"HashCode":-1182722975,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartTitleRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartTitleRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartTitleRenderer.ChildContent","Common.TypeNameIdentifier":"ChartTitleRenderer"}},{"HashCode":-502350425,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.CustomLegendRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CustomLegendRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.CustomLegendRenderer","Common.TypeNameIdentifier":"CustomLegendRenderer"}},{"HashCode":14165829,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.CustomLegendRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.CustomLegendRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.CustomLegendRenderer","Common.TypeNameIdentifier":"CustomLegendRenderer"}},{"HashCode":2112593203,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.CustomLegendRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CustomLegendRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.CustomLegendRenderer.ChildContent","Common.TypeNameIdentifier":"CustomLegendRenderer"}},{"HashCode":785701201,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.CustomLegendRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.CustomLegendRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.CustomLegendRenderer.ChildContent","Common.TypeNameIdentifier":"CustomLegendRenderer"}},{"HashCode":-1928981450,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.DataLabelTemplateContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DataLabelTemplateContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.DataLabelTemplateContainer","Common.TypeNameIdentifier":"DataLabelTemplateContainer"}},{"HashCode":209394396,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.DataLabelTemplateContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.DataLabelTemplateContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.DataLabelTemplateContainer","Common.TypeNameIdentifier":"DataLabelTemplateContainer"}},{"HashCode":-537251116,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartIndicatorContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartIndicatorContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartIndicatorContainer","Common.TypeNameIdentifier":"ChartIndicatorContainer"}},{"HashCode":2087099136,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartIndicatorContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartIndicatorContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartIndicatorContainer","Common.TypeNameIdentifier":"ChartIndicatorContainer"}},{"HashCode":1974290154,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartIndicatorContainer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartIndicatorContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartIndicatorContainer.ChildContent","Common.TypeNameIdentifier":"ChartIndicatorContainer"}},{"HashCode":1323022896,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartIndicatorContainer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartIndicatorContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartIndicatorContainer.ChildContent","Common.TypeNameIdentifier":"ChartIndicatorContainer"}},{"HashCode":-500194277,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartSeriesRendererContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartSeriesRendererContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartSeriesRendererContainer","Common.TypeNameIdentifier":"ChartSeriesRendererContainer"}},{"HashCode":1309376992,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartSeriesRendererContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartSeriesRendererContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartSeriesRendererContainer","Common.TypeNameIdentifier":"ChartSeriesRendererContainer"}},{"HashCode":-842711796,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartSeriesRendererContainer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartSeriesRendererContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartSeriesRendererContainer.ChildContent","Common.TypeNameIdentifier":"ChartSeriesRendererContainer"}},{"HashCode":-641214656,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartSeriesRendererContainer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartSeriesRendererContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartSeriesRendererContainer.ChildContent","Common.TypeNameIdentifier":"ChartSeriesRendererContainer"}},{"HashCode":272553634,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartDataLabelRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartDataLabelRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Series","TypeName":"Syncfusion.Blazor.Charts.ChartSeries","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartSeries","Common.PropertyName":"Series"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDataLabelRenderer","Common.TypeNameIdentifier":"ChartDataLabelRenderer"}},{"HashCode":30041621,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartDataLabelRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartDataLabelRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Series","TypeName":"Syncfusion.Blazor.Charts.ChartSeries","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartSeries","Common.PropertyName":"Series"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDataLabelRenderer","Common.TypeNameIdentifier":"ChartDataLabelRenderer"}},{"HashCode":-1762503040,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartDataLabelRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartDataLabelRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDataLabelRenderer.ChildContent","Common.TypeNameIdentifier":"ChartDataLabelRenderer"}},{"HashCode":-1765049307,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartDataLabelRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartDataLabelRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartDataLabelRenderer.ChildContent","Common.TypeNameIdentifier":"ChartDataLabelRenderer"}},{"HashCode":-188271496,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.BoxAndWhiskerSeriesRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"BoxAndWhiskerSeriesRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RendererIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"RendererIndex"}},{"Kind":"Components.Component","Name":"RendererKey","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RendererKey"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.BoxAndWhiskerSeriesRenderer","Common.TypeNameIdentifier":"BoxAndWhiskerSeriesRenderer"}},{"HashCode":435056443,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.BoxAndWhiskerSeriesRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.BoxAndWhiskerSeriesRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RendererIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"RendererIndex"}},{"Kind":"Components.Component","Name":"RendererKey","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RendererKey"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.BoxAndWhiskerSeriesRenderer","Common.TypeNameIdentifier":"BoxAndWhiskerSeriesRenderer"}},{"HashCode":2092823946,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.BoxAndWhiskerSeriesRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"BoxAndWhiskerSeriesRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.BoxAndWhiskerSeriesRenderer.ChildContent","Common.TypeNameIdentifier":"BoxAndWhiskerSeriesRenderer"}},{"HashCode":-2031191607,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.BoxAndWhiskerSeriesRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.BoxAndWhiskerSeriesRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.BoxAndWhiskerSeriesRenderer.ChildContent","Common.TypeNameIdentifier":"BoxAndWhiskerSeriesRenderer"}},{"HashCode":1792500516,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.CandleSeriesRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CandleSeriesRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RendererIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"RendererIndex"}},{"Kind":"Components.Component","Name":"RendererKey","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RendererKey"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.CandleSeriesRenderer","Common.TypeNameIdentifier":"CandleSeriesRenderer"}},{"HashCode":349663058,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.CandleSeriesRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.CandleSeriesRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RendererIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"RendererIndex"}},{"Kind":"Components.Component","Name":"RendererKey","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RendererKey"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.CandleSeriesRenderer","Common.TypeNameIdentifier":"CandleSeriesRenderer"}},{"HashCode":966185314,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.CandleSeriesRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CandleSeriesRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.CandleSeriesRenderer.ChildContent","Common.TypeNameIdentifier":"CandleSeriesRenderer"}},{"HashCode":-38269850,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.CandleSeriesRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.CandleSeriesRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.CandleSeriesRenderer.ChildContent","Common.TypeNameIdentifier":"CandleSeriesRenderer"}},{"HashCode":959398638,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ColumnSeriesRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ColumnSeriesRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RendererIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"RendererIndex"}},{"Kind":"Components.Component","Name":"RendererKey","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RendererKey"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ColumnSeriesRenderer","Common.TypeNameIdentifier":"ColumnSeriesRenderer"}},{"HashCode":-1169095210,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ColumnSeriesRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ColumnSeriesRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RendererIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"RendererIndex"}},{"Kind":"Components.Component","Name":"RendererKey","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RendererKey"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ColumnSeriesRenderer","Common.TypeNameIdentifier":"ColumnSeriesRenderer"}},{"HashCode":-1137526446,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ColumnSeriesRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ColumnSeriesRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ColumnSeriesRenderer.ChildContent","Common.TypeNameIdentifier":"ColumnSeriesRenderer"}},{"HashCode":229647448,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ColumnSeriesRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ColumnSeriesRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ColumnSeriesRenderer.ChildContent","Common.TypeNameIdentifier":"ColumnSeriesRenderer"}},{"HashCode":740421048,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartErrorBarRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartErrorBarRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Series","TypeName":"Syncfusion.Blazor.Charts.ChartSeries","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartSeries","Common.PropertyName":"Series"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartErrorBarRenderer","Common.TypeNameIdentifier":"ChartErrorBarRenderer"}},{"HashCode":530523325,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartErrorBarRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartErrorBarRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Series","TypeName":"Syncfusion.Blazor.Charts.ChartSeries","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.ChartSeries","Common.PropertyName":"Series"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartErrorBarRenderer","Common.TypeNameIdentifier":"ChartErrorBarRenderer"}},{"HashCode":-1419629476,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartErrorBarRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartErrorBarRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartErrorBarRenderer.ChildContent","Common.TypeNameIdentifier":"ChartErrorBarRenderer"}},{"HashCode":-495441996,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartErrorBarRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartErrorBarRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartErrorBarRenderer.ChildContent","Common.TypeNameIdentifier":"ChartErrorBarRenderer"}},{"HashCode":-1390728781,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.HiloOpenCloseSeriesRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HiloOpenCloseSeriesRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RendererIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"RendererIndex"}},{"Kind":"Components.Component","Name":"RendererKey","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RendererKey"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.HiloOpenCloseSeriesRenderer","Common.TypeNameIdentifier":"HiloOpenCloseSeriesRenderer"}},{"HashCode":1839134559,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.HiloOpenCloseSeriesRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.HiloOpenCloseSeriesRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RendererIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"RendererIndex"}},{"Kind":"Components.Component","Name":"RendererKey","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RendererKey"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.HiloOpenCloseSeriesRenderer","Common.TypeNameIdentifier":"HiloOpenCloseSeriesRenderer"}},{"HashCode":-548679977,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.HiloOpenCloseSeriesRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HiloOpenCloseSeriesRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.HiloOpenCloseSeriesRenderer.ChildContent","Common.TypeNameIdentifier":"HiloOpenCloseSeriesRenderer"}},{"HashCode":2030677120,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.HiloOpenCloseSeriesRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.HiloOpenCloseSeriesRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.HiloOpenCloseSeriesRenderer.ChildContent","Common.TypeNameIdentifier":"HiloOpenCloseSeriesRenderer"}},{"HashCode":452758435,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.HiloSeriesRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HiloSeriesRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RendererIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"RendererIndex"}},{"Kind":"Components.Component","Name":"RendererKey","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RendererKey"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.HiloSeriesRenderer","Common.TypeNameIdentifier":"HiloSeriesRenderer"}},{"HashCode":553229743,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.HiloSeriesRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.HiloSeriesRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RendererIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"RendererIndex"}},{"Kind":"Components.Component","Name":"RendererKey","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RendererKey"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.HiloSeriesRenderer","Common.TypeNameIdentifier":"HiloSeriesRenderer"}},{"HashCode":-471484056,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.HiloSeriesRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HiloSeriesRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.HiloSeriesRenderer.ChildContent","Common.TypeNameIdentifier":"HiloSeriesRenderer"}},{"HashCode":-1103885634,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.HiloSeriesRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.HiloSeriesRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.HiloSeriesRenderer.ChildContent","Common.TypeNameIdentifier":"HiloSeriesRenderer"}},{"HashCode":-1590030666,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.HistogramSeriesRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HistogramSeriesRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RendererIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"RendererIndex"}},{"Kind":"Components.Component","Name":"RendererKey","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RendererKey"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.HistogramSeriesRenderer","Common.TypeNameIdentifier":"HistogramSeriesRenderer"}},{"HashCode":-1455271341,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.HistogramSeriesRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.HistogramSeriesRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RendererIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"RendererIndex"}},{"Kind":"Components.Component","Name":"RendererKey","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RendererKey"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.HistogramSeriesRenderer","Common.TypeNameIdentifier":"HistogramSeriesRenderer"}},{"HashCode":718287087,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.HistogramSeriesRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HistogramSeriesRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.HistogramSeriesRenderer.ChildContent","Common.TypeNameIdentifier":"HistogramSeriesRenderer"}},{"HashCode":108308417,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.HistogramSeriesRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.HistogramSeriesRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.HistogramSeriesRenderer.ChildContent","Common.TypeNameIdentifier":"HistogramSeriesRenderer"}},{"HashCode":1562828228,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ParetoSeriesRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ParetoSeriesRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RendererIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"RendererIndex"}},{"Kind":"Components.Component","Name":"RendererKey","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RendererKey"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ParetoSeriesRenderer","Common.TypeNameIdentifier":"ParetoSeriesRenderer"}},{"HashCode":813749187,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ParetoSeriesRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ParetoSeriesRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RendererIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"RendererIndex"}},{"Kind":"Components.Component","Name":"RendererKey","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RendererKey"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ParetoSeriesRenderer","Common.TypeNameIdentifier":"ParetoSeriesRenderer"}},{"HashCode":-2083306060,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ParetoSeriesRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ParetoSeriesRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ParetoSeriesRenderer.ChildContent","Common.TypeNameIdentifier":"ParetoSeriesRenderer"}},{"HashCode":1010601680,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ParetoSeriesRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ParetoSeriesRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ParetoSeriesRenderer.ChildContent","Common.TypeNameIdentifier":"ParetoSeriesRenderer"}},{"HashCode":-745661371,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.StackingBarSeriesRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"StackingBarSeriesRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RendererIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"RendererIndex"}},{"Kind":"Components.Component","Name":"RendererKey","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RendererKey"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.StackingBarSeriesRenderer","Common.TypeNameIdentifier":"StackingBarSeriesRenderer"}},{"HashCode":-908393188,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.StackingBarSeriesRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.StackingBarSeriesRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RendererIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"RendererIndex"}},{"Kind":"Components.Component","Name":"RendererKey","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RendererKey"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.StackingBarSeriesRenderer","Common.TypeNameIdentifier":"StackingBarSeriesRenderer"}},{"HashCode":-1084309786,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.StackingBarSeriesRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"StackingBarSeriesRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.StackingBarSeriesRenderer.ChildContent","Common.TypeNameIdentifier":"StackingBarSeriesRenderer"}},{"HashCode":791399206,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.StackingBarSeriesRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.StackingBarSeriesRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.StackingBarSeriesRenderer.ChildContent","Common.TypeNameIdentifier":"StackingBarSeriesRenderer"}},{"HashCode":-499976380,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.StackingBar100SeriesRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"StackingBar100SeriesRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RendererIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"RendererIndex"}},{"Kind":"Components.Component","Name":"RendererKey","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RendererKey"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.StackingBar100SeriesRenderer","Common.TypeNameIdentifier":"StackingBar100SeriesRenderer"}},{"HashCode":-114781345,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.StackingBar100SeriesRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.StackingBar100SeriesRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RendererIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"RendererIndex"}},{"Kind":"Components.Component","Name":"RendererKey","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RendererKey"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.StackingBar100SeriesRenderer","Common.TypeNameIdentifier":"StackingBar100SeriesRenderer"}},{"HashCode":-737604678,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.StackingBar100SeriesRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"StackingBar100SeriesRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.StackingBar100SeriesRenderer.ChildContent","Common.TypeNameIdentifier":"StackingBar100SeriesRenderer"}},{"HashCode":1015702943,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.StackingBar100SeriesRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.StackingBar100SeriesRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.StackingBar100SeriesRenderer.ChildContent","Common.TypeNameIdentifier":"StackingBar100SeriesRenderer"}},{"HashCode":244911196,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.StackingColumnSeriesRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"StackingColumnSeriesRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RendererIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"RendererIndex"}},{"Kind":"Components.Component","Name":"RendererKey","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RendererKey"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.StackingColumnSeriesRenderer","Common.TypeNameIdentifier":"StackingColumnSeriesRenderer"}},{"HashCode":2061835501,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.StackingColumnSeriesRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.StackingColumnSeriesRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RendererIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"RendererIndex"}},{"Kind":"Components.Component","Name":"RendererKey","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RendererKey"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.StackingColumnSeriesRenderer","Common.TypeNameIdentifier":"StackingColumnSeriesRenderer"}},{"HashCode":1144128756,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.StackingColumnSeriesRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"StackingColumnSeriesRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.StackingColumnSeriesRenderer.ChildContent","Common.TypeNameIdentifier":"StackingColumnSeriesRenderer"}},{"HashCode":2050659260,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.StackingColumnSeriesRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.StackingColumnSeriesRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.StackingColumnSeriesRenderer.ChildContent","Common.TypeNameIdentifier":"StackingColumnSeriesRenderer"}},{"HashCode":-1994817639,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.StackingColumn100SeriesRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"StackingColumn100SeriesRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RendererIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"RendererIndex"}},{"Kind":"Components.Component","Name":"RendererKey","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RendererKey"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.StackingColumn100SeriesRenderer","Common.TypeNameIdentifier":"StackingColumn100SeriesRenderer"}},{"HashCode":1207150562,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.StackingColumn100SeriesRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.StackingColumn100SeriesRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RendererIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"RendererIndex"}},{"Kind":"Components.Component","Name":"RendererKey","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RendererKey"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.StackingColumn100SeriesRenderer","Common.TypeNameIdentifier":"StackingColumn100SeriesRenderer"}},{"HashCode":-8990887,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.StackingColumn100SeriesRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"StackingColumn100SeriesRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.StackingColumn100SeriesRenderer.ChildContent","Common.TypeNameIdentifier":"StackingColumn100SeriesRenderer"}},{"HashCode":-662078900,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.StackingColumn100SeriesRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.StackingColumn100SeriesRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.StackingColumn100SeriesRenderer.ChildContent","Common.TypeNameIdentifier":"StackingColumn100SeriesRenderer"}},{"HashCode":-1749967722,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.WaterfallSeriesRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"WaterfallSeriesRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RendererIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"RendererIndex"}},{"Kind":"Components.Component","Name":"RendererKey","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RendererKey"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.WaterfallSeriesRenderer","Common.TypeNameIdentifier":"WaterfallSeriesRenderer"}},{"HashCode":630557095,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.WaterfallSeriesRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.WaterfallSeriesRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RendererIndex","TypeName":"System.Int32","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"RendererIndex"}},{"Kind":"Components.Component","Name":"RendererKey","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RendererKey"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.WaterfallSeriesRenderer","Common.TypeNameIdentifier":"WaterfallSeriesRenderer"}},{"HashCode":1947769421,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.WaterfallSeriesRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"WaterfallSeriesRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.WaterfallSeriesRenderer.ChildContent","Common.TypeNameIdentifier":"WaterfallSeriesRenderer"}},{"HashCode":-450534274,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.WaterfallSeriesRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.WaterfallSeriesRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.WaterfallSeriesRenderer.ChildContent","Common.TypeNameIdentifier":"WaterfallSeriesRenderer"}},{"HashCode":-824816861,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartStriplineContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartStriplineContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineContainer","Common.TypeNameIdentifier":"ChartStriplineContainer"}},{"HashCode":82372874,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartStriplineContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineContainer","Common.TypeNameIdentifier":"ChartStriplineContainer"}},{"HashCode":-1072689718,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartStriplineContainer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartStriplineContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineContainer.ChildContent","Common.TypeNameIdentifier":"ChartStriplineContainer"}},{"HashCode":18357154,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartStriplineContainer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartStriplineContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineContainer.ChildContent","Common.TypeNameIdentifier":"ChartStriplineContainer"}},{"HashCode":-673338110,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartStriplineBehindContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindContainer","Common.TypeNameIdentifier":"ChartStriplineBehindContainer"}},{"HashCode":-1606864095,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindContainer","Common.TypeNameIdentifier":"ChartStriplineBehindContainer"}},{"HashCode":-1545859489,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindContainer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartStriplineBehindContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindContainer.ChildContent","Common.TypeNameIdentifier":"ChartStriplineBehindContainer"}},{"HashCode":919330077,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindContainer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindContainer.ChildContent","Common.TypeNameIdentifier":"ChartStriplineBehindContainer"}},{"HashCode":1715273225,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartStriplineOverContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartStriplineOverContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineOverContainer","Common.TypeNameIdentifier":"ChartStriplineOverContainer"}},{"HashCode":2142450616,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartStriplineOverContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineOverContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineOverContainer","Common.TypeNameIdentifier":"ChartStriplineOverContainer"}},{"HashCode":-1284002781,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartStriplineOverContainer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartStriplineOverContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineOverContainer.ChildContent","Common.TypeNameIdentifier":"ChartStriplineOverContainer"}},{"HashCode":-1077827730,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartStriplineOverContainer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartStriplineOverContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineOverContainer.ChildContent","Common.TypeNameIdentifier":"ChartStriplineOverContainer"}},{"HashCode":-1201255393,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartStriplineRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartStriplineRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineRenderer","Common.TypeNameIdentifier":"ChartStriplineRenderer"}},{"HashCode":-1154678877,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartStriplineRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineRenderer","Common.TypeNameIdentifier":"ChartStriplineRenderer"}},{"HashCode":1267574494,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartStriplineRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartStriplineRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineRenderer.ChildContent","Common.TypeNameIdentifier":"ChartStriplineRenderer"}},{"HashCode":-149064929,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartStriplineRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartStriplineRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineRenderer.ChildContent","Common.TypeNameIdentifier":"ChartStriplineRenderer"}},{"HashCode":-1419202764,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartStriplineBehindRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindRenderer","Common.TypeNameIdentifier":"ChartStriplineBehindRenderer"}},{"HashCode":-769309229,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindRenderer","Common.TypeNameIdentifier":"ChartStriplineBehindRenderer"}},{"HashCode":2134104766,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartStriplineBehindRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindRenderer.ChildContent","Common.TypeNameIdentifier":"ChartStriplineBehindRenderer"}},{"HashCode":355827723,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineBehindRenderer.ChildContent","Common.TypeNameIdentifier":"ChartStriplineBehindRenderer"}},{"HashCode":870346786,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartStriplineOverRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartStriplineOverRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineOverRenderer","Common.TypeNameIdentifier":"ChartStriplineOverRenderer"}},{"HashCode":1513049891,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartStriplineOverRenderer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineOverRenderer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineOverRenderer","Common.TypeNameIdentifier":"ChartStriplineOverRenderer"}},{"HashCode":3310563,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartStriplineOverRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartStriplineOverRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineOverRenderer.ChildContent","Common.TypeNameIdentifier":"ChartStriplineOverRenderer"}},{"HashCode":1024336631,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartStriplineOverRenderer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartStriplineOverRenderer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartStriplineOverRenderer.ChildContent","Common.TypeNameIdentifier":"ChartStriplineOverRenderer"}},{"HashCode":-484387288,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.TooltipContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TooltipContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.TooltipContainer","Common.TypeNameIdentifier":"TooltipContainer"}},{"HashCode":114487296,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.TooltipContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.TooltipContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.TooltipContainer","Common.TypeNameIdentifier":"TooltipContainer"}},{"HashCode":-400239906,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartTrendlineContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartTrendlineContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartTrendlineContainer","Common.TypeNameIdentifier":"ChartTrendlineContainer"}},{"HashCode":-843549668,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartTrendlineContainer","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartTrendlineContainer"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartTrendlineContainer","Common.TypeNameIdentifier":"ChartTrendlineContainer"}},{"HashCode":1094674585,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartTrendlineContainer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ChartTrendlineContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartTrendlineContainer.ChildContent","Common.TypeNameIdentifier":"ChartTrendlineContainer"}},{"HashCode":175983020,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartTrendlineContainer.ChildContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartTrendlineContainer"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartTrendlineContainer.ChildContent","Common.TypeNameIdentifier":"ChartTrendlineContainer"}},{"HashCode":1839935458,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.SvgSelectionPath","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SvgSelectionPath"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Stroke","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Stroke"}},{"Kind":"Components.Component","Name":"StrokeWidth","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"StrokeWidth"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Path","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Path"}},{"Kind":"Components.Component","Name":"Close","TypeName":"Syncfusion.Blazor.Charts.Internal.CloseOptions","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Internal.CloseOptions","Common.PropertyName":"Close"}},{"Kind":"Components.Component","Name":"PathChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Common.PropertyName":"PathChanged"}},{"Kind":"Components.Component","Name":"CloseChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Charts.Internal.CloseOptions>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Charts.Internal.CloseOptions>","Common.PropertyName":"CloseChanged"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.SvgSelectionPath","Common.TypeNameIdentifier":"SvgSelectionPath"}},{"HashCode":1792914478,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.SvgSelectionPath","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.SvgSelectionPath"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Stroke","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Stroke"}},{"Kind":"Components.Component","Name":"StrokeWidth","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"StrokeWidth"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Path","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Path"}},{"Kind":"Components.Component","Name":"Close","TypeName":"Syncfusion.Blazor.Charts.Internal.CloseOptions","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Internal.CloseOptions","Common.PropertyName":"Close"}},{"Kind":"Components.Component","Name":"PathChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Common.PropertyName":"PathChanged"}},{"Kind":"Components.Component","Name":"CloseChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Charts.Internal.CloseOptions>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Charts.Internal.CloseOptions>","Common.PropertyName":"CloseChanged"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.SvgSelectionPath","Common.TypeNameIdentifier":"SvgSelectionPath"}},{"HashCode":1413873042,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.SvgSelectionRect","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SvgSelectionRect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"DragRect","TypeName":"Syncfusion.Blazor.DataVizCommon.Rect","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.DataVizCommon.Rect","Common.PropertyName":"DragRect"}},{"Kind":"Components.Component","Name":"Stroke","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Stroke"}},{"Kind":"Components.Component","Name":"StrokeWidth","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"StrokeWidth"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Close","TypeName":"Syncfusion.Blazor.Charts.Internal.CloseOptions","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Internal.CloseOptions","Common.PropertyName":"Close"}},{"Kind":"Components.Component","Name":"DragRectChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DataVizCommon.Rect>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.DataVizCommon.Rect>","Common.PropertyName":"DragRectChanged"}},{"Kind":"Components.Component","Name":"CloseChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Charts.Internal.CloseOptions>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Charts.Internal.CloseOptions>","Common.PropertyName":"CloseChanged"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.SvgSelectionRect","Common.TypeNameIdentifier":"SvgSelectionRect"}},{"HashCode":-625631096,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.SvgSelectionRect","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.SvgSelectionRect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"DragRect","TypeName":"Syncfusion.Blazor.DataVizCommon.Rect","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.DataVizCommon.Rect","Common.PropertyName":"DragRect"}},{"Kind":"Components.Component","Name":"Stroke","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Stroke"}},{"Kind":"Components.Component","Name":"StrokeWidth","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"StrokeWidth"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Close","TypeName":"Syncfusion.Blazor.Charts.Internal.CloseOptions","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.Internal.CloseOptions","Common.PropertyName":"Close"}},{"Kind":"Components.Component","Name":"DragRectChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DataVizCommon.Rect>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.DataVizCommon.Rect>","Common.PropertyName":"DragRectChanged"}},{"Kind":"Components.Component","Name":"CloseChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Charts.Internal.CloseOptions>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.Charts.Internal.CloseOptions>","Common.PropertyName":"CloseChanged"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.SvgSelectionRect","Common.TypeNameIdentifier":"SvgSelectionRect"}},{"HashCode":1343569799,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.SvgSelectionRectCollection","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SvgSelectionRectCollection"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"SelectedRectangles","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Charts.Internal.SelectionOptions>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.Charts.Internal.SelectionOptions>","Common.PropertyName":"SelectedRectangles"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.SvgSelectionRectCollection","Common.TypeNameIdentifier":"SvgSelectionRectCollection"}},{"HashCode":-324869352,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.SvgSelectionRectCollection","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.SvgSelectionRectCollection"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"SelectedRectangles","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.Charts.Internal.SelectionOptions>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.Charts.Internal.SelectionOptions>","Common.PropertyName":"SelectedRectangles"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.SvgSelectionRectCollection","Common.TypeNameIdentifier":"SvgSelectionRectCollection"}},{"HashCode":-167855674,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ZoomContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ZoomContent"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ZoomContent","Common.TypeNameIdentifier":"ZoomContent"}},{"HashCode":680874957,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ZoomContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ZoomContent"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ZoomContent","Common.TypeNameIdentifier":"ZoomContent"}},{"HashCode":554185973,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ZoomToolkit","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ZoomToolkit"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ZoomToolkit","Common.TypeNameIdentifier":"ZoomToolkit"}},{"HashCode":722377234,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ZoomToolkit","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ZoomToolkit"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ZoomToolkit","Common.TypeNameIdentifier":"ZoomToolkit"}},{"HashCode":1040543864,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.StyleElement","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"StyleElement"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.StyleElement","Common.TypeNameIdentifier":"StyleElement"}},{"HashCode":1359263498,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.StyleElement","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.StyleElement"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.StyleElement","Common.TypeNameIdentifier":"StyleElement"}},{"HashCode":1997168592,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartTooltipComponent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartTooltipComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"GivenContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Object>","Common.PropertyName":"GivenContent"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartTooltipComponent","Common.TypeNameIdentifier":"ChartTooltipComponent"}},{"HashCode":1560600393,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartTooltipComponent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartTooltipComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"GivenContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Object>","Common.PropertyName":"GivenContent"}},{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartTooltipComponent","Common.TypeNameIdentifier":"ChartTooltipComponent"}},{"HashCode":-803261390,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartTooltipComponent.GivenContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GivenContent","ParentTag":"ChartTooltipComponent"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GivenContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartTooltipComponent.GivenContent","Common.TypeNameIdentifier":"ChartTooltipComponent"}},{"HashCode":-609792305,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.ChartTooltipComponent.GivenContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GivenContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.ChartTooltipComponent"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GivenContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartTooltipComponent.GivenContent","Common.TypeNameIdentifier":"ChartTooltipComponent"}},{"HashCode":-2133106046,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.TooltipData","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TooltipData"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"GivenContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Object>","Common.PropertyName":"GivenContent"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.TooltipData","Common.TypeNameIdentifier":"TooltipData"}},{"HashCode":125996164,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.TooltipData","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.TooltipData"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ID","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ID"}},{"Kind":"Components.Component","Name":"Attributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"Attributes"}},{"Kind":"Components.Component","Name":"GivenContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Object>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Object>","Common.PropertyName":"GivenContent"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.TooltipData","Common.TypeNameIdentifier":"TooltipData"}},{"HashCode":834744516,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.TooltipData.GivenContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GivenContent","ParentTag":"TooltipData"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GivenContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.TooltipData.GivenContent","Common.TypeNameIdentifier":"TooltipData"}},{"HashCode":1918566030,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Charts.Internal.TooltipData.GivenContent","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"GivenContent","ParentTag":"Syncfusion.Blazor.Charts.Internal.TooltipData"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'GivenContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.TooltipData.GivenContent","Common.TypeNameIdentifier":"TooltipData"}},{"HashCode":1092208088,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.TrimTooltipBase","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"TrimTooltipBase"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Content"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.TrimTooltipBase","Common.TypeNameIdentifier":"TrimTooltipBase"}},{"HashCode":2019379244,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.TrimTooltipBase","AssemblyName":"Syncfusion.Blazor.Charts","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.TrimTooltipBase"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Content","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Content"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.TrimTooltipBase","Common.TypeNameIdentifier":"TrimTooltipBase"}},{"HashCode":-397374006,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartCommonAnimation","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartCommonAnimation\">\r\n            <summary>\r\n            Sets and gets the animation options of chart component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartCommonAnimation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonAnimation.Delay\">\r\n            <summary>\r\n            Sets and gets the option for animation delay of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonAnimation.Duration\">\r\n            <summary>\r\n            Sets and gets the duration of animation in milliseconds.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonAnimation.Enable\">\r\n            <summary>\r\n            Option to series gets animated on initial loading.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartCommonAnimation","Common.TypeNameIdentifier":"ChartCommonAnimation"}},{"HashCode":227109402,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartCommonAnimation","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartCommonAnimation\">\r\n            <summary>\r\n            Sets and gets the animation options of chart component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartCommonAnimation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Delay","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonAnimation.Delay\">\r\n            <summary>\r\n            Sets and gets the option for animation delay of the series.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Delay"}},{"Kind":"Components.Component","Name":"Duration","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonAnimation.Duration\">\r\n            <summary>\r\n            Sets and gets the duration of animation in milliseconds.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Duration"}},{"Kind":"Components.Component","Name":"Enable","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonAnimation.Enable\">\r\n            <summary>\r\n            Option to series gets animated on initial loading.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Enable"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartCommonAnimation","Common.TypeNameIdentifier":"ChartCommonAnimation"}},{"HashCode":1174078571,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartCommonBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder\">\r\n            <summary>\r\n            Sets and gets the options for customizing the color and width of the border.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartCommonBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Width\">\r\n            <summary>\r\n            Sets and gets the the width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartCommonBorder","Common.TypeNameIdentifier":"ChartCommonBorder"}},{"HashCode":1240344905,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartCommonBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder\">\r\n            <summary>\r\n            Sets and gets the options for customizing the color and width of the border.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartCommonBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Color\">\r\n            <summary>\r\n            Sets and gets the color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonBorder.Width\">\r\n            <summary>\r\n            Sets and gets the the width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartCommonBorder","Common.TypeNameIdentifier":"ChartCommonBorder"}},{"HashCode":-185538811,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartCommonLabelBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartCommonLabelBorder\">\r\n            <summary>\r\n            Options to customize the label border of the axis.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartCommonLabelBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonLabelBorder.Color\">\r\n            <summary>\r\n            The color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Charts.BorderType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonLabelBorder.Type\">\r\n            <summary>\r\n            Border type for labels\r\n            Rectangle\r\n            Without Top Border\r\n            Without Top and BottomBorder\r\n            Without Border\r\n            Brace\r\n            CurlyBrace.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.BorderType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonLabelBorder.Width\">\r\n            <summary>\r\n            The width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartCommonLabelBorder","Common.TypeNameIdentifier":"ChartCommonLabelBorder"}},{"HashCode":1202591308,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartCommonLabelBorder","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartCommonLabelBorder\">\r\n            <summary>\r\n            Options to customize the label border of the axis.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartCommonLabelBorder"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonLabelBorder.Color\">\r\n            <summary>\r\n            The color of the border that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Syncfusion.Blazor.Charts.BorderType","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonLabelBorder.Type\">\r\n            <summary>\r\n            Border type for labels\r\n            Rectangle\r\n            Without Top Border\r\n            Without Top and BottomBorder\r\n            Without Border\r\n            Brace\r\n            CurlyBrace.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Charts.BorderType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonLabelBorder.Width\">\r\n            <summary>\r\n            The width of the border in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartCommonLabelBorder","Common.TypeNameIdentifier":"ChartCommonLabelBorder"}},{"HashCode":1676560464,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartCommonLocation","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartCommonLocation\">\r\n            <summary>\r\n            Sets and gets the options for customizing the location.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartCommonLocation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"X","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonLocation.X\">\r\n            <summary>\r\n             Sets and gets the x coordinate of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonLocation.Y\">\r\n            <summary>\r\n             Sets and gets the y coordinate of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Y"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartCommonLocation","Common.TypeNameIdentifier":"ChartCommonLocation"}},{"HashCode":1596347593,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartCommonLocation","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartCommonLocation\">\r\n            <summary>\r\n            Sets and gets the options for customizing the location.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartCommonLocation"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"X","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonLocation.X\">\r\n            <summary>\r\n             Sets and gets the x coordinate of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonLocation.Y\">\r\n            <summary>\r\n             Sets and gets the y coordinate of the legend in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Y"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartCommonLocation","Common.TypeNameIdentifier":"ChartCommonLocation"}},{"HashCode":277833927,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartCommonMajorGridLines","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartCommonMajorGridLines\">\r\n            <summary>\r\n            Options to customize the major grid lines of the axis.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartCommonMajorGridLines"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMajorGridLines.Color\">\r\n            <summary>\r\n            The color of the major grid line that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMajorGridLines.DashArray\">\r\n            <summary>\r\n            The dash array of the grid lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMajorGridLines.Width\">\r\n            <summary>\r\n            The width of the line in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartCommonMajorGridLines","Common.TypeNameIdentifier":"ChartCommonMajorGridLines"}},{"HashCode":1615080715,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartCommonMajorGridLines","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartCommonMajorGridLines\">\r\n            <summary>\r\n            Options to customize the major grid lines of the axis.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartCommonMajorGridLines"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMajorGridLines.Color\">\r\n            <summary>\r\n            The color of the major grid line that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMajorGridLines.DashArray\">\r\n            <summary>\r\n            The dash array of the grid lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMajorGridLines.Width\">\r\n            <summary>\r\n            The width of the line in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartCommonMajorGridLines","Common.TypeNameIdentifier":"ChartCommonMajorGridLines"}},{"HashCode":-547568921,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartCommonMajorTickLines","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartCommonMajorTickLines\">\r\n            <summary>\r\n            Options to customize the major tick lines of the axis.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartCommonMajorTickLines"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMajorTickLines.Color\">\r\n            <summary>\r\n            The color of the major tick line that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMajorTickLines.Height\">\r\n            <summary>\r\n            The height of the ticks in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMajorTickLines.Width\">\r\n            <summary>\r\n            The width of the tick lines in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartCommonMajorTickLines","Common.TypeNameIdentifier":"ChartCommonMajorTickLines"}},{"HashCode":2040874203,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartCommonMajorTickLines","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartCommonMajorTickLines\">\r\n            <summary>\r\n            Options to customize the major tick lines of the axis.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartCommonMajorTickLines"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMajorTickLines.Color\">\r\n            <summary>\r\n            The color of the major tick line that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMajorTickLines.Height\">\r\n            <summary>\r\n            The height of the ticks in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMajorTickLines.Width\">\r\n            <summary>\r\n            The width of the tick lines in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartCommonMajorTickLines","Common.TypeNameIdentifier":"ChartCommonMajorTickLines"}},{"HashCode":898401451,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartCommonMargin","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin\">\r\n            <summary>\r\n            Sets and gets the options for customizing the bottom, left, right, top margin of the chart component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartCommonMargin"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Bottom","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin.Bottom\">\r\n            <summary>\r\n            Sets and gets the bottom margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Bottom"}},{"Kind":"Components.Component","Name":"Left","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin.Left\">\r\n            <summary>\r\n            Sets and gets the left margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Left"}},{"Kind":"Components.Component","Name":"Right","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin.Right\">\r\n            <summary>\r\n            Sets and gets the right margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Right"}},{"Kind":"Components.Component","Name":"Top","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin.Top\">\r\n            <summary>\r\n            Sets and gets the top margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Top"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartCommonMargin","Common.TypeNameIdentifier":"ChartCommonMargin"}},{"HashCode":1709620083,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartCommonMargin","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin\">\r\n            <summary>\r\n            Sets and gets the options for customizing the bottom, left, right, top margin of the chart component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartCommonMargin"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Bottom","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin.Bottom\">\r\n            <summary>\r\n            Sets and gets the bottom margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Bottom"}},{"Kind":"Components.Component","Name":"Left","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin.Left\">\r\n            <summary>\r\n            Sets and gets the left margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Left"}},{"Kind":"Components.Component","Name":"Right","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin.Right\">\r\n            <summary>\r\n            Sets and gets the right margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Right"}},{"Kind":"Components.Component","Name":"Top","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMargin.Top\">\r\n            <summary>\r\n            Sets and gets the top margin for the chart component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Top"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartCommonMargin","Common.TypeNameIdentifier":"ChartCommonMargin"}},{"HashCode":-1892446427,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartCommonMinorGridLines","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartCommonMinorGridLines\">\r\n            <summary>\r\n            Options to customize the minor grid lines of the axis.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartCommonMinorGridLines"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMinorGridLines.Color\">\r\n            <summary>\r\n            The color of the minor grid line that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMinorGridLines.DashArray\">\r\n            <summary>\r\n            The dash array of grid lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMinorGridLines.Width\">\r\n            <summary>\r\n            The width of the line in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartCommonMinorGridLines","Common.TypeNameIdentifier":"ChartCommonMinorGridLines"}},{"HashCode":-2025668498,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartCommonMinorGridLines","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartCommonMinorGridLines\">\r\n            <summary>\r\n            Options to customize the minor grid lines of the axis.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartCommonMinorGridLines"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMinorGridLines.Color\">\r\n            <summary>\r\n            The color of the minor grid line that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMinorGridLines.DashArray\">\r\n            <summary>\r\n            The dash array of grid lines.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMinorGridLines.Width\">\r\n            <summary>\r\n            The width of the line in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartCommonMinorGridLines","Common.TypeNameIdentifier":"ChartCommonMinorGridLines"}},{"HashCode":-355010298,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartCommonMinorTickLines","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartCommonMinorTickLines\">\r\n            <summary>\r\n            Options to customize the minor tick lines of the axis.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartCommonMinorTickLines"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMinorTickLines.Color\">\r\n            <summary>\r\n            The color of the minor tick line that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMinorTickLines.Height\">\r\n            <summary>\r\n            The height of the ticks in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMinorTickLines.Width\">\r\n            <summary>\r\n            The width of the tick line in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartCommonMinorTickLines","Common.TypeNameIdentifier":"ChartCommonMinorTickLines"}},{"HashCode":2131388276,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartCommonMinorTickLines","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartCommonMinorTickLines\">\r\n            <summary>\r\n            Options to customize the minor tick lines of the axis.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartCommonMinorTickLines"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Color","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMinorTickLines.Color\">\r\n            <summary>\r\n            The color of the minor tick line that accepts value in hex and rgba as a valid CSS color string.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Color"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMinorTickLines.Height\">\r\n            <summary>\r\n            The height of the ticks in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonMinorTickLines.Width\">\r\n            <summary>\r\n            The width of the tick line in pixels.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartCommonMinorTickLines","Common.TypeNameIdentifier":"ChartCommonMinorTickLines"}},{"HashCode":1516537820,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartCommonSelectedData","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartCommonSelectedData\">\r\n            <summary>\r\n            Options to customize the selected data of the chart component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChartCommonSelectedData"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Series","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonSelectedData.Series\">\r\n            <summary>\r\n            Sets and gets the series index for the seleceted data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Series"}},{"Kind":"Components.Component","Name":"Point","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonSelectedData.Point\">\r\n            <summary>\r\n            Sets and gets the point index for the seleceted data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Point"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartCommonSelectedData","Common.TypeNameIdentifier":"ChartCommonSelectedData"}},{"HashCode":-1535303761,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Charts.Internal.ChartCommonSelectedData","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"<member name=\"T:Syncfusion.Blazor.Charts.Internal.ChartCommonSelectedData\">\r\n            <summary>\r\n            Options to customize the selected data of the chart component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.ChartCommonSelectedData"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Series","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonSelectedData.Series\">\r\n            <summary>\r\n            Sets and gets the series index for the seleceted data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Series"}},{"Kind":"Components.Component","Name":"Point","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.Charts.Internal.ChartCommonSelectedData.Point\">\r\n            <summary>\r\n            Sets and gets the point index for the seleceted data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"Point"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.ChartCommonSelectedData","Common.TypeNameIdentifier":"ChartCommonSelectedData"}},{"HashCode":919994270,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataManager","AssemblyName":"Syncfusion.Blazor.Data","Documentation":"<member name=\"T:Syncfusion.Blazor.DataManager\">\r\n            <summary>\r\n            The DataManager is a data management component used for performing data operations in applications.\r\n            It acts as an abstraction for using local data source - IEnumerable and remote data source - web services returning JSON or oData.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DataManager"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HttpClientInstance","TypeName":"System.Net.Http.HttpClient","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.HttpClientInstance\">\r\n            <summary>\r\n            Specifies the HttpClient instance to be used  by DataManager.\r\n            </summary>\r\n            <remarks>Use HttpClientInstance property to inject named HttpClient into DataManager.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Net.Http.HttpClient","Common.PropertyName":"HttpClientInstance"}},{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Url\">\r\n            <summary>\r\n            Specifies the endpoint URL. DataManager requests this URL when data is needed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Url"}},{"Kind":"Components.Component","Name":"AdaptorInstance","TypeName":"System.Type","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.AdaptorInstance\">\r\n            <summary>\r\n            Specifies the custom adaptor class type. DataManager uses this type value to instantiate custom adaptor class.\r\n            </summary>\r\n            <remarks>DataManager uses Activator.CreateInstance method to create custom adaptor instance.\r\n            Injecting services into custom adaptor class, is not supported while using this approach.\r\n            To inject and use services, provide custom adaptor as a Blazor component by extending DataAdaptor class.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Type","Common.PropertyName":"AdaptorInstance"}},{"Kind":"Components.Component","Name":"Adaptor","TypeName":"Syncfusion.Blazor.Adaptors","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Adaptor\">\r\n            <summary>\r\n            Gets or sets the data adaptor to be used by DataManager.\r\n            <list type=\"bullet\">\r\n            <item>\r\n            <term>BlazorAdaptor</term>\r\n            <description>Default. BlazorAdaptor is used to process Enumerable data. It contains methods to process the given collection based on the queries.</description>\r\n            </item>\r\n            <item>\r\n            <term>ODataAdaptor</term>\r\n            <description>\r\n            OData Adaptor provies ability to consume and manipulate data from OData services.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>ODataV4Adaptor</term>\r\n            <description>\r\n            ODatav4 Adaptor provies ability to consume and manipulate data from OData v4 services\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>WebApiAdaptor</term>\r\n            <description>\r\n            WebApi Adaptor provies ability to consume and manipulate data from WebApi services.\r\n            This adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>UrlAdaptor</term>\r\n            <description>\r\n            URL Adaptor is used when you are required to interact with all kind of remote services to retrieve data.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>RemoteSaveAdaptor</term>\r\n            <description>\r\n            Remote Save Adaptor is used for binding JSON data.\r\n            It interacts with remote services only for CRUD operations.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>CustomAdaptor</term>\r\n            <description>\r\n            CustomAdaptor specifies that own data query and manipulation logic has been provided using custom adaptor component\r\n            extended from DataAdaptor class.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>JsonAdaptor</term>\r\n            <description>\r\n            JsonAdaptor is used to process JSON data at the client side. It contains methods to process the given JSON data based on the queries.\r\n            </description>\r\n            </item>\r\n            </list>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Adaptors","Common.PropertyName":"Adaptor"}},{"Kind":"Components.Component","Name":"DataAdaptor","TypeName":"Syncfusion.Blazor.Data.IAdaptor","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.DataAdaptor\">\r\n            <summary>\r\n            Holds adaptor instance.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Data.IAdaptor","Common.PropertyName":"DataAdaptor"}},{"Kind":"Components.Component","Name":"InsertUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.InsertUrl\">\r\n            <summary>\r\n            Specifies the insert URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Insert method is called, request will be made to InsertUrl.\r\n            If InsertUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InsertUrl"}},{"Kind":"Components.Component","Name":"RemoveUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.RemoveUrl\">\r\n            <summary>\r\n            Specifies the remove URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Remove method is called, request will be made to RemoveUrl.\r\n            If RemoveUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RemoveUrl"}},{"Kind":"Components.Component","Name":"UpdateUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.UpdateUrl\">\r\n            <summary>\r\n            Specifies the update URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Update method is called, request will be made to UpdateUrl.\r\n            If UpdateUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"UpdateUrl"}},{"Kind":"Components.Component","Name":"CrudUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.CrudUrl\">\r\n            <summary>\r\n            Specifies the CRUD URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Insert, Remove or Update method is called, request will be made to CrudUrl.\r\n            If CrudUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"CrudUrl"}},{"Kind":"Components.Component","Name":"BatchUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.BatchUrl\">\r\n            <summary>\r\n            Specifies the batch url.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When SaveChanges method is called, request will be made to BatchUrl.\r\n            If BatchUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"BatchUrl"}},{"Kind":"Components.Component","Name":"Json","TypeName":"System.Collections.Generic.IEnumerable<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Json\">\r\n            <summary>\r\n            Specifies the IEnumerable collection. This data could be queried and manipulated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Object>","Common.PropertyName":"Json"}},{"Kind":"Components.Component","Name":"Headers","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Headers\">\r\n            <summary>\r\n            Specifies the key/value pair of headers.\r\n            </summary>\r\n            <remarks>\r\n            Use Headers to add any custom headers to the request made by DataManager.\r\n            Users can also send authentication bearer token using Headers property.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.String>","Common.PropertyName":"Headers"}},{"Kind":"Components.Component","Name":"Accept","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Accept\">\r\n            <summary>\r\n            Specifies the accept type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Accept"}},{"Kind":"Components.Component","Name":"Data","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Data\">\r\n            <summary>\r\n            Specifies the IEnumerale data.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Data"}},{"Kind":"Components.Component","Name":"TimeTillExpiration","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.TimeTillExpiration\">\r\n            <summary>\r\n            Specifies the time limit to clear the cached data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"TimeTillExpiration"}},{"Kind":"Components.Component","Name":"CachingPageSize","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.CachingPageSize\">\r\n            <summary>\r\n            Specifies the caching page size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"CachingPageSize"}},{"Kind":"Components.Component","Name":"EnableCaching","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.EnableCaching\">\r\n            <summary>\r\n            Enables data caching.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableCaching"}},{"Kind":"Components.Component","Name":"RequestType","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.RequestType\">\r\n            <summary>\r\n            Specifies the request type for sending data fetching.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RequestType"}},{"Kind":"Components.Component","Name":"Key","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Key\">\r\n            <summary>\r\n            Specifies the primary key value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Key"}},{"Kind":"Components.Component","Name":"CrossDomain","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.CrossDomain\">\r\n            <summary>\r\n            When true, then indicates that the request is a cross-domain request.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"CrossDomain"}},{"Kind":"Components.Component","Name":"Jsonp","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Jsonp\">\r\n            <summary>\r\n            Specifies the jsonp request.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Jsonp"}},{"Kind":"Components.Component","Name":"DataType","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.DataType\">\r\n            <summary>\r\n            Specifies the data type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DataType"}},{"Kind":"Components.Component","Name":"Offline","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Offline\">\r\n            <summary>\r\n            Enables offline mode in datamanager.\r\n            </summary>\r\n            <remarks>\r\n            Applicable for remote data source. If offline is true then initial request will be made to fetch\r\n            data. Further actions will be handled at the in-memory data and no more request will be made to the service.\r\n            Cached data is stored in the JSON property.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Offline"}},{"Kind":"Components.Component","Name":"RequiresFormat","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.RequiresFormat\">\r\n            <summary>\r\n            Sepcifies requires format.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"RequiresFormat"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.ChildContent\">\r\n            <summary>\r\n            Defines the child content.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataManager","Common.TypeNameIdentifier":"DataManager"}},{"HashCode":42401419,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataManager","AssemblyName":"Syncfusion.Blazor.Data","Documentation":"<member name=\"T:Syncfusion.Blazor.DataManager\">\r\n            <summary>\r\n            The DataManager is a data management component used for performing data operations in applications.\r\n            It acts as an abstraction for using local data source - IEnumerable and remote data source - web services returning JSON or oData.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DataManager"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HttpClientInstance","TypeName":"System.Net.Http.HttpClient","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.HttpClientInstance\">\r\n            <summary>\r\n            Specifies the HttpClient instance to be used  by DataManager.\r\n            </summary>\r\n            <remarks>Use HttpClientInstance property to inject named HttpClient into DataManager.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Net.Http.HttpClient","Common.PropertyName":"HttpClientInstance"}},{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Url\">\r\n            <summary>\r\n            Specifies the endpoint URL. DataManager requests this URL when data is needed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Url"}},{"Kind":"Components.Component","Name":"AdaptorInstance","TypeName":"System.Type","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.AdaptorInstance\">\r\n            <summary>\r\n            Specifies the custom adaptor class type. DataManager uses this type value to instantiate custom adaptor class.\r\n            </summary>\r\n            <remarks>DataManager uses Activator.CreateInstance method to create custom adaptor instance.\r\n            Injecting services into custom adaptor class, is not supported while using this approach.\r\n            To inject and use services, provide custom adaptor as a Blazor component by extending DataAdaptor class.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Type","Common.PropertyName":"AdaptorInstance"}},{"Kind":"Components.Component","Name":"Adaptor","TypeName":"Syncfusion.Blazor.Adaptors","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Adaptor\">\r\n            <summary>\r\n            Gets or sets the data adaptor to be used by DataManager.\r\n            <list type=\"bullet\">\r\n            <item>\r\n            <term>BlazorAdaptor</term>\r\n            <description>Default. BlazorAdaptor is used to process Enumerable data. It contains methods to process the given collection based on the queries.</description>\r\n            </item>\r\n            <item>\r\n            <term>ODataAdaptor</term>\r\n            <description>\r\n            OData Adaptor provies ability to consume and manipulate data from OData services.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>ODataV4Adaptor</term>\r\n            <description>\r\n            ODatav4 Adaptor provies ability to consume and manipulate data from OData v4 services\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>WebApiAdaptor</term>\r\n            <description>\r\n            WebApi Adaptor provies ability to consume and manipulate data from WebApi services.\r\n            This adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>UrlAdaptor</term>\r\n            <description>\r\n            URL Adaptor is used when you are required to interact with all kind of remote services to retrieve data.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>RemoteSaveAdaptor</term>\r\n            <description>\r\n            Remote Save Adaptor is used for binding JSON data.\r\n            It interacts with remote services only for CRUD operations.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>CustomAdaptor</term>\r\n            <description>\r\n            CustomAdaptor specifies that own data query and manipulation logic has been provided using custom adaptor component\r\n            extended from DataAdaptor class.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>JsonAdaptor</term>\r\n            <description>\r\n            JsonAdaptor is used to process JSON data at the client side. It contains methods to process the given JSON data based on the queries.\r\n            </description>\r\n            </item>\r\n            </list>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Adaptors","Common.PropertyName":"Adaptor"}},{"Kind":"Components.Component","Name":"DataAdaptor","TypeName":"Syncfusion.Blazor.Data.IAdaptor","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.DataAdaptor\">\r\n            <summary>\r\n            Holds adaptor instance.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Data.IAdaptor","Common.PropertyName":"DataAdaptor"}},{"Kind":"Components.Component","Name":"InsertUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.InsertUrl\">\r\n            <summary>\r\n            Specifies the insert URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Insert method is called, request will be made to InsertUrl.\r\n            If InsertUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InsertUrl"}},{"Kind":"Components.Component","Name":"RemoveUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.RemoveUrl\">\r\n            <summary>\r\n            Specifies the remove URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Remove method is called, request will be made to RemoveUrl.\r\n            If RemoveUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RemoveUrl"}},{"Kind":"Components.Component","Name":"UpdateUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.UpdateUrl\">\r\n            <summary>\r\n            Specifies the update URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Update method is called, request will be made to UpdateUrl.\r\n            If UpdateUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"UpdateUrl"}},{"Kind":"Components.Component","Name":"CrudUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.CrudUrl\">\r\n            <summary>\r\n            Specifies the CRUD URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Insert, Remove or Update method is called, request will be made to CrudUrl.\r\n            If CrudUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"CrudUrl"}},{"Kind":"Components.Component","Name":"BatchUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.BatchUrl\">\r\n            <summary>\r\n            Specifies the batch url.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When SaveChanges method is called, request will be made to BatchUrl.\r\n            If BatchUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"BatchUrl"}},{"Kind":"Components.Component","Name":"Json","TypeName":"System.Collections.Generic.IEnumerable<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Json\">\r\n            <summary>\r\n            Specifies the IEnumerable collection. This data could be queried and manipulated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Object>","Common.PropertyName":"Json"}},{"Kind":"Components.Component","Name":"Headers","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Headers\">\r\n            <summary>\r\n            Specifies the key/value pair of headers.\r\n            </summary>\r\n            <remarks>\r\n            Use Headers to add any custom headers to the request made by DataManager.\r\n            Users can also send authentication bearer token using Headers property.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.String>","Common.PropertyName":"Headers"}},{"Kind":"Components.Component","Name":"Accept","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Accept\">\r\n            <summary>\r\n            Specifies the accept type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Accept"}},{"Kind":"Components.Component","Name":"Data","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Data\">\r\n            <summary>\r\n            Specifies the IEnumerale data.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Data"}},{"Kind":"Components.Component","Name":"TimeTillExpiration","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.TimeTillExpiration\">\r\n            <summary>\r\n            Specifies the time limit to clear the cached data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"TimeTillExpiration"}},{"Kind":"Components.Component","Name":"CachingPageSize","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.CachingPageSize\">\r\n            <summary>\r\n            Specifies the caching page size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"CachingPageSize"}},{"Kind":"Components.Component","Name":"EnableCaching","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.EnableCaching\">\r\n            <summary>\r\n            Enables data caching.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableCaching"}},{"Kind":"Components.Component","Name":"RequestType","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.RequestType\">\r\n            <summary>\r\n            Specifies the request type for sending data fetching.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RequestType"}},{"Kind":"Components.Component","Name":"Key","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Key\">\r\n            <summary>\r\n            Specifies the primary key value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Key"}},{"Kind":"Components.Component","Name":"CrossDomain","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.CrossDomain\">\r\n            <summary>\r\n            When true, then indicates that the request is a cross-domain request.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"CrossDomain"}},{"Kind":"Components.Component","Name":"Jsonp","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Jsonp\">\r\n            <summary>\r\n            Specifies the jsonp request.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Jsonp"}},{"Kind":"Components.Component","Name":"DataType","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.DataType\">\r\n            <summary>\r\n            Specifies the data type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DataType"}},{"Kind":"Components.Component","Name":"Offline","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Offline\">\r\n            <summary>\r\n            Enables offline mode in datamanager.\r\n            </summary>\r\n            <remarks>\r\n            Applicable for remote data source. If offline is true then initial request will be made to fetch\r\n            data. Further actions will be handled at the in-memory data and no more request will be made to the service.\r\n            Cached data is stored in the JSON property.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Offline"}},{"Kind":"Components.Component","Name":"RequiresFormat","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.RequiresFormat\">\r\n            <summary>\r\n            Sepcifies requires format.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"RequiresFormat"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.ChildContent\">\r\n            <summary>\r\n            Defines the child content.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataManager","Common.TypeNameIdentifier":"DataManager"}},{"HashCode":1723310387,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DataManager.ChildContent","AssemblyName":"Syncfusion.Blazor.Data","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.ChildContent\">\r\n            <summary>\r\n            Defines the child content.\r\n            </summary>\r\n            <exclude />\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"DataManager"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.DataManager.ChildContent","Common.TypeNameIdentifier":"DataManager"}},{"HashCode":-362921182,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DataManager.ChildContent","AssemblyName":"Syncfusion.Blazor.Data","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.ChildContent\">\r\n            <summary>\r\n            Defines the child content.\r\n            </summary>\r\n            <exclude />\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.DataManager"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.DataManager.ChildContent","Common.TypeNameIdentifier":"DataManager"}},{"HashCode":415883159,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Data.SfDataManager","AssemblyName":"Syncfusion.Blazor.Data","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfDataManager"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HttpClientInstance","TypeName":"System.Net.Http.HttpClient","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.HttpClientInstance\">\r\n            <summary>\r\n            Specifies the HttpClient instance to be used  by DataManager.\r\n            </summary>\r\n            <remarks>Use HttpClientInstance property to inject named HttpClient into DataManager.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Net.Http.HttpClient","Common.PropertyName":"HttpClientInstance"}},{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Url\">\r\n            <summary>\r\n            Specifies the endpoint URL. DataManager requests this URL when data is needed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Url"}},{"Kind":"Components.Component","Name":"AdaptorInstance","TypeName":"System.Type","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.AdaptorInstance\">\r\n            <summary>\r\n            Specifies the custom adaptor class type. DataManager uses this type value to instantiate custom adaptor class.\r\n            </summary>\r\n            <remarks>DataManager uses Activator.CreateInstance method to create custom adaptor instance.\r\n            Injecting services into custom adaptor class, is not supported while using this approach.\r\n            To inject and use services, provide custom adaptor as a Blazor component by extending DataAdaptor class.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Type","Common.PropertyName":"AdaptorInstance"}},{"Kind":"Components.Component","Name":"Adaptor","TypeName":"Syncfusion.Blazor.Adaptors","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Adaptor\">\r\n            <summary>\r\n            Gets or sets the data adaptor to be used by DataManager.\r\n            <list type=\"bullet\">\r\n            <item>\r\n            <term>BlazorAdaptor</term>\r\n            <description>Default. BlazorAdaptor is used to process Enumerable data. It contains methods to process the given collection based on the queries.</description>\r\n            </item>\r\n            <item>\r\n            <term>ODataAdaptor</term>\r\n            <description>\r\n            OData Adaptor provies ability to consume and manipulate data from OData services.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>ODataV4Adaptor</term>\r\n            <description>\r\n            ODatav4 Adaptor provies ability to consume and manipulate data from OData v4 services\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>WebApiAdaptor</term>\r\n            <description>\r\n            WebApi Adaptor provies ability to consume and manipulate data from WebApi services.\r\n            This adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>UrlAdaptor</term>\r\n            <description>\r\n            URL Adaptor is used when you are required to interact with all kind of remote services to retrieve data.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>RemoteSaveAdaptor</term>\r\n            <description>\r\n            Remote Save Adaptor is used for binding JSON data.\r\n            It interacts with remote services only for CRUD operations.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>CustomAdaptor</term>\r\n            <description>\r\n            CustomAdaptor specifies that own data query and manipulation logic has been provided using custom adaptor component\r\n            extended from DataAdaptor class.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>JsonAdaptor</term>\r\n            <description>\r\n            JsonAdaptor is used to process JSON data at the client side. It contains methods to process the given JSON data based on the queries.\r\n            </description>\r\n            </item>\r\n            </list>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Adaptors","Common.PropertyName":"Adaptor"}},{"Kind":"Components.Component","Name":"DataAdaptor","TypeName":"Syncfusion.Blazor.Data.IAdaptor","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.DataAdaptor\">\r\n            <summary>\r\n            Holds adaptor instance.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Data.IAdaptor","Common.PropertyName":"DataAdaptor"}},{"Kind":"Components.Component","Name":"InsertUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.InsertUrl\">\r\n            <summary>\r\n            Specifies the insert URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Insert method is called, request will be made to InsertUrl.\r\n            If InsertUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InsertUrl"}},{"Kind":"Components.Component","Name":"RemoveUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.RemoveUrl\">\r\n            <summary>\r\n            Specifies the remove URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Remove method is called, request will be made to RemoveUrl.\r\n            If RemoveUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RemoveUrl"}},{"Kind":"Components.Component","Name":"UpdateUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.UpdateUrl\">\r\n            <summary>\r\n            Specifies the update URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Update method is called, request will be made to UpdateUrl.\r\n            If UpdateUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"UpdateUrl"}},{"Kind":"Components.Component","Name":"CrudUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.CrudUrl\">\r\n            <summary>\r\n            Specifies the CRUD URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Insert, Remove or Update method is called, request will be made to CrudUrl.\r\n            If CrudUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"CrudUrl"}},{"Kind":"Components.Component","Name":"BatchUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.BatchUrl\">\r\n            <summary>\r\n            Specifies the batch url.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When SaveChanges method is called, request will be made to BatchUrl.\r\n            If BatchUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"BatchUrl"}},{"Kind":"Components.Component","Name":"Json","TypeName":"System.Collections.Generic.IEnumerable<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Json\">\r\n            <summary>\r\n            Specifies the IEnumerable collection. This data could be queried and manipulated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Object>","Common.PropertyName":"Json"}},{"Kind":"Components.Component","Name":"Headers","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Headers\">\r\n            <summary>\r\n            Specifies the key/value pair of headers.\r\n            </summary>\r\n            <remarks>\r\n            Use Headers to add any custom headers to the request made by DataManager.\r\n            Users can also send authentication bearer token using Headers property.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.String>","Common.PropertyName":"Headers"}},{"Kind":"Components.Component","Name":"Accept","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Accept\">\r\n            <summary>\r\n            Specifies the accept type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Accept"}},{"Kind":"Components.Component","Name":"Data","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Data\">\r\n            <summary>\r\n            Specifies the IEnumerale data.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Data"}},{"Kind":"Components.Component","Name":"TimeTillExpiration","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.TimeTillExpiration\">\r\n            <summary>\r\n            Specifies the time limit to clear the cached data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"TimeTillExpiration"}},{"Kind":"Components.Component","Name":"CachingPageSize","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.CachingPageSize\">\r\n            <summary>\r\n            Specifies the caching page size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"CachingPageSize"}},{"Kind":"Components.Component","Name":"EnableCaching","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.EnableCaching\">\r\n            <summary>\r\n            Enables data caching.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableCaching"}},{"Kind":"Components.Component","Name":"RequestType","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.RequestType\">\r\n            <summary>\r\n            Specifies the request type for sending data fetching.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RequestType"}},{"Kind":"Components.Component","Name":"Key","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Key\">\r\n            <summary>\r\n            Specifies the primary key value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Key"}},{"Kind":"Components.Component","Name":"CrossDomain","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.CrossDomain\">\r\n            <summary>\r\n            When true, then indicates that the request is a cross-domain request.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"CrossDomain"}},{"Kind":"Components.Component","Name":"Jsonp","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Jsonp\">\r\n            <summary>\r\n            Specifies the jsonp request.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Jsonp"}},{"Kind":"Components.Component","Name":"DataType","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.DataType\">\r\n            <summary>\r\n            Specifies the data type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DataType"}},{"Kind":"Components.Component","Name":"Offline","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Offline\">\r\n            <summary>\r\n            Enables offline mode in datamanager.\r\n            </summary>\r\n            <remarks>\r\n            Applicable for remote data source. If offline is true then initial request will be made to fetch\r\n            data. Further actions will be handled at the in-memory data and no more request will be made to the service.\r\n            Cached data is stored in the JSON property.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Offline"}},{"Kind":"Components.Component","Name":"RequiresFormat","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.RequiresFormat\">\r\n            <summary>\r\n            Sepcifies requires format.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"RequiresFormat"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.ChildContent\">\r\n            <summary>\r\n            Defines the child content.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Data","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Data.SfDataManager","Common.TypeNameIdentifier":"SfDataManager"}},{"HashCode":-1373981030,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Data.SfDataManager","AssemblyName":"Syncfusion.Blazor.Data","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Data.SfDataManager"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"HttpClientInstance","TypeName":"System.Net.Http.HttpClient","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.HttpClientInstance\">\r\n            <summary>\r\n            Specifies the HttpClient instance to be used  by DataManager.\r\n            </summary>\r\n            <remarks>Use HttpClientInstance property to inject named HttpClient into DataManager.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Net.Http.HttpClient","Common.PropertyName":"HttpClientInstance"}},{"Kind":"Components.Component","Name":"Url","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Url\">\r\n            <summary>\r\n            Specifies the endpoint URL. DataManager requests this URL when data is needed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Url"}},{"Kind":"Components.Component","Name":"AdaptorInstance","TypeName":"System.Type","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.AdaptorInstance\">\r\n            <summary>\r\n            Specifies the custom adaptor class type. DataManager uses this type value to instantiate custom adaptor class.\r\n            </summary>\r\n            <remarks>DataManager uses Activator.CreateInstance method to create custom adaptor instance.\r\n            Injecting services into custom adaptor class, is not supported while using this approach.\r\n            To inject and use services, provide custom adaptor as a Blazor component by extending DataAdaptor class.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Type","Common.PropertyName":"AdaptorInstance"}},{"Kind":"Components.Component","Name":"Adaptor","TypeName":"Syncfusion.Blazor.Adaptors","IsEnum":true,"Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Adaptor\">\r\n            <summary>\r\n            Gets or sets the data adaptor to be used by DataManager.\r\n            <list type=\"bullet\">\r\n            <item>\r\n            <term>BlazorAdaptor</term>\r\n            <description>Default. BlazorAdaptor is used to process Enumerable data. It contains methods to process the given collection based on the queries.</description>\r\n            </item>\r\n            <item>\r\n            <term>ODataAdaptor</term>\r\n            <description>\r\n            OData Adaptor provies ability to consume and manipulate data from OData services.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>ODataV4Adaptor</term>\r\n            <description>\r\n            ODatav4 Adaptor provies ability to consume and manipulate data from OData v4 services\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>WebApiAdaptor</term>\r\n            <description>\r\n            WebApi Adaptor provies ability to consume and manipulate data from WebApi services.\r\n            This adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>UrlAdaptor</term>\r\n            <description>\r\n            URL Adaptor is used when you are required to interact with all kind of remote services to retrieve data.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>RemoteSaveAdaptor</term>\r\n            <description>\r\n            Remote Save Adaptor is used for binding JSON data.\r\n            It interacts with remote services only for CRUD operations.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>CustomAdaptor</term>\r\n            <description>\r\n            CustomAdaptor specifies that own data query and manipulation logic has been provided using custom adaptor component\r\n            extended from DataAdaptor class.\r\n            </description>\r\n            </item>\r\n            <item>\r\n            <term>JsonAdaptor</term>\r\n            <description>\r\n            JsonAdaptor is used to process JSON data at the client side. It contains methods to process the given JSON data based on the queries.\r\n            </description>\r\n            </item>\r\n            </list>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Adaptors","Common.PropertyName":"Adaptor"}},{"Kind":"Components.Component","Name":"DataAdaptor","TypeName":"Syncfusion.Blazor.Data.IAdaptor","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.DataAdaptor\">\r\n            <summary>\r\n            Holds adaptor instance.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Syncfusion.Blazor.Data.IAdaptor","Common.PropertyName":"DataAdaptor"}},{"Kind":"Components.Component","Name":"InsertUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.InsertUrl\">\r\n            <summary>\r\n            Specifies the insert URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Insert method is called, request will be made to InsertUrl.\r\n            If InsertUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"InsertUrl"}},{"Kind":"Components.Component","Name":"RemoveUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.RemoveUrl\">\r\n            <summary>\r\n            Specifies the remove URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Remove method is called, request will be made to RemoveUrl.\r\n            If RemoveUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RemoveUrl"}},{"Kind":"Components.Component","Name":"UpdateUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.UpdateUrl\">\r\n            <summary>\r\n            Specifies the update URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Update method is called, request will be made to UpdateUrl.\r\n            If UpdateUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"UpdateUrl"}},{"Kind":"Components.Component","Name":"CrudUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.CrudUrl\">\r\n            <summary>\r\n            Specifies the CRUD URL.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When Insert, Remove or Update method is called, request will be made to CrudUrl.\r\n            If CrudUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"CrudUrl"}},{"Kind":"Components.Component","Name":"BatchUrl","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.BatchUrl\">\r\n            <summary>\r\n            Specifies the batch url.\r\n            </summary>\r\n            <remarks>Applicable for remote adaptors.\r\n            When SaveChanges method is called, request will be made to BatchUrl.\r\n            If BatchUrl is not provided, Url is used as fallback.</remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"BatchUrl"}},{"Kind":"Components.Component","Name":"Json","TypeName":"System.Collections.Generic.IEnumerable<System.Object>","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Json\">\r\n            <summary>\r\n            Specifies the IEnumerable collection. This data could be queried and manipulated.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Object>","Common.PropertyName":"Json"}},{"Kind":"Components.Component","Name":"Headers","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Headers\">\r\n            <summary>\r\n            Specifies the key/value pair of headers.\r\n            </summary>\r\n            <remarks>\r\n            Use Headers to add any custom headers to the request made by DataManager.\r\n            Users can also send authentication bearer token using Headers property.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.String>","Common.PropertyName":"Headers"}},{"Kind":"Components.Component","Name":"Accept","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Accept\">\r\n            <summary>\r\n            Specifies the accept type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Accept"}},{"Kind":"Components.Component","Name":"Data","TypeName":"System.Object","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Data\">\r\n            <summary>\r\n            Specifies the IEnumerale data.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Data"}},{"Kind":"Components.Component","Name":"TimeTillExpiration","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.TimeTillExpiration\">\r\n            <summary>\r\n            Specifies the time limit to clear the cached data.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"TimeTillExpiration"}},{"Kind":"Components.Component","Name":"CachingPageSize","TypeName":"System.Int32","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.CachingPageSize\">\r\n            <summary>\r\n            Specifies the caching page size.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"CachingPageSize"}},{"Kind":"Components.Component","Name":"EnableCaching","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.EnableCaching\">\r\n            <summary>\r\n            Enables data caching.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"EnableCaching"}},{"Kind":"Components.Component","Name":"RequestType","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.RequestType\">\r\n            <summary>\r\n            Specifies the request type for sending data fetching.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"RequestType"}},{"Kind":"Components.Component","Name":"Key","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Key\">\r\n            <summary>\r\n            Specifies the primary key value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Key"}},{"Kind":"Components.Component","Name":"CrossDomain","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.CrossDomain\">\r\n            <summary>\r\n            When true, then indicates that the request is a cross-domain request.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"CrossDomain"}},{"Kind":"Components.Component","Name":"Jsonp","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Jsonp\">\r\n            <summary>\r\n            Specifies the jsonp request.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Jsonp"}},{"Kind":"Components.Component","Name":"DataType","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.DataType\">\r\n            <summary>\r\n            Specifies the data type.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DataType"}},{"Kind":"Components.Component","Name":"Offline","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.Offline\">\r\n            <summary>\r\n            Enables offline mode in datamanager.\r\n            </summary>\r\n            <remarks>\r\n            Applicable for remote data source. If offline is true then initial request will be made to fetch\r\n            data. Further actions will be handled at the in-memory data and no more request will be made to the service.\r\n            Cached data is stored in the JSON property.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Offline"}},{"Kind":"Components.Component","Name":"RequiresFormat","TypeName":"System.Boolean","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.RequiresFormat\">\r\n            <summary>\r\n            Sepcifies requires format.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"RequiresFormat"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.ChildContent\">\r\n            <summary>\r\n            Defines the child content.\r\n            </summary>\r\n            <exclude />\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Data","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Data.SfDataManager","Common.TypeNameIdentifier":"SfDataManager"}},{"HashCode":1728561028,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Data.SfDataManager.ChildContent","AssemblyName":"Syncfusion.Blazor.Data","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.ChildContent\">\r\n            <summary>\r\n            Defines the child content.\r\n            </summary>\r\n            <exclude />\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SfDataManager"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Data","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Data.SfDataManager.ChildContent","Common.TypeNameIdentifier":"SfDataManager"}},{"HashCode":-1066872695,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.Data.SfDataManager.ChildContent","AssemblyName":"Syncfusion.Blazor.Data","Documentation":"<member name=\"P:Syncfusion.Blazor.DataManager.ChildContent\">\r\n            <summary>\r\n            Defines the child content.\r\n            </summary>\r\n            <exclude />\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.Data.SfDataManager"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Data","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.Data.SfDataManager.ChildContent","Common.TypeNameIdentifier":"SfDataManager"}},{"HashCode":298561652,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Internal.JSInteropAdaptor","AssemblyName":"Syncfusion.Blazor.Data","Documentation":"<member name=\"T:Syncfusion.Blazor.Internal.JSInteropAdaptor\">\r\n            <summary>\r\n            Custom handler of JSInterop to invoke the JavaScript methods with DotNetObjectReference.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"JSInteropAdaptor"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Internal.JSInteropAdaptor","Common.TypeNameIdentifier":"JSInteropAdaptor"}},{"HashCode":-204241177,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Internal.JSInteropAdaptor","AssemblyName":"Syncfusion.Blazor.Data","Documentation":"<member name=\"T:Syncfusion.Blazor.Internal.JSInteropAdaptor\">\r\n            <summary>\r\n            Custom handler of JSInterop to invoke the JavaScript methods with DotNetObjectReference.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Internal.JSInteropAdaptor"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Internal.JSInteropAdaptor","Common.TypeNameIdentifier":"JSInteropAdaptor"}},{"HashCode":456704173,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","AssemblyName":"Microsoft.AspNetCore.Components.Forms","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator\">\r\n            <summary>\r\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DataAnnotationsValidator"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","Common.TypeNameIdentifier":"DataAnnotationsValidator"}},{"HashCode":1602179958,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","AssemblyName":"Microsoft.AspNetCore.Components.Forms","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator\">\r\n            <summary>\r\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator","Common.TypeNameIdentifier":"DataAnnotationsValidator"}},{"HashCode":1940007618,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView\">\r\n             <summary>\r\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\r\n             so that it displays the page matching the specified route but only if the user\r\n             is authorized to see it.\r\n            \r\n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\r\n             which makes the user's current authentication state available to descendants.\r\n             </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Common.PropertyName":"NotAuthorized"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"Authorizing"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Resource"}},{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData","Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Type","Common.PropertyName":"DefaultLayout"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","Common.TypeNameIdentifier":"AuthorizeRouteView"}},{"HashCode":-792368137,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView\">\r\n             <summary>\r\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\r\n             so that it displays the page matching the specified route but only if the user\r\n             is authorized to see it.\r\n            \r\n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\r\n             which makes the user's current authentication state available to descendants.\r\n             </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Common.PropertyName":"NotAuthorized"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"Authorizing"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Resource"}},{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData","Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Type","Common.PropertyName":"DefaultLayout"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView","Common.TypeNameIdentifier":"AuthorizeRouteView"}},{"HashCode":-199390266,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NotAuthorized' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","Common.TypeNameIdentifier":"AuthorizeRouteView"}},{"HashCode":-433760116,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NotAuthorized' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized","Common.TypeNameIdentifier":"AuthorizeRouteView"}},{"HashCode":1972501356,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"AuthorizeRouteView"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","Common.TypeNameIdentifier":"AuthorizeRouteView"}},{"HashCode":1005752647,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing","Common.TypeNameIdentifier":"AuthorizeRouteView"}},{"HashCode":-1386055935,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\">\r\n            <summary>\r\n            Displays differing content depending on the user's authorization status.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Policy","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Policy\">\r\n            <summary>\r\n            The policy name that determines whether the content can be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Policy"}},{"Kind":"Components.Component","Name":"Roles","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Roles\">\r\n            <summary>\r\n            A comma delimited list of roles that are allowed to display the content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Roles"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Common.PropertyName":"NotAuthorized"}},{"Kind":"Components.Component","Name":"Authorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Common.PropertyName":"Authorized"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"Authorizing"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Resource"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","Common.TypeNameIdentifier":"AuthorizeView"}},{"HashCode":-366856331,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\">\r\n            <summary>\r\n            Displays differing content depending on the user's authorization status.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Policy","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Policy\">\r\n            <summary>\r\n            The policy name that determines whether the content can be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Policy"}},{"Kind":"Components.Component","Name":"Roles","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Roles\">\r\n            <summary>\r\n            A comma delimited list of roles that are allowed to display the content.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Roles"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"NotAuthorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Common.PropertyName":"NotAuthorized"}},{"Kind":"Components.Component","Name":"Authorized","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>","Common.PropertyName":"Authorized"}},{"Kind":"Components.Component","Name":"Authorizing","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"Authorizing"}},{"Kind":"Components.Component","Name":"Resource","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Resource\">\r\n            <summary>\r\n            The resource to which access is being controlled.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Resource"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView","Common.TypeNameIdentifier":"AuthorizeView"}},{"HashCode":-2126992260,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","Common.TypeNameIdentifier":"AuthorizeView"}},{"HashCode":-480051696,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent","Common.TypeNameIdentifier":"AuthorizeView"}},{"HashCode":1153701438,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NotAuthorized' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","Common.TypeNameIdentifier":"AuthorizeView"}},{"HashCode":1947491960,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.NotAuthorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is not authorized.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotAuthorized","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'NotAuthorized' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized","Common.TypeNameIdentifier":"AuthorizeView"}},{"HashCode":-1023823014,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorized","ParentTag":"AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Authorized' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","Common.TypeNameIdentifier":"AuthorizeView"}},{"HashCode":-1583319627,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorized\">\r\n            <summary>\r\n            The content that will be displayed if the user is authorized.\r\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorized","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Authorized' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized","Common.TypeNameIdentifier":"AuthorizeView"}},{"HashCode":243149576,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"AuthorizeView"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","Common.TypeNameIdentifier":"AuthorizeView"}},{"HashCode":-1100011753,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.Authorizing\">\r\n            <summary>\r\n            The content that will be displayed while asynchronous authorization is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Authorizing","ParentTag":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing","Common.TypeNameIdentifier":"AuthorizeView"}},{"HashCode":908179135,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CascadingAuthenticationState"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","Common.TypeNameIdentifier":"CascadingAuthenticationState"}},{"HashCode":-1215977598,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState","Common.TypeNameIdentifier":"CascadingAuthenticationState"}},{"HashCode":984151807,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CascadingAuthenticationState"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","Common.TypeNameIdentifier":"CascadingAuthenticationState"}},{"HashCode":-2143412950,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Authorization","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent\">\r\n            <summary>\r\n            The content to which the authentication state should be provided.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Authorization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent","Common.TypeNameIdentifier":"CascadingAuthenticationState"}},{"HashCode":-572663461,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.EditForm","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\">\r\n            <summary>\r\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"EditForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\">\r\n            <summary>\r\n            Supplies the edit context explicitly. If using this parameter, do not\r\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\r\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext","Common.PropertyName":"EditContext"}},{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\">\r\n            <summary>\r\n            Specifies the top-level model object for the form. An edit context will\r\n            be constructed for this model. If using this parameter, do not also supply\r\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"OnSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnSubmit\">\r\n             <summary>\r\n             A callback that will be invoked when the form is submitted.\r\n            \r\n             If using this parameter, you are responsible for triggering any validation\r\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\r\n             </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Common.PropertyName":"OnSubmit"}},{"Kind":"Components.Component","Name":"OnValidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnValidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Common.PropertyName":"OnValidSubmit"}},{"Kind":"Components.Component","Name":"OnInvalidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnInvalidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Common.PropertyName":"OnInvalidSubmit"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm","Common.TypeNameIdentifier":"EditForm"}},{"HashCode":-588114541,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.EditForm","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\">\r\n            <summary>\r\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.EditForm"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"EditContext","TypeName":"Microsoft.AspNetCore.Components.Forms.EditContext","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\">\r\n            <summary>\r\n            Supplies the edit context explicitly. If using this parameter, do not\r\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\r\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.EditContext","Common.PropertyName":"EditContext"}},{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\">\r\n            <summary>\r\n            Specifies the top-level model object for the form. An edit context will\r\n            be constructed for this model. If using this parameter, do not also supply\r\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"OnSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnSubmit\">\r\n             <summary>\r\n             A callback that will be invoked when the form is submitted.\r\n            \r\n             If using this parameter, you are responsible for triggering any validation\r\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\r\n             </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Common.PropertyName":"OnSubmit"}},{"Kind":"Components.Component","Name":"OnValidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnValidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Common.PropertyName":"OnValidSubmit"}},{"Kind":"Components.Component","Name":"OnInvalidSubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.OnInvalidSubmit\">\r\n            <summary>\r\n            A callback that will be invoked when the form is submitted and the\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>","Common.PropertyName":"OnInvalidSubmit"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm","Common.TypeNameIdentifier":"EditForm"}},{"HashCode":924762995,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"EditForm"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","Common.TypeNameIdentifier":"EditForm"}},{"HashCode":1969597621,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent\">\r\n            <summary>\r\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.EditForm"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent","Common.TypeNameIdentifier":"EditForm"}},{"HashCode":-1362667734,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputCheckbox\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputCheckbox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Common.TypeNameIdentifier":"InputCheckbox"}},{"HashCode":390316276,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputCheckbox\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.Boolean>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Common.TypeNameIdentifier":"InputCheckbox"}},{"HashCode":-1311768412,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputDate`1\">\r\n            <summary>\r\n            An input component for editing date values.\r\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputDate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Microsoft.AspNetCore.Components.Forms.InputDateType","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.Type\">\r\n            <summary>\r\n            Gets or sets the type of HTML input to be rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.InputDateType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ParsingErrorMessage"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"InputDate"}},{"HashCode":-27656975,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputDate`1\">\r\n            <summary>\r\n            An input component for editing date values.\r\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"Type","TypeName":"Microsoft.AspNetCore.Components.Forms.InputDateType","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.Type\">\r\n            <summary>\r\n            Gets or sets the type of HTML input to be rendered.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Forms.InputDateType","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputDate`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ParsingErrorMessage"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"InputDate"}},{"HashCode":512248358,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputFile","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputFile\">\r\n            <summary>\r\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputFile"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.OnChange\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Common.PropertyName":"OnChange"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputFile","Common.TypeNameIdentifier":"InputFile"}},{"HashCode":-793686601,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputFile","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputFile\">\r\n            <summary>\r\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputFile"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"OnChange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.OnChange\">\r\n            <summary>\r\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>","Common.PropertyName":"OnChange"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputFile.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputFile","Common.TypeNameIdentifier":"InputFile"}},{"HashCode":983649175,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputNumber`1\">\r\n            <summary>\r\n            An input component for editing numeric values.\r\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputNumber"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputNumber`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ParsingErrorMessage"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"InputNumber"}},{"HashCode":-556115839,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputNumber`1\">\r\n            <summary>\r\n            An input component for editing numeric values.\r\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ParsingErrorMessage","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputNumber`1.ParsingErrorMessage\">\r\n            <summary>\r\n            Gets or sets the error message used when displaying an a parsing error.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ParsingErrorMessage"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"InputNumber"}},{"HashCode":323724845,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\">\r\n            <summary>\r\n            An input component used for selecting a value from a group of choices.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadio"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadio<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of this input.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the parent input radio group.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"InputRadio"}},{"HashCode":1048570729,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\">\r\n            <summary>\r\n            An input component used for selecting a value from a group of choices.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadio"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadio<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the input element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of this input.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadio`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the parent input radio group.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"InputRadio"}},{"HashCode":3845135,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\">\r\n            <summary>\r\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadioGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the group.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"InputRadioGroup"}},{"HashCode":-325820364,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\">\r\n            <summary>\r\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.Name\">\r\n            <summary>\r\n            Gets or sets the name of the group.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"InputRadioGroup"}},{"HashCode":68095476,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"InputRadioGroup"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","Common.TypeNameIdentifier":"InputRadioGroup"}},{"HashCode":-2140436893,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent","Common.TypeNameIdentifier":"InputRadioGroup"}},{"HashCode":501651446,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputSelect`1\">\r\n            <summary>\r\n            A dropdown selection component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"InputSelect"}},{"HashCode":-1014469851,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputSelect`1\">\r\n            <summary>\r\n            A dropdown selection component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<TValue>","Components.GenericTyped":"True","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"InputSelect"}},{"HashCode":-2086620057,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"InputSelect"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","Common.TypeNameIdentifier":"InputSelect"}},{"HashCode":240832860,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputSelect`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content to be rendering inside the select element.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Forms.InputSelect"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent","Common.TypeNameIdentifier":"InputSelect"}},{"HashCode":-1352458492,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputText\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Common.TypeNameIdentifier":"InputText"}},{"HashCode":-226117494,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputText\">\r\n            <summary>\r\n            An input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Common.TypeNameIdentifier":"InputText"}},{"HashCode":-1100667989,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputTextArea\">\r\n            <summary>\r\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputTextArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Common.TypeNameIdentifier":"InputTextArea"}},{"HashCode":919219871,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.InputTextArea\">\r\n            <summary>\r\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"Value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.Value\">\r\n            <summary>\r\n            Gets or sets the value of the input. This should be used with two-way binding.\r\n            </summary>\r\n            <example>\r\n            @bind-Value=\"model.PropertyName\"\r\n            </example>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"ValueChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueChanged\">\r\n            <summary>\r\n            Gets or sets a callback that updates the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Common.PropertyName":"ValueChanged"}},{"Kind":"Components.Component","Name":"ValueExpression","TypeName":"System.Linq.Expressions.Expression<System.Func<System.String>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.ValueExpression\">\r\n            <summary>\r\n            Gets or sets an expression that identifies the bound value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>","Common.PropertyName":"ValueExpression"}},{"Kind":"Components.Component","Name":"DisplayName","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.InputBase`1.DisplayName\">\r\n            <summary>\r\n            Gets or sets the display name for this field.\r\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DisplayName"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Common.TypeNameIdentifier":"InputTextArea"}},{"HashCode":-1478366108,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1\">\r\n            <summary>\r\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValidationMessage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.For\">\r\n            <summary>\r\n            Specifies the field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"For"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"ValidationMessage"}},{"HashCode":-1327564734,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1\">\r\n            <summary>\r\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"For","TypeName":"System.Linq.Expressions.Expression<System.Func<TValue>>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationMessage`1.For\">\r\n            <summary>\r\n            Specifies the field for which validation messages should be displayed.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Linq.Expressions.Expression<global::System.Func<TValue>>","Components.GenericTyped":"True","Common.PropertyName":"For"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"ValidationMessage"}},{"HashCode":-1104507193,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationSummary\">\r\n            <summary>\r\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ValidationSummary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.Model\">\r\n            <summary>\r\n            Gets or sets the model to produce the list of validation messages for.\r\n            When specified, this lists all errors that are associated with the model instance.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","Common.TypeNameIdentifier":"ValidationSummary"}},{"HashCode":-1607129185,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Forms.ValidationSummary\">\r\n            <summary>\r\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Model","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.Model\">\r\n            <summary>\r\n            Gets or sets the model to produce the list of validation messages for.\r\n            When specified, this lists all errors that are associated with the model instance.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Object","Common.PropertyName":"Model"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Forms.ValidationSummary.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.ValidationSummary","Common.TypeNameIdentifier":"ValidationSummary"}},{"HashCode":27695941,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate\">\r\n            <summary>\r\n            After navigating from one page to another, sets focus to an element\r\n            matching a CSS selector. This can be used to build an accessible\r\n            navigation system compatible with screen readers.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"FocusOnNavigate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This can be obtained from an enclosing\r\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData","Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"Selector","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.Selector\">\r\n            <summary>\r\n            Gets or sets a CSS selector describing the element to be focused after\r\n            navigation between pages.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Selector"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","Common.TypeNameIdentifier":"FocusOnNavigate"}},{"HashCode":1693734471,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate\">\r\n            <summary>\r\n            After navigating from one page to another, sets focus to an element\r\n            matching a CSS selector. This can be used to build an accessible\r\n            navigation system compatible with screen readers.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This can be obtained from an enclosing\r\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData","Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"Selector","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.FocusOnNavigate.Selector\">\r\n            <summary>\r\n            Gets or sets a CSS selector describing the element to be focused after\r\n            navigation between pages.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Selector"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.FocusOnNavigate","Common.TypeNameIdentifier":"FocusOnNavigate"}},{"HashCode":-402700225,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavLink","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\">\r\n            <summary>\r\n            A component that renders an anchor tag, automatically toggling its 'active'\r\n            class based on whether its 'href' matches the current URI.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveClass","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ActiveClass\">\r\n            <summary>\r\n            Gets or sets the CSS class name applied to the NavLink when the\r\n            current route matches the NavLink href.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ActiveClass"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be added to the generated\r\n            <c>a</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.Match\">\r\n            <summary>\r\n            Gets or sets a value representing the URL matching behavior.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch","Common.PropertyName":"Match"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink","Common.TypeNameIdentifier":"NavLink"}},{"HashCode":1531657519,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.NavLink","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.NavLink\">\r\n            <summary>\r\n            A component that renders an anchor tag, automatically toggling its 'active'\r\n            class based on whether its 'href' matches the current URI.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.NavLink"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveClass","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ActiveClass\">\r\n            <summary>\r\n            Gets or sets the CSS class name applied to the NavLink when the\r\n            current route matches the NavLink href.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ActiveClass"}},{"Kind":"Components.Component","Name":"AdditionalAttributes","TypeName":"System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.AdditionalAttributes\">\r\n            <summary>\r\n            Gets or sets a collection of additional attributes that will be added to the generated\r\n            <c>a</c> element.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>","Common.PropertyName":"AdditionalAttributes"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Match","TypeName":"Microsoft.AspNetCore.Components.Routing.NavLinkMatch","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.Match\">\r\n            <summary>\r\n            Gets or sets a value representing the URL matching behavior.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch","Common.PropertyName":"Match"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink","Common.TypeNameIdentifier":"NavLink"}},{"HashCode":-446411434,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"NavLink"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","Common.TypeNameIdentifier":"NavLink"}},{"HashCode":-1030631652,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent\">\r\n            <summary>\r\n            Gets or sets the child content of the component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Routing.NavLink"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent","Common.TypeNameIdentifier":"NavLink"}},{"HashCode":-1520898206,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\">\r\n            <summary>\r\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeadContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent","Common.TypeNameIdentifier":"HeadContent"}},{"HashCode":-618466065,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\">\r\n            <summary>\r\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.HeadContent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent","Common.TypeNameIdentifier":"HeadContent"}},{"HashCode":319822320,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"HeadContent"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","Common.TypeNameIdentifier":"HeadContent"}},{"HashCode":-749425297,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.HeadContent"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent","Common.TypeNameIdentifier":"HeadContent"}},{"HashCode":-2072687175,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadOutlet","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\">\r\n            <summary>\r\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"HeadOutlet"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadOutlet","Common.TypeNameIdentifier":"HeadOutlet"}},{"HashCode":-1202216091,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.HeadOutlet","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\">\r\n            <summary>\r\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.HeadOutlet"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.HeadOutlet","Common.TypeNameIdentifier":"HeadOutlet"}},{"HashCode":-1102488851,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.PageTitle","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.PageTitle\">\r\n            <summary>\r\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"PageTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle","Common.TypeNameIdentifier":"PageTitle"}},{"HashCode":1156767528,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.PageTitle","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.PageTitle\">\r\n            <summary>\r\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.PageTitle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle","Common.TypeNameIdentifier":"PageTitle"}},{"HashCode":-894340878,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"PageTitle"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","Common.TypeNameIdentifier":"PageTitle"}},{"HashCode":-1244735021,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to be rendered as the document title.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.PageTitle"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent","Common.TypeNameIdentifier":"PageTitle"}},{"HashCode":-985770859,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.ErrorBoundary\">\r\n            <summary>\r\n            Captures errors thrown from its child content.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ErrorContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Exception>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Exception>","Common.PropertyName":"ErrorContent"}},{"Kind":"Components.Component","Name":"MaximumErrorCount","TypeName":"System.Int32","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.MaximumErrorCount\">\r\n            <summary>\r\n            The maximum number of errors that can be handled. If more errors are received,\r\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"MaximumErrorCount"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","Common.TypeNameIdentifier":"ErrorBoundary"}},{"HashCode":-280642229,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.ErrorBoundary\">\r\n            <summary>\r\n            Captures errors thrown from its child content.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ErrorContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<System.Exception>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Exception>","Common.PropertyName":"ErrorContent"}},{"Kind":"Components.Component","Name":"MaximumErrorCount","TypeName":"System.Int32","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.MaximumErrorCount\">\r\n            <summary>\r\n            The maximum number of errors that can be handled. If more errors are received,\r\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"MaximumErrorCount"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary","Common.TypeNameIdentifier":"ErrorBoundary"}},{"HashCode":-835195399,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"ErrorBoundary"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","Common.TypeNameIdentifier":"ErrorBoundary"}},{"HashCode":-1192805258,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ChildContent\">\r\n            <summary>\r\n            The content to be displayed when there is no error.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent","Common.TypeNameIdentifier":"ErrorBoundary"}},{"HashCode":-342031245,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorContent","ParentTag":"ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ErrorContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","Common.TypeNameIdentifier":"ErrorBoundary"}},{"HashCode":-1147300225,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.ErrorBoundaryBase.ErrorContent\">\r\n            <summary>\r\n            The content to be displayed when there is an error.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ErrorContent","ParentTag":"Microsoft.AspNetCore.Components.Web.ErrorBoundary"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ErrorContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent","Common.TypeNameIdentifier":"ErrorBoundary"}},{"HashCode":-1986957815,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1\">\r\n            <summary>\r\n            Provides functionality for rendering a virtualized list of items.\r\n            </summary>\r\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ItemContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ItemContent"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"ItemSize","TypeName":"System.Single","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemSize\">\r\n            <summary>\r\n            Gets the size of each item in pixels. Defaults to 50px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Single","Common.PropertyName":"ItemSize"}},{"Kind":"Components.Component","Name":"ItemsProvider","TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemsProvider\">\r\n            <summary>\r\n            Gets or sets the function providing items to the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True","Components.GenericTyped":"True","Common.PropertyName":"ItemsProvider"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.ICollection<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Items\">\r\n            <summary>\r\n            Gets or sets the fixed item source.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.ICollection<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.OverscanCount\">\r\n            <summary>\r\n            Gets or sets a value that determines how many additional items will be rendered\r\n            before and after the visible region. This help to reduce the frequency of rendering\r\n            during scrolling. However, higher values mean that more elements will be present\r\n            in the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"OverscanCount"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"Virtualize"}},{"HashCode":-554708338,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1\">\r\n            <summary>\r\n            Provides functionality for rendering a virtualized list of items.\r\n            </summary>\r\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TItem","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TItem for the Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TItem"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"ItemContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<TItem>","Components.GenericTyped":"True","Common.PropertyName":"ItemContent"}},{"Kind":"Components.Component","Name":"Placeholder","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>","Common.PropertyName":"Placeholder"}},{"Kind":"Components.Component","Name":"ItemSize","TypeName":"System.Single","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemSize\">\r\n            <summary>\r\n            Gets the size of each item in pixels. Defaults to 50px.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Single","Common.PropertyName":"ItemSize"}},{"Kind":"Components.Component","Name":"ItemsProvider","TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemsProvider\">\r\n            <summary>\r\n            Gets or sets the function providing items to the list.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>","Components.DelegateSignature":"True","Components.IsDelegateAwaitableResult":"True","Components.GenericTyped":"True","Common.PropertyName":"ItemsProvider"}},{"Kind":"Components.Component","Name":"Items","TypeName":"System.Collections.Generic.ICollection<TItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Items\">\r\n            <summary>\r\n            Gets or sets the fixed item source.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.ICollection<TItem>","Components.GenericTyped":"True","Common.PropertyName":"Items"}},{"Kind":"Components.Component","Name":"OverscanCount","TypeName":"System.Int32","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.OverscanCount\">\r\n            <summary>\r\n            Gets or sets a value that determines how many additional items will be rendered\r\n            before and after the visible region. This help to reduce the frequency of rendering\r\n            during scrolling. However, higher values mean that more elements will be present\r\n            in the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Int32","Common.PropertyName":"OverscanCount"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"Virtualize"}},{"HashCode":1718389561,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","Common.TypeNameIdentifier":"Virtualize"}},{"HashCode":-1949831978,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ChildContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ChildContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent","Common.TypeNameIdentifier":"Virtualize"}},{"HashCode":1203803959,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemContent","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","Common.TypeNameIdentifier":"Virtualize"}},{"HashCode":-2031543214,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.ItemContent\">\r\n            <summary>\r\n            Gets or sets the item template for the list.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ItemContent","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'ItemContent' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent","Common.TypeNameIdentifier":"Virtualize"}},{"HashCode":-14890901,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Placeholder","ParentTag":"Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Placeholder' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","Common.TypeNameIdentifier":"Virtualize"}},{"HashCode":520927092,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize`1.Placeholder\">\r\n            <summary>\r\n            Gets or sets the template for items that have not yet been loaded in memory.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Placeholder","ParentTag":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Placeholder' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web.Virtualization","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder","Common.TypeNameIdentifier":"Virtualize"}},{"HashCode":-977639569,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.CascadingValue`1\">\r\n            <summary>\r\n            A component that provides a cascading value to all descendant components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"CascadingValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\">\r\n            <summary>\r\n            The value to be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Name\">\r\n             <summary>\r\n             Optionally gives a name to the provided value. Descendant components\r\n             will be able to receive the value by specifying this name.\r\n            \r\n             If no name is specified, then descendant components will receive the\r\n             value based the type of value they are requesting.\r\n             </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"IsFixed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.IsFixed\">\r\n            <summary>\r\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\r\n            performance optimization that allows the framework to skip setting up\r\n            change notifications. Set this flag only if you will not change\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsFixed"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"CascadingValue"}},{"HashCode":202740433,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.CascadingValue`1\">\r\n            <summary>\r\n            A component that provides a cascading value to all descendant components.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.CascadingValue"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"TValue","TypeName":"System.Type","Documentation":"Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.","Metadata":{"Components.TypeParameterIsCascading":"False","Components.TypeParameter":"True","Common.PropertyName":"TValue"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Value","TypeName":"TValue","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\">\r\n            <summary>\r\n            The value to be provided.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"TValue","Components.GenericTyped":"True","Common.PropertyName":"Value"}},{"Kind":"Components.Component","Name":"Name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Name\">\r\n             <summary>\r\n             Optionally gives a name to the provided value. Descendant components\r\n             will be able to receive the value by specifying this name.\r\n            \r\n             If no name is specified, then descendant components will receive the\r\n             value based the type of value they are requesting.\r\n             </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Name"}},{"Kind":"Components.Component","Name":"IsFixed","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.IsFixed\">\r\n            <summary>\r\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\r\n            performance optimization that allows the framework to skip setting up\r\n            change notifications. Set this flag only if you will not change\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"IsFixed"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>","Components.GenericTyped":"True","Common.TypeNameIdentifier":"CascadingValue"}},{"HashCode":1233880042,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"CascadingValue"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","Common.TypeNameIdentifier":"CascadingValue"}},{"HashCode":-768078150,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.ChildContent\">\r\n            <summary>\r\n            The content to which the value should be provided.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.CascadingValue"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent","Common.TypeNameIdentifier":"CascadingValue"}},{"HashCode":137251201,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.DynamicComponent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.DynamicComponent\">\r\n            <summary>\r\n            A component that renders another component dynamically according to its\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"DynamicComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"System.Type","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\">\r\n            <summary>\r\n            Gets or sets the type of the component to be rendered. The supplied type must\r\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Type","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Parameters","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Parameters\">\r\n            <summary>\r\n            Gets or sets a dictionary of parameters to be passed to the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"Parameters"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.DynamicComponent","Common.TypeNameIdentifier":"DynamicComponent"}},{"HashCode":143663655,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.DynamicComponent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.DynamicComponent\">\r\n            <summary>\r\n            A component that renders another component dynamically according to its\r\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.DynamicComponent"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Type","TypeName":"System.Type","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\">\r\n            <summary>\r\n            Gets or sets the type of the component to be rendered. The supplied type must\r\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Type","Common.PropertyName":"Type"}},{"Kind":"Components.Component","Name":"Parameters","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Parameters\">\r\n            <summary>\r\n            Gets or sets a dictionary of parameters to be passed to the component.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>","Common.PropertyName":"Parameters"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.DynamicComponent","Common.TypeNameIdentifier":"DynamicComponent"}},{"HashCode":2036585645,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.LayoutView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.LayoutView\">\r\n            <summary>\r\n            Displays the specified content inside the specified layout and any further\r\n            nested layouts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"LayoutView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Layout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.Layout\">\r\n            <summary>\r\n            Gets or sets the type of the layout in which to display the content.\r\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Type","Common.PropertyName":"Layout"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView","Common.TypeNameIdentifier":"LayoutView"}},{"HashCode":1906187394,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.LayoutView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.LayoutView\">\r\n            <summary>\r\n            Displays the specified content inside the specified layout and any further\r\n            nested layouts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.LayoutView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"Layout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.Layout\">\r\n            <summary>\r\n            Gets or sets the type of the layout in which to display the content.\r\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Type","Common.PropertyName":"Layout"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView","Common.TypeNameIdentifier":"LayoutView"}},{"HashCode":-1002655453,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"LayoutView"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","Common.TypeNameIdentifier":"LayoutView"}},{"HashCode":1897224314,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.LayoutView.ChildContent\">\r\n            <summary>\r\n            Gets or sets the content to display.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Microsoft.AspNetCore.Components.LayoutView"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.LayoutView.ChildContent","Common.TypeNameIdentifier":"LayoutView"}},{"HashCode":755423178,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.RouteView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.RouteView\">\r\n            <summary>\r\n            Displays the specified page component, rendering it inside its layout\r\n            and any further nested layouts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"RouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData","Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Type","Common.PropertyName":"DefaultLayout"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.RouteView","Common.TypeNameIdentifier":"RouteView"}},{"HashCode":-635781978,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.RouteView","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.RouteView\">\r\n            <summary>\r\n            Displays the specified page component, rendering it inside its layout\r\n            and any further nested layouts.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.RouteView"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"RouteData","TypeName":"Microsoft.AspNetCore.Components.RouteData","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.RouteData\">\r\n            <summary>\r\n            Gets or sets the route data. This determines the page that will be\r\n            displayed and the parameter values that will be supplied to the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RouteData","Common.PropertyName":"RouteData"}},{"Kind":"Components.Component","Name":"DefaultLayout","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.RouteView.DefaultLayout\">\r\n            <summary>\r\n            Gets or sets the type of a layout to be used if the page does not\r\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\r\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Type","Common.PropertyName":"DefaultLayout"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.RouteView","Common.TypeNameIdentifier":"RouteView"}},{"HashCode":1587649487,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.Router","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.Router\">\r\n            <summary>\r\n            A component that supplies route data corresponding to the current navigation state.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Router"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AppAssembly","TypeName":"System.Reflection.Assembly","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AppAssembly\">\r\n            <summary>\r\n            Gets or sets the assembly that should be searched for components matching the URI.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Reflection.Assembly","Common.PropertyName":"AppAssembly"}},{"Kind":"Components.Component","Name":"AdditionalAssemblies","TypeName":"System.Collections.Generic.IEnumerable<System.Reflection.Assembly>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AdditionalAssemblies\">\r\n            <summary>\r\n            Gets or sets a collection of additional assemblies that should be searched for components\r\n            that can match URIs.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Reflection.Assembly>","Common.PropertyName":"AdditionalAssemblies"}},{"Kind":"Components.Component","Name":"NotFound","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"NotFound"}},{"Kind":"Components.Component","Name":"Found","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.RouteData>","Common.PropertyName":"Found"}},{"Kind":"Components.Component","Name":"Navigating","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"Navigating"}},{"Kind":"Components.Component","Name":"OnNavigateAsync","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.OnNavigateAsync\">\r\n            <summary>\r\n            Gets or sets a handler that should be called before navigating to a new page.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.NavigationContext>","Common.PropertyName":"OnNavigateAsync"}},{"Kind":"Components.Component","Name":"PreferExactMatches","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.PreferExactMatches\">\r\n            <summary>\r\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\r\n            over wildcards.\r\n            <para>This property is obsolete and configuring it does nothing.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"PreferExactMatches"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router","Common.TypeNameIdentifier":"Router"}},{"HashCode":-1152193607,"Kind":"Components.Component","Name":"Microsoft.AspNetCore.Components.Routing.Router","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"T:Microsoft.AspNetCore.Components.Routing.Router\">\r\n            <summary>\r\n            A component that supplies route data corresponding to the current navigation state.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Routing.Router"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AppAssembly","TypeName":"System.Reflection.Assembly","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AppAssembly\">\r\n            <summary>\r\n            Gets or sets the assembly that should be searched for components matching the URI.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Reflection.Assembly","Common.PropertyName":"AppAssembly"}},{"Kind":"Components.Component","Name":"AdditionalAssemblies","TypeName":"System.Collections.Generic.IEnumerable<System.Reflection.Assembly>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.AdditionalAssemblies\">\r\n            <summary>\r\n            Gets or sets a collection of additional assemblies that should be searched for components\r\n            that can match URIs.\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.IEnumerable<global::System.Reflection.Assembly>","Common.PropertyName":"AdditionalAssemblies"}},{"Kind":"Components.Component","Name":"NotFound","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"NotFound"}},{"Kind":"Components.Component","Name":"Found","TypeName":"Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>","IsEditorRequired":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.RouteData>","Common.PropertyName":"Found"}},{"Kind":"Components.Component","Name":"Navigating","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"Navigating"}},{"Kind":"Components.Component","Name":"OnNavigateAsync","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.OnNavigateAsync\">\r\n            <summary>\r\n            Gets or sets a handler that should be called before navigating to a new page.\r\n            </summary>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.NavigationContext>","Common.PropertyName":"OnNavigateAsync"}},{"Kind":"Components.Component","Name":"PreferExactMatches","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.PreferExactMatches\">\r\n            <summary>\r\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\r\n            over wildcards.\r\n            <para>This property is obsolete and configuring it does nothing.</para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Boolean","Common.PropertyName":"PreferExactMatches"}},{"Kind":"Components.Component","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for all child content expressions.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router","Common.TypeNameIdentifier":"Router"}},{"HashCode":-1648221681,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotFound","ParentTag":"Router"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","Common.TypeNameIdentifier":"Router"}},{"HashCode":-1621887786,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.NotFound\">\r\n            <summary>\r\n            Gets or sets the content to display when no match is found for the requested route.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"NotFound","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.NotFound","Common.TypeNameIdentifier":"Router"}},{"HashCode":839024483,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Found","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Found","ParentTag":"Router"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Found' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Found","Common.TypeNameIdentifier":"Router"}},{"HashCode":1257976313,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Found","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Found\">\r\n            <summary>\r\n            Gets or sets the content to display when a match is found for the requested route.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Found","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"BoundAttributes":[{"Kind":"Components.ChildContent","Name":"Context","TypeName":"System.String","Documentation":"Specifies the parameter name for the 'Found' child content expression.","Metadata":{"Common.PropertyName":"Context","Components.ChildContentParameterName":"True"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Found","Common.TypeNameIdentifier":"Router"}},{"HashCode":-1706588304,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Navigating","ParentTag":"Router"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","Common.TypeNameIdentifier":"Router"}},{"HashCode":1775589929,"Kind":"Components.ChildContent","Name":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"<member name=\"P:Microsoft.AspNetCore.Components.Routing.Router.Navigating\">\r\n            <summary>\r\n            Get or sets the content to display when asynchronous navigation is in progress.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Navigating","ParentTag":"Microsoft.AspNetCore.Components.Routing.Router"}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Routing","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Microsoft.AspNetCore.Components.Routing.Router.Navigating","Common.TypeNameIdentifier":"Router"}},{"HashCode":2090910584,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataVizCommon.SvgAxisGroup","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SvgAxisGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChartId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ChartId"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon.SvgAxisGroup","Common.TypeNameIdentifier":"SvgAxisGroup"}},{"HashCode":2119754303,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataVizCommon.SvgAxisGroup","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DataVizCommon.SvgAxisGroup"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ChartId","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ChartId"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon.SvgAxisGroup","Common.TypeNameIdentifier":"SvgAxisGroup"}},{"HashCode":-646680501,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataVizCommon.SvgCircle","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SvgCircle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AccessibilityText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AccessibilityText"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Cx","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Cx"}},{"Kind":"Components.Component","Name":"Cy","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Cy"}},{"Kind":"Components.Component","Name":"R","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"R"}},{"Kind":"Components.Component","Name":"StrokeDashArray","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"StrokeDashArray"}},{"Kind":"Components.Component","Name":"Stroke","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Stroke"}},{"Kind":"Components.Component","Name":"StrokeWidth","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"StrokeWidth"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Visibility","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Visibility"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon.SvgCircle","Common.TypeNameIdentifier":"SvgCircle"}},{"HashCode":-1553227403,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataVizCommon.SvgCircle","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DataVizCommon.SvgCircle"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AccessibilityText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AccessibilityText"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Cx","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Cx"}},{"Kind":"Components.Component","Name":"Cy","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Cy"}},{"Kind":"Components.Component","Name":"R","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"R"}},{"Kind":"Components.Component","Name":"StrokeDashArray","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"StrokeDashArray"}},{"Kind":"Components.Component","Name":"Stroke","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Stroke"}},{"Kind":"Components.Component","Name":"StrokeWidth","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"StrokeWidth"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Visibility","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Visibility"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon.SvgCircle","Common.TypeNameIdentifier":"SvgCircle"}},{"HashCode":-900059360,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataVizCommon.SvgClass","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SvgClass"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon.SvgClass","Common.TypeNameIdentifier":"SvgClass"}},{"HashCode":1114662593,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataVizCommon.SvgClass","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DataVizCommon.SvgClass"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon.SvgClass","Common.TypeNameIdentifier":"SvgClass"}},{"HashCode":284953556,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataVizCommon.SvgEllipse","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SvgEllipse"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AccessibilityText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AccessibilityText"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Rx","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Rx"}},{"Kind":"Components.Component","Name":"Ry","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Ry"}},{"Kind":"Components.Component","Name":"Cx","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Cx"}},{"Kind":"Components.Component","Name":"Cy","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Cy"}},{"Kind":"Components.Component","Name":"StrokeDashArray","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"StrokeDashArray"}},{"Kind":"Components.Component","Name":"Stroke","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Stroke"}},{"Kind":"Components.Component","Name":"StrokeWidth","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"StrokeWidth"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Visibility","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Visibility"}},{"Kind":"Components.Component","Name":"DataPoint","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DataPoint"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon.SvgEllipse","Common.TypeNameIdentifier":"SvgEllipse"}},{"HashCode":-1893405356,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataVizCommon.SvgEllipse","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DataVizCommon.SvgEllipse"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AccessibilityText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AccessibilityText"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Rx","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Rx"}},{"Kind":"Components.Component","Name":"Ry","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Ry"}},{"Kind":"Components.Component","Name":"Cx","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Cx"}},{"Kind":"Components.Component","Name":"Cy","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Cy"}},{"Kind":"Components.Component","Name":"StrokeDashArray","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"StrokeDashArray"}},{"Kind":"Components.Component","Name":"Stroke","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Stroke"}},{"Kind":"Components.Component","Name":"StrokeWidth","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"StrokeWidth"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Visibility","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Visibility"}},{"Kind":"Components.Component","Name":"DataPoint","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DataPoint"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon.SvgEllipse","Common.TypeNameIdentifier":"SvgEllipse"}},{"HashCode":-1975700785,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataVizCommon.SvgImage","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SvgImage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"X","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Y"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Href"}},{"Kind":"Components.Component","Name":"Visibility","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Visibility"}},{"Kind":"Components.Component","Name":"PreserveAspectRatio","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PreserveAspectRatio"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon.SvgImage","Common.TypeNameIdentifier":"SvgImage"}},{"HashCode":-1700736458,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataVizCommon.SvgImage","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DataVizCommon.SvgImage"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"X","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Y"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Href","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Href"}},{"Kind":"Components.Component","Name":"Visibility","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Visibility"}},{"Kind":"Components.Component","Name":"PreserveAspectRatio","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PreserveAspectRatio"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon.SvgImage","Common.TypeNameIdentifier":"SvgImage"}},{"HashCode":-96443399,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataVizCommon.SvgLine","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SvgLine"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AccessibilityText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AccessibilityText"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Stroke","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Stroke"}},{"Kind":"Components.Component","Name":"StrokeWidth","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"StrokeWidth"}},{"Kind":"Components.Component","Name":"X1","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"X1"}},{"Kind":"Components.Component","Name":"Y1","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Y1"}},{"Kind":"Components.Component","Name":"X2","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"X2"}},{"Kind":"Components.Component","Name":"Y2","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Y2"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon.SvgLine","Common.TypeNameIdentifier":"SvgLine"}},{"HashCode":1260896768,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataVizCommon.SvgLine","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DataVizCommon.SvgLine"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"AccessibilityText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AccessibilityText"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Stroke","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Stroke"}},{"Kind":"Components.Component","Name":"StrokeWidth","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"StrokeWidth"}},{"Kind":"Components.Component","Name":"X1","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"X1"}},{"Kind":"Components.Component","Name":"Y1","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Y1"}},{"Kind":"Components.Component","Name":"X2","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"X2"}},{"Kind":"Components.Component","Name":"Y2","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Y2"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon.SvgLine","Common.TypeNameIdentifier":"SvgLine"}},{"HashCode":652318647,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataVizCommon.SvgPath","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SvgPath"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Direction","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Direction"}},{"Kind":"Components.Component","Name":"StrokeDashArray","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"StrokeDashArray"}},{"Kind":"Components.Component","Name":"Stroke","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Stroke"}},{"Kind":"Components.Component","Name":"StrokeWidth","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"StrokeWidth"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Transform","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Transform"}},{"Kind":"Components.Component","Name":"StrokeMiterLimit","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"StrokeMiterLimit"}},{"Kind":"Components.Component","Name":"ClipPath","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ClipPath"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"DataPoint","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DataPoint"}},{"Kind":"Components.Component","Name":"AccessibilityText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AccessibilityText"}},{"Kind":"Components.Component","Name":"Visibility","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Visibility"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon.SvgPath","Common.TypeNameIdentifier":"SvgPath"}},{"HashCode":-122447417,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataVizCommon.SvgPath","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DataVizCommon.SvgPath"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Direction","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Direction"}},{"Kind":"Components.Component","Name":"StrokeDashArray","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"StrokeDashArray"}},{"Kind":"Components.Component","Name":"Stroke","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Stroke"}},{"Kind":"Components.Component","Name":"StrokeWidth","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"StrokeWidth"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Transform","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Transform"}},{"Kind":"Components.Component","Name":"StrokeMiterLimit","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"StrokeMiterLimit"}},{"Kind":"Components.Component","Name":"ClipPath","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ClipPath"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"DataPoint","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DataPoint"}},{"Kind":"Components.Component","Name":"AccessibilityText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AccessibilityText"}},{"Kind":"Components.Component","Name":"Visibility","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Visibility"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon.SvgPath","Common.TypeNameIdentifier":"SvgPath"}},{"HashCode":-2062954382,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataVizCommon.SvgPattern","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SvgPattern"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"PatternUnits","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PatternUnits"}},{"Kind":"Components.Component","Name":"ShapeOptions","TypeName":"System.Collections.Generic.List<System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::System.Object>","Common.PropertyName":"ShapeOptions"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon.SvgPattern","Common.TypeNameIdentifier":"SvgPattern"}},{"HashCode":248537793,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataVizCommon.SvgPattern","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DataVizCommon.SvgPattern"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"PatternUnits","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"PatternUnits"}},{"Kind":"Components.Component","Name":"ShapeOptions","TypeName":"System.Collections.Generic.List<System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::System.Object>","Common.PropertyName":"ShapeOptions"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon.SvgPattern","Common.TypeNameIdentifier":"SvgPattern"}},{"HashCode":943255494,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataVizCommon.SvgPolygon","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SvgPolygon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"points","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"points"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon.SvgPolygon","Common.TypeNameIdentifier":"SvgPolygon"}},{"HashCode":124410625,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataVizCommon.SvgPolygon","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DataVizCommon.SvgPolygon"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"points","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"points"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon.SvgPolygon","Common.TypeNameIdentifier":"SvgPolygon"}},{"HashCode":-1144753834,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataVizCommon.SvgRect","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SvgRect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Stroke","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Stroke"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Filter","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Filter"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"Transform","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Transform"}},{"Kind":"Components.Component","Name":"StrokeWidth","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"StrokeWidth"}},{"Kind":"Components.Component","Name":"X","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Y"}},{"Kind":"Components.Component","Name":"Rx","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Rx"}},{"Kind":"Components.Component","Name":"Ry","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Ry"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Visibility","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Visibility"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"AriaHidden","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AriaHidden"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon.SvgRect","Common.TypeNameIdentifier":"SvgRect"}},{"HashCode":-249253407,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataVizCommon.SvgRect","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DataVizCommon.SvgRect"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Height","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Height"}},{"Kind":"Components.Component","Name":"Width","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Width"}},{"Kind":"Components.Component","Name":"Stroke","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Stroke"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"Filter","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Filter"}},{"Kind":"Components.Component","Name":"DashArray","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DashArray"}},{"Kind":"Components.Component","Name":"Transform","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Transform"}},{"Kind":"Components.Component","Name":"StrokeWidth","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"StrokeWidth"}},{"Kind":"Components.Component","Name":"X","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Y"}},{"Kind":"Components.Component","Name":"Rx","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Rx"}},{"Kind":"Components.Component","Name":"Ry","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Ry"}},{"Kind":"Components.Component","Name":"Opacity","TypeName":"System.Double","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Double","Common.PropertyName":"Opacity"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"Visibility","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Visibility"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"AriaHidden","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AriaHidden"}},{"Kind":"Components.Component","Name":"Class","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Class"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon.SvgRect","Common.TypeNameIdentifier":"SvgRect"}},{"HashCode":-499130777,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataVizCommon.SvgText","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SvgText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"X","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Y"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"TextAnchor","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TextAnchor"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"DominantBaseline","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DominantBaseline"}},{"Kind":"Components.Component","Name":"Transform","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Transform"}},{"Kind":"Components.Component","Name":"AccessibilityText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AccessibilityText"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon.SvgText","Common.TypeNameIdentifier":"SvgText"}},{"HashCode":-1197867681,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataVizCommon.SvgText","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DataVizCommon.SvgText"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"X","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"X"}},{"Kind":"Components.Component","Name":"Y","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Y"}},{"Kind":"Components.Component","Name":"Id","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Id"}},{"Kind":"Components.Component","Name":"Fill","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Fill"}},{"Kind":"Components.Component","Name":"FontSize","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontSize"}},{"Kind":"Components.Component","Name":"FontStyle","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontStyle"}},{"Kind":"Components.Component","Name":"FontFamily","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontFamily"}},{"Kind":"Components.Component","Name":"FontWeight","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"FontWeight"}},{"Kind":"Components.Component","Name":"TextAnchor","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TextAnchor"}},{"Kind":"Components.Component","Name":"Text","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Text"}},{"Kind":"Components.Component","Name":"ChildContent","TypeName":"Microsoft.AspNetCore.Components.RenderFragment","Metadata":{"Components.ChildContent":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.RenderFragment","Common.PropertyName":"ChildContent"}},{"Kind":"Components.Component","Name":"DominantBaseline","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"DominantBaseline"}},{"Kind":"Components.Component","Name":"Transform","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Transform"}},{"Kind":"Components.Component","Name":"AccessibilityText","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"AccessibilityText"}},{"Kind":"Components.Component","Name":"TabIndex","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"TabIndex"}},{"Kind":"Components.Component","Name":"Style","TypeName":"System.String","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"Style"}},{"Kind":"Components.Component","Name":"HtmlAttributes","TypeName":"System.Collections.Generic.Dictionary<System.String, System.Object>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>","Common.PropertyName":"HtmlAttributes"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon.SvgText","Common.TypeNameIdentifier":"SvgText"}},{"HashCode":-629996819,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DataVizCommon.SvgText.ChildContent","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"SvgText"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon.SvgText.ChildContent","Common.TypeNameIdentifier":"SvgText"}},{"HashCode":-1810923884,"Kind":"Components.ChildContent","Name":"Syncfusion.Blazor.DataVizCommon.SvgText.ChildContent","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ChildContent","ParentTag":"Syncfusion.Blazor.DataVizCommon.SvgText"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.ChildContent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon.SvgText.ChildContent","Common.TypeNameIdentifier":"SvgText"}},{"HashCode":-1449821878,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataVizCommon._Imports","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"_Imports"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon._Imports","Common.TypeNameIdentifier":"_Imports"}},{"HashCode":-759088402,"Kind":"Components.Component","Name":"Syncfusion.Blazor.DataVizCommon._Imports","AssemblyName":"Syncfusion.Blazor.DataVizCommon","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.DataVizCommon._Imports"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.DataVizCommon","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.DataVizCommon._Imports","Common.TypeNameIdentifier":"_Imports"}},{"HashCode":-1733149957,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SfMediaQuery","AssemblyName":"Syncfusion.Blazor.Core","Documentation":"<member name=\"T:Syncfusion.Blazor.SfMediaQuery\">\r\n            <summary>\r\n            The Blazor Media Query component allows developers to create responsive layouts.\r\n            The component tracks changes in the browser size and notifies when the browser size matches the specified media query.\r\n            The <see cref=\"T:Syncfusion.Blazor.MediaBreakpoint\" /> class is used to store information about each media query breakpoint, including the <c>Breakpoint</c> name and the <c>MediaQuery</c> itself. \r\n            The <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.ActiveBreakpoint\" /> property returns the <c>Breakpoint</c> of the <c>MediaBreakpoint</c> in the <c>MediaBreakpoints</c> collection that matches the current browser size. \r\n            This allows developers to easily create responsive layouts that adapt to different screen sizes and device types.\r\n            </summary>\r\n            <example>\r\n            <code><![CDATA[\r\n            @if (String.IsNullOrEmpty(activeBreakpoint))\r\n            {\r\n                <label>Loading...</label>\r\n            }\r\n            else\r\n            {\r\n                @if(activeBreakpoint == \"Small\")\r\n                {\r\n                    <button>Mobile</button>\r\n                }\r\n                else\r\n                {\r\n                    <button>Desktop</button>\r\n                }\r\n            }\r\n            <SfMediaQuery @bind-ActiveBreakpoint=\"@activeBreakpoint\"></SfMediaQuery>\r\n            @code {\r\n                private string activeBreakpoint;\r\n            }\r\n            ]]></code>\r\n            </example>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfMediaQuery"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveBreakpoint","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.SfMediaQuery.ActiveBreakpoint\">\r\n            <summary>\r\n            Gets the <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.Breakpoint\" /> of the <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.MediaQuery\" /> in <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.MediaBreakpoints\" /> collection that matches with the current browser size.\r\n            Based on the <c>ActiveBreakpoint</c>, developers can easily create responsive layouts that adapt to different screen sizes and device types.\r\n            </summary>\r\n            <value>\r\n            A string value that represents the <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.Breakpoint\" /> of the <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.MediaQuery\" /> in <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.MediaBreakpoints\" /> collection that matches with the browser size.\r\n            The default value is <c>null</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ActiveBreakpoint"}},{"Kind":"Components.Component","Name":"MediaBreakpoints","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.MediaBreakpoint>","Documentation":"<member name=\"P:Syncfusion.Blazor.SfMediaQuery.MediaBreakpoints\">\r\n            <summary>\r\n            Gets or sets the collection of <see cref=\"T:Syncfusion.Blazor.MediaBreakpoint\" /> that contains the <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.Breakpoint\" /> and <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.MediaQuery\" />.\r\n            <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.ActiveBreakpoint\" /> is set when a <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.MediaQuery\" /> matches with the current browser size from this collection.\r\n            </summary>\r\n            <value>\r\n            A collection of <see cref=\"T:Syncfusion.Blazor.MediaBreakpoint\" /> that contains the <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.Breakpoint\" /> and <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.MediaQuery\" />.\r\n            The defaul value is empty collection.\r\n            </value>\r\n            <remarks>\r\n            If <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.MediaBreakpoints\" /> is not specified, <see cref=\"T:Syncfusion.Blazor.SfMediaQuery\" /> will use built-in collection of <see cref=\"T:Syncfusion.Blazor.MediaBreakpoint\" /> that contains <see cref=\"F:Syncfusion.Blazor.SfMediaQuery.Small\" />, <see cref=\"F:Syncfusion.Blazor.SfMediaQuery.Medium\" /> and <see cref=\"F:Syncfusion.Blazor.SfMediaQuery.Large\" /> media queries.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.MediaBreakpoint>","Common.PropertyName":"MediaBreakpoints"}},{"Kind":"Components.Component","Name":"ActiveBreakpointChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Syncfusion.Blazor.SfMediaQuery.ActiveBreakpointChanged\">\r\n            <summary>\r\n            Gets or sets the event that is triggered when the <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.ActiveBreakpoint\" /> is changed.\r\n            </summary>\r\n            <value> \r\n            An event call back function. \r\n            </value>\r\n            <exclude />\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Common.PropertyName":"ActiveBreakpointChanged"}},{"Kind":"Components.Component","Name":"OnBreakpointChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.BreakpointChangedEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.SfMediaQuery.OnBreakpointChanged\">\r\n            <summary> \r\n             Gets or sets the event that is triggered when the <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.ActiveBreakpoint\" /> is changed.\r\n            </summary> \r\n            <value> \r\n            An event call back function. \r\n            </value>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.BreakpointChangedEventArgs>","Common.PropertyName":"OnBreakpointChanged"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SfMediaQuery","Common.TypeNameIdentifier":"SfMediaQuery"}},{"HashCode":1981315425,"Kind":"Components.Component","Name":"Syncfusion.Blazor.SfMediaQuery","AssemblyName":"Syncfusion.Blazor.Core","Documentation":"<member name=\"T:Syncfusion.Blazor.SfMediaQuery\">\r\n            <summary>\r\n            The Blazor Media Query component allows developers to create responsive layouts.\r\n            The component tracks changes in the browser size and notifies when the browser size matches the specified media query.\r\n            The <see cref=\"T:Syncfusion.Blazor.MediaBreakpoint\" /> class is used to store information about each media query breakpoint, including the <c>Breakpoint</c> name and the <c>MediaQuery</c> itself. \r\n            The <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.ActiveBreakpoint\" /> property returns the <c>Breakpoint</c> of the <c>MediaBreakpoint</c> in the <c>MediaBreakpoints</c> collection that matches the current browser size. \r\n            This allows developers to easily create responsive layouts that adapt to different screen sizes and device types.\r\n            </summary>\r\n            <example>\r\n            <code><![CDATA[\r\n            @if (String.IsNullOrEmpty(activeBreakpoint))\r\n            {\r\n                <label>Loading...</label>\r\n            }\r\n            else\r\n            {\r\n                @if(activeBreakpoint == \"Small\")\r\n                {\r\n                    <button>Mobile</button>\r\n                }\r\n                else\r\n                {\r\n                    <button>Desktop</button>\r\n                }\r\n            }\r\n            <SfMediaQuery @bind-ActiveBreakpoint=\"@activeBreakpoint\"></SfMediaQuery>\r\n            @code {\r\n                private string activeBreakpoint;\r\n            }\r\n            ]]></code>\r\n            </example>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.SfMediaQuery"}],"BoundAttributes":[{"Kind":"Components.Component","Name":"ActiveBreakpoint","TypeName":"System.String","Documentation":"<member name=\"P:Syncfusion.Blazor.SfMediaQuery.ActiveBreakpoint\">\r\n            <summary>\r\n            Gets the <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.Breakpoint\" /> of the <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.MediaQuery\" /> in <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.MediaBreakpoints\" /> collection that matches with the current browser size.\r\n            Based on the <c>ActiveBreakpoint</c>, developers can easily create responsive layouts that adapt to different screen sizes and device types.\r\n            </summary>\r\n            <value>\r\n            A string value that represents the <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.Breakpoint\" /> of the <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.MediaQuery\" /> in <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.MediaBreakpoints\" /> collection that matches with the browser size.\r\n            The default value is <c>null</c>.\r\n            </value>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.String","Common.PropertyName":"ActiveBreakpoint"}},{"Kind":"Components.Component","Name":"MediaBreakpoints","TypeName":"System.Collections.Generic.List<Syncfusion.Blazor.MediaBreakpoint>","Documentation":"<member name=\"P:Syncfusion.Blazor.SfMediaQuery.MediaBreakpoints\">\r\n            <summary>\r\n            Gets or sets the collection of <see cref=\"T:Syncfusion.Blazor.MediaBreakpoint\" /> that contains the <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.Breakpoint\" /> and <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.MediaQuery\" />.\r\n            <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.ActiveBreakpoint\" /> is set when a <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.MediaQuery\" /> matches with the current browser size from this collection.\r\n            </summary>\r\n            <value>\r\n            A collection of <see cref=\"T:Syncfusion.Blazor.MediaBreakpoint\" /> that contains the <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.Breakpoint\" /> and <see cref=\"P:Syncfusion.Blazor.MediaBreakpoint.MediaQuery\" />.\r\n            The defaul value is empty collection.\r\n            </value>\r\n            <remarks>\r\n            If <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.MediaBreakpoints\" /> is not specified, <see cref=\"T:Syncfusion.Blazor.SfMediaQuery\" /> will use built-in collection of <see cref=\"T:Syncfusion.Blazor.MediaBreakpoint\" /> that contains <see cref=\"F:Syncfusion.Blazor.SfMediaQuery.Small\" />, <see cref=\"F:Syncfusion.Blazor.SfMediaQuery.Medium\" /> and <see cref=\"F:Syncfusion.Blazor.SfMediaQuery.Large\" /> media queries.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.GloballyQualifiedTypeName":"global::System.Collections.Generic.List<global::Syncfusion.Blazor.MediaBreakpoint>","Common.PropertyName":"MediaBreakpoints"}},{"Kind":"Components.Component","Name":"ActiveBreakpointChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"<member name=\"P:Syncfusion.Blazor.SfMediaQuery.ActiveBreakpointChanged\">\r\n            <summary>\r\n            Gets or sets the event that is triggered when the <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.ActiveBreakpoint\" /> is changed.\r\n            </summary>\r\n            <value> \r\n            An event call back function. \r\n            </value>\r\n            <exclude />\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>","Common.PropertyName":"ActiveBreakpointChanged"}},{"Kind":"Components.Component","Name":"OnBreakpointChanged","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.BreakpointChangedEventArgs>","Documentation":"<member name=\"P:Syncfusion.Blazor.SfMediaQuery.OnBreakpointChanged\">\r\n            <summary> \r\n             Gets or sets the event that is triggered when the <see cref=\"P:Syncfusion.Blazor.SfMediaQuery.ActiveBreakpoint\" /> is changed.\r\n            </summary> \r\n            <value> \r\n            An event call back function. \r\n            </value>\r\n        </member>","Metadata":{"Components.EventCallback":"True","Common.GloballyQualifiedTypeName":"global::Microsoft.AspNetCore.Components.EventCallback<global::Syncfusion.Blazor.BreakpointChangedEventArgs>","Common.PropertyName":"OnBreakpointChanged"}}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.SfMediaQuery","Common.TypeNameIdentifier":"SfMediaQuery"}},{"HashCode":-700800166,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Core._Imports","AssemblyName":"Syncfusion.Blazor.Core","CaseSensitive":true,"TagMatchingRules":[{"TagName":"_Imports"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Core","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Core._Imports","Common.TypeNameIdentifier":"_Imports"}},{"HashCode":-272854473,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Core._Imports","AssemblyName":"Syncfusion.Blazor.Core","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Core._Imports"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Core","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Core._Imports","Common.TypeNameIdentifier":"_Imports"}},{"HashCode":156406340,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Internal.ModuleInitComponent","AssemblyName":"Syncfusion.Blazor.Core","Documentation":"<member name=\"T:Syncfusion.Blazor.Internal.ModuleInitComponent\">\r\n            <summary>\r\n            Resource manager component for loading init interop script in .NET Core 3.0 applications.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"ModuleInitComponent"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Internal","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Internal.ModuleInitComponent","Common.TypeNameIdentifier":"ModuleInitComponent"}},{"HashCode":2000032441,"Kind":"Components.Component","Name":"Syncfusion.Blazor.Internal.ModuleInitComponent","AssemblyName":"Syncfusion.Blazor.Core","Documentation":"<member name=\"T:Syncfusion.Blazor.Internal.ModuleInitComponent\">\r\n            <summary>\r\n            Resource manager component for loading init interop script in .NET Core 3.0 applications.\r\n            </summary>\r\n        </member>","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Internal.ModuleInitComponent"}],"Metadata":{"Common.TypeNamespace":"Syncfusion.Blazor.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.IComponent","Common.TypeName":"Syncfusion.Blazor.Internal.ModuleInitComponent","Common.TypeNameIdentifier":"ModuleInitComponent"}},{"HashCode":-1241519277,"Kind":"Components.EventHandler","Name":"onfocus","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocus","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocus:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocus:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocus","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocus"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocus' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfocus' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":185338890,"Kind":"Components.EventHandler","Name":"onblur","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onblur","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onblur:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onblur:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onblur","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onblur"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onblur' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onblur' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1395951131,"Kind":"Components.EventHandler","Name":"onfocusin","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocusin","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusin:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusin:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocusin","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocusin"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusin' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfocusin' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-80162751,"Kind":"Components.EventHandler","Name":"onfocusout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfocusout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfocusout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfocusout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>","Documentation":"Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfocusout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfocusout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.FocusEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":38666978,"Kind":"Components.EventHandler","Name":"onmouseover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseover' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmouseover' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":841963227,"Kind":"Components.EventHandler","Name":"onmouseout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmouseout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":900683537,"Kind":"Components.EventHandler","Name":"onmousemove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousemove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousemove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousemove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousemove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousemove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousemove' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmousemove' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1689748505,"Kind":"Components.EventHandler","Name":"onmousedown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousedown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousedown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousedown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousedown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousedown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousedown' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmousedown' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":2072535000,"Kind":"Components.EventHandler","Name":"onmouseup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmouseup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmouseup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmouseup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmouseup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseup' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmouseup' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":957123670,"Kind":"Components.EventHandler","Name":"onclick","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onclick","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onclick:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onclick:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onclick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onclick"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onclick' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onclick' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1117690483,"Kind":"Components.EventHandler","Name":"ondblclick","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondblclick","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondblclick:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondblclick:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondblclick","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondblclick"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondblclick' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondblclick' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1890398664,"Kind":"Components.EventHandler","Name":"onwheel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onwheel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwheel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwheel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onwheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Documentation":"Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onwheel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwheel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onwheel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.WheelEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-873195285,"Kind":"Components.EventHandler","Name":"onmousewheel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onmousewheel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousewheel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onmousewheel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onmousewheel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>","Documentation":"Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onmousewheel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousewheel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onmousewheel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.WheelEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1783703258,"Kind":"Components.EventHandler","Name":"oncontextmenu","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncontextmenu","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncontextmenu:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncontextmenu:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncontextmenu","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>","Documentation":"Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncontextmenu"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncontextmenu' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncontextmenu' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.MouseEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1126093720,"Kind":"Components.EventHandler","Name":"ondrag","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondrag","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrag:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrag:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondrag","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondrag"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrag' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondrag' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-217965433,"Kind":"Components.EventHandler","Name":"ondragend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-740922146,"Kind":"Components.EventHandler","Name":"ondragenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragenter' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragenter' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1114242050,"Kind":"Components.EventHandler","Name":"ondragleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragleave' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragleave' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":2067527959,"Kind":"Components.EventHandler","Name":"ondragover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragover' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragover' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":290913765,"Kind":"Components.EventHandler","Name":"ondragstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondragstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondragstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondragstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondragstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondragstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":500052702,"Kind":"Components.EventHandler","Name":"ondrop","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondrop","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrop:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondrop:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondrop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>","Documentation":"Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondrop"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrop' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondrop' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.DragEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-2089820561,"Kind":"Components.EventHandler","Name":"onkeydown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeydown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeydown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeydown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeydown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeydown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeydown' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onkeydown' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":159258008,"Kind":"Components.EventHandler","Name":"onkeyup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeyup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeyup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeyup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeyup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeyup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeyup' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onkeyup' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1171150421,"Kind":"Components.EventHandler","Name":"onkeypress","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onkeypress","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeypress:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onkeypress:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onkeypress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>","Documentation":"Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onkeypress"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeypress' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onkeypress' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.KeyboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1271741505,"Kind":"Components.EventHandler","Name":"onchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.ChangeEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":2064097127,"Kind":"Components.EventHandler","Name":"oninput","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oninput","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninput:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninput:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oninput","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>","Documentation":"Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oninput"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninput' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oninput' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.ChangeEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1628000710,"Kind":"Components.EventHandler","Name":"oninvalid","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oninvalid","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninvalid:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oninvalid:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oninvalid","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oninvalid"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninvalid' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oninvalid' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":534622536,"Kind":"Components.EventHandler","Name":"onreset","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onreset","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreset:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreset:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onreset","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onreset"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreset' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onreset' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-232666644,"Kind":"Components.EventHandler","Name":"onselect","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselect","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselect:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselect:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselect","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselect"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselect' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onselect' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-334703033,"Kind":"Components.EventHandler","Name":"onselectstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselectstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselectstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselectstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onselectstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-580793560,"Kind":"Components.EventHandler","Name":"onselectionchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onselectionchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectionchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onselectionchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onselectionchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onselectionchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectionchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onselectionchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1182237255,"Kind":"Components.EventHandler","Name":"onsubmit","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onsubmit","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsubmit:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsubmit:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onsubmit","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onsubmit"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsubmit' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onsubmit' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":41919870,"Kind":"Components.EventHandler","Name":"onbeforecopy","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforecopy","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecopy:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecopy:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforecopy","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforecopy"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecopy' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforecopy' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-467476237,"Kind":"Components.EventHandler","Name":"onbeforecut","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforecut","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecut:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforecut:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforecut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforecut"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecut' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforecut' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-847753862,"Kind":"Components.EventHandler","Name":"onbeforepaste","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforepaste","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforepaste:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforepaste:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforepaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforepaste"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforepaste' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforepaste' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1103205449,"Kind":"Components.EventHandler","Name":"oncopy","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncopy","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncopy:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncopy:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncopy","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncopy"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncopy' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncopy' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-336745500,"Kind":"Components.EventHandler","Name":"oncut","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncut","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncut:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncut:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncut","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncut"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncut' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncut' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1167691091,"Kind":"Components.EventHandler","Name":"onpaste","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpaste","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpaste:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpaste:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpaste","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>","Documentation":"Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpaste"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpaste' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpaste' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ClipboardEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-814867136,"Kind":"Components.EventHandler","Name":"ontouchcancel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchcancel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchcancel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchcancel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchcancel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchcancel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchcancel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchcancel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1498711591,"Kind":"Components.EventHandler","Name":"ontouchend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-586006226,"Kind":"Components.EventHandler","Name":"ontouchmove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchmove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchmove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchmove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchmove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchmove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchmove' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchmove' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1710607310,"Kind":"Components.EventHandler","Name":"ontouchstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-807819226,"Kind":"Components.EventHandler","Name":"ontouchenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchenter' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchenter' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1947950502,"Kind":"Components.EventHandler","Name":"ontouchleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontouchleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontouchleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontouchleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>","Documentation":"Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontouchleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchleave' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontouchleave' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.TouchEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1480270924,"Kind":"Components.EventHandler","Name":"ongotpointercapture","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ongotpointercapture:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ongotpointercapture","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ongotpointercapture"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ongotpointercapture' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ongotpointercapture' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1745683678,"Kind":"Components.EventHandler","Name":"onlostpointercapture","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onlostpointercapture:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onlostpointercapture","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onlostpointercapture"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onlostpointercapture' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onlostpointercapture' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1295402411,"Kind":"Components.EventHandler","Name":"onpointercancel","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointercancel","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointercancel:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointercancel:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointercancel","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointercancel"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointercancel' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointercancel' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-52025697,"Kind":"Components.EventHandler","Name":"onpointerdown","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerdown","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerdown:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerdown:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerdown","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerdown"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerdown' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerdown' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1001822979,"Kind":"Components.EventHandler","Name":"onpointerenter","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerenter","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerenter:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerenter:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerenter","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerenter"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerenter' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerenter' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-696829939,"Kind":"Components.EventHandler","Name":"onpointerleave","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerleave","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerleave:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerleave:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerleave","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerleave"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerleave' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerleave' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1019396270,"Kind":"Components.EventHandler","Name":"onpointermove","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointermove","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointermove:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointermove:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointermove","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointermove"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointermove' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointermove' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-358160437,"Kind":"Components.EventHandler","Name":"onpointerout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":373773343,"Kind":"Components.EventHandler","Name":"onpointerover","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerover","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerover:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerover:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerover","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerover"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerover' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerover' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":678915047,"Kind":"Components.EventHandler","Name":"onpointerup","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerup","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerup:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerup:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerup","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>","Documentation":"Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerup"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerup' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerup' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.PointerEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-2079011202,"Kind":"Components.EventHandler","Name":"oncanplay","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncanplay","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplay:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplay:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncanplay","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncanplay"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplay' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncanplay' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-505461926,"Kind":"Components.EventHandler","Name":"oncanplaythrough","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncanplaythrough:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncanplaythrough","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncanplaythrough"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplaythrough' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncanplaythrough' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":561069164,"Kind":"Components.EventHandler","Name":"oncuechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@oncuechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncuechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@oncuechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@oncuechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"oncuechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncuechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@oncuechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-628056390,"Kind":"Components.EventHandler","Name":"ondurationchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondurationchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondurationchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondurationchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondurationchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondurationchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondurationchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondurationchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1753598003,"Kind":"Components.EventHandler","Name":"onemptied","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onemptied","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onemptied:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onemptied:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onemptied","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onemptied"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onemptied' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onemptied' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-400440555,"Kind":"Components.EventHandler","Name":"onpause","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpause","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpause:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpause:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpause","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpause"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpause' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpause' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1218828270,"Kind":"Components.EventHandler","Name":"onplay","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onplay","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplay:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplay:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onplay","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onplay"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplay' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onplay' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":250593440,"Kind":"Components.EventHandler","Name":"onplaying","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onplaying","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplaying:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onplaying:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onplaying","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onplaying"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplaying' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onplaying' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":935785849,"Kind":"Components.EventHandler","Name":"onratechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onratechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onratechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onratechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onratechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onratechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onratechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onratechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-710319652,"Kind":"Components.EventHandler","Name":"onseeked","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onseeked","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeked:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeked:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onseeked","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onseeked"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeked' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onseeked' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1041149917,"Kind":"Components.EventHandler","Name":"onseeking","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onseeking","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeking:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onseeking:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onseeking","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onseeking"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeking' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onseeking' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1045603085,"Kind":"Components.EventHandler","Name":"onstalled","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onstalled","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstalled:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstalled:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onstalled","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onstalled"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstalled' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onstalled' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1650458835,"Kind":"Components.EventHandler","Name":"onstop","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onstop","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstop:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onstop:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onstop","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onstop"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstop' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onstop' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1645835663,"Kind":"Components.EventHandler","Name":"onsuspend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onsuspend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsuspend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onsuspend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onsuspend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onsuspend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsuspend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onsuspend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":441111076,"Kind":"Components.EventHandler","Name":"ontimeupdate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontimeupdate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeupdate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeupdate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontimeupdate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontimeupdate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeupdate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontimeupdate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-397557218,"Kind":"Components.EventHandler","Name":"onvolumechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onvolumechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onvolumechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onvolumechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onvolumechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onvolumechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onvolumechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onvolumechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":537583696,"Kind":"Components.EventHandler","Name":"onwaiting","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onwaiting","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwaiting:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onwaiting:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onwaiting","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onwaiting"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwaiting' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onwaiting' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":836734996,"Kind":"Components.EventHandler","Name":"onloadstart","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadstart","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadstart:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadstart:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadstart","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadstart"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadstart' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadstart' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":861226790,"Kind":"Components.EventHandler","Name":"ontimeout","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontimeout","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeout:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontimeout:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontimeout","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontimeout"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeout' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontimeout' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1844748847,"Kind":"Components.EventHandler","Name":"onabort","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onabort","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onabort:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onabort:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onabort","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onabort"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onabort' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onabort' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-101025883,"Kind":"Components.EventHandler","Name":"onload","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onload","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onload:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onload:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onload","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onload"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onload' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onload' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1892583957,"Kind":"Components.EventHandler","Name":"onloadend","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadend","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadend:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadend:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadend","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadend"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadend' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadend' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1160619536,"Kind":"Components.EventHandler","Name":"onprogress","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onprogress","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onprogress:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onprogress:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onprogress","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>","Documentation":"Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onprogress"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onprogress' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onprogress' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ProgressEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1647209768,"Kind":"Components.EventHandler","Name":"onerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ErrorEventArgs>","Documentation":"Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onerror' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onerror' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"Microsoft.AspNetCore.Components.Web.ErrorEventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-36368380,"Kind":"Components.EventHandler","Name":"onactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1700008379,"Kind":"Components.EventHandler","Name":"onbeforeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforeactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforeactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-120325947,"Kind":"Components.EventHandler","Name":"onbeforedeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onbeforedeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onbeforedeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onbeforedeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforedeactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onbeforedeactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1880914847,"Kind":"Components.EventHandler","Name":"ondeactivate","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ondeactivate","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondeactivate:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ondeactivate:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ondeactivate","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ondeactivate"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondeactivate' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ondeactivate' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1960248882,"Kind":"Components.EventHandler","Name":"onended","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onended","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onended:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onended:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onended","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onended"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onended' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onended' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-2030586449,"Kind":"Components.EventHandler","Name":"onfullscreenchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfullscreenchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfullscreenchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfullscreenchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":274964787,"Kind":"Components.EventHandler","Name":"onfullscreenerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onfullscreenerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onfullscreenerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onfullscreenerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenerror' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onfullscreenerror' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":564604628,"Kind":"Components.EventHandler","Name":"onloadeddata","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadeddata","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadeddata:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadeddata:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadeddata","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadeddata"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadeddata' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadeddata' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1564406460,"Kind":"Components.EventHandler","Name":"onloadedmetadata","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onloadedmetadata:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onloadedmetadata","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onloadedmetadata"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadedmetadata' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onloadedmetadata' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":965338784,"Kind":"Components.EventHandler","Name":"onpointerlockchange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockchange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerlockchange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerlockchange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockchange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerlockchange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-788074180,"Kind":"Components.EventHandler","Name":"onpointerlockerror","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onpointerlockerror:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onpointerlockerror","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onpointerlockerror"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockerror' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onpointerlockerror' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1139821432,"Kind":"Components.EventHandler","Name":"onreadystatechange","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onreadystatechange","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreadystatechange:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onreadystatechange:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onreadystatechange","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onreadystatechange"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreadystatechange' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onreadystatechange' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-1723125714,"Kind":"Components.EventHandler","Name":"onscroll","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@onscroll","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onscroll:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@onscroll:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@onscroll","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"onscroll"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@onscroll' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@onscroll' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":1160583875,"Kind":"Components.EventHandler","Name":"ontoggle","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Sets the '@ontoggle' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ontoggle","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontoggle:preventDefault","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"*","Attributes":[{"Name":"@ontoggle:stopPropagation","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.EventHandler","Name":"@ontoggle","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>","Documentation":"Sets the '@ontoggle' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.","Metadata":{"Components.IsWeaklyTyped":"True","Common.DirectiveAttribute":"True","Common.PropertyName":"ontoggle"},"BoundAttributeParameters":[{"Name":"preventDefault","TypeName":"System.Boolean","Documentation":"Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontoggle' event.","Metadata":{"Common.PropertyName":"PreventDefault"}},{"Name":"stopPropagation","TypeName":"System.Boolean","Documentation":"Specifies whether to prevent further propagation of the '@ontoggle' event in the capturing and bubbling phases.","Metadata":{"Common.PropertyName":"StopPropagation"}}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.EventHandler","Common.TypeName":"Microsoft.AspNetCore.Components.Web.EventHandlers","Components.EventHandler.EventArgs":"System.EventArgs","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"EventHandlers"}},{"HashCode":-464744423,"Kind":"Components.Splat","Name":"Attributes","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Merges a collection of attributes into the current element or component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@attributes","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Splat","Name":"@attributes","TypeName":"System.Object","Documentation":"Merges a collection of attributes into the current element or component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Attributes"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Splat","Common.TypeName":"Microsoft.AspNetCore.Components.Attributes","Common.ClassifyAttributesOnly":"True"}},{"HashCode":-908965030,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.Razor","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting elements containing attributes with URL expected values.\r\n            </summary>\r\n            <remarks>Resolves URLs starting with '~/' (relative to the application's 'webroot' setting) that are not\r\n            targeted by other <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" />s. Runs prior to other <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" />s to ensure\r\n            application-relative URLs are resolved.</remarks>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"itemid","Value":"~/","ValueComparison":2}]},{"TagName":"a","Attributes":[{"Name":"href","Value":"~/","ValueComparison":2}]},{"TagName":"applet","Attributes":[{"Name":"archive","Value":"~/","ValueComparison":2}]},{"TagName":"area","TagStructure":2,"Attributes":[{"Name":"href","Value":"~/","ValueComparison":2}]},{"TagName":"audio","Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"base","TagStructure":2,"Attributes":[{"Name":"href","Value":"~/","ValueComparison":2}]},{"TagName":"blockquote","Attributes":[{"Name":"cite","Value":"~/","ValueComparison":2}]},{"TagName":"button","Attributes":[{"Name":"formaction","Value":"~/","ValueComparison":2}]},{"TagName":"del","Attributes":[{"Name":"cite","Value":"~/","ValueComparison":2}]},{"TagName":"embed","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"form","Attributes":[{"Name":"action","Value":"~/","ValueComparison":2}]},{"TagName":"html","Attributes":[{"Name":"manifest","Value":"~/","ValueComparison":2}]},{"TagName":"iframe","Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"img","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"img","TagStructure":2,"Attributes":[{"Name":"srcset","Value":"~/","ValueComparison":2}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"formaction","Value":"~/","ValueComparison":2}]},{"TagName":"ins","Attributes":[{"Name":"cite","Value":"~/","ValueComparison":2}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"href","Value":"~/","ValueComparison":2}]},{"TagName":"menuitem","Attributes":[{"Name":"icon","Value":"~/","ValueComparison":2}]},{"TagName":"object","Attributes":[{"Name":"archive","Value":"~/","ValueComparison":2}]},{"TagName":"object","Attributes":[{"Name":"data","Value":"~/","ValueComparison":2}]},{"TagName":"q","Attributes":[{"Name":"cite","Value":"~/","ValueComparison":2}]},{"TagName":"script","Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"source","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"source","TagStructure":2,"Attributes":[{"Name":"srcset","Value":"~/","ValueComparison":2}]},{"TagName":"track","TagStructure":2,"Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"video","Attributes":[{"Name":"src","Value":"~/","ValueComparison":2}]},{"TagName":"video","Attributes":[{"Name":"poster","Value":"~/","ValueComparison":2}]}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.Razor.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper","Common.TypeNameIdentifier":"UrlResolutionTagHelper"}},{"HashCode":-454297784,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;a&gt; elements.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"a","Attributes":[{"Name":"asp-action"}]},{"TagName":"a","Attributes":[{"Name":"asp-controller"}]},{"TagName":"a","Attributes":[{"Name":"asp-area"}]},{"TagName":"a","Attributes":[{"Name":"asp-page"}]},{"TagName":"a","Attributes":[{"Name":"asp-page-handler"}]},{"TagName":"a","Attributes":[{"Name":"asp-fragment"}]},{"TagName":"a","Attributes":[{"Name":"asp-host"}]},{"TagName":"a","Attributes":[{"Name":"asp-protocol"}]},{"TagName":"a","Attributes":[{"Name":"asp-route"}]},{"TagName":"a","Attributes":[{"Name":"asp-all-route-data"}]},{"TagName":"a","Attributes":[{"Name":"asp-route-","NameComparison":1}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-action","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\">\r\n            <summary>\r\n            The name of the action method.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Action"}},{"Kind":"ITagHelper","Name":"asp-controller","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\">\r\n            <summary>\r\n            The name of the controller.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Controller"}},{"Kind":"ITagHelper","Name":"asp-area","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Area\">\r\n            <summary>\r\n            The name of the area.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Area"}},{"Kind":"ITagHelper","Name":"asp-page","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\">\r\n            <summary>\r\n            The name of the page.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />\r\n            is non-<c>null</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Page"}},{"Kind":"ITagHelper","Name":"asp-page-handler","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.PageHandler\">\r\n            <summary>\r\n            The name of the page handler.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />\r\n            is non-<c>null</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"PageHandler"}},{"Kind":"ITagHelper","Name":"asp-protocol","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Protocol\">\r\n            <summary>\r\n            The protocol for the URL, such as \"http\" or \"https\".\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Protocol"}},{"Kind":"ITagHelper","Name":"asp-host","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Host\">\r\n            <summary>\r\n            The host name.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Host"}},{"Kind":"ITagHelper","Name":"asp-fragment","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Fragment\">\r\n            <summary>\r\n            The URL fragment name.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Fragment"}},{"Kind":"ITagHelper","Name":"asp-route","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\">\r\n            <summary>\r\n            Name of the route.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if one of <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Area\" />\r\n            or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"ITagHelper","Name":"asp-all-route-data","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","IndexerNamePrefix":"asp-route-","IndexerTypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.RouteValues\">\r\n            <summary>\r\n            Additional parameters for the route.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteValues"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper","Common.TypeNameIdentifier":"AnchorTagHelper"}},{"HashCode":-1792856567,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> implementation targeting &lt;cache&gt; elements.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"cache"}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"priority","TypeName":"Microsoft.Extensions.Caching.Memory.CacheItemPriority?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper.Priority\">\r\n            <summary>\r\n            Gets or sets the <see cref=\"T:Microsoft.Extensions.Caching.Memory.CacheItemPriority\" /> policy for the cache entry.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Priority"}},{"Kind":"ITagHelper","Name":"vary-by","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryBy\">\r\n            <summary>\r\n            Gets or sets a <see cref=\"T:System.String\" /> to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryBy"}},{"Kind":"ITagHelper","Name":"vary-by-header","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByHeader\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of HTTP request headers to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByHeader"}},{"Kind":"ITagHelper","Name":"vary-by-query","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByQuery\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of query parameters to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByQuery"}},{"Kind":"ITagHelper","Name":"vary-by-route","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByRoute\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of route data parameters to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByRoute"}},{"Kind":"ITagHelper","Name":"vary-by-cookie","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCookie\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of cookie names to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByCookie"}},{"Kind":"ITagHelper","Name":"vary-by-user","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByUser\">\r\n            <summary>\r\n            Gets or sets a value that determines if the cached result is to be varied by the Identity for the logged in\r\n            <see cref=\"P:Microsoft.AspNetCore.Http.HttpContext.User\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByUser"}},{"Kind":"ITagHelper","Name":"vary-by-culture","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCulture\">\r\n            <summary>\r\n            Gets or sets a value that determines if the cached result is to be varied by request culture.\r\n            <para>\r\n            Setting this to <c>true</c> would result in the result to be varied by <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />\r\n            and <see cref=\"P:System.Globalization.CultureInfo.CurrentUICulture\" />.\r\n            </para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByCulture"}},{"Kind":"ITagHelper","Name":"expires-on","TypeName":"System.DateTimeOffset?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresOn\">\r\n            <summary>\r\n            Gets or sets the exact <see cref=\"T:System.DateTimeOffset\" /> the cache entry should be evicted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpiresOn"}},{"Kind":"ITagHelper","Name":"expires-after","TypeName":"System.TimeSpan?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresAfter\">\r\n            <summary>\r\n            Gets or sets the duration, from the time the cache entry was added, when it should be evicted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpiresAfter"}},{"Kind":"ITagHelper","Name":"expires-sliding","TypeName":"System.TimeSpan?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresSliding\">\r\n            <summary>\r\n            Gets or sets the duration from last access that the cache entry should be evicted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpiresSliding"}},{"Kind":"ITagHelper","Name":"enabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.Enabled\">\r\n            <summary>\r\n            Gets or sets the value which determines if the tag helper is enabled or not.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Enabled"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper","Common.TypeNameIdentifier":"CacheTagHelper"}},{"HashCode":529625848,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper\">\r\n            <summary>\r\n            A <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> that renders a Razor component.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"component","TagStructure":2,"Attributes":[{"Name":"type"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"params","TypeName":"System.Collections.Generic.IDictionary<System.String, System.Object>","IndexerNamePrefix":"param-","IndexerTypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper.Parameters\">\r\n            <summary>\r\n            Gets or sets values for component parameters.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Parameters"}},{"Kind":"ITagHelper","Name":"type","TypeName":"System.Type","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper.ComponentType\">\r\n            <summary>\r\n            Gets or sets the component type. This value is required.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ComponentType"}},{"Kind":"ITagHelper","Name":"render-mode","TypeName":"Microsoft.AspNetCore.Mvc.Rendering.RenderMode","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper.RenderMode\">\r\n            <summary>\r\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Mvc.Rendering.RenderMode\" />\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RenderMode"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper","Common.TypeNameIdentifier":"ComponentTagHelper"}},{"HashCode":1283854314,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> implementation targeting &lt;distributed-cache&gt; elements.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"distributed-cache","Attributes":[{"Name":"name"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper.Name\">\r\n            <summary>\r\n            Gets or sets a unique name to discriminate cached entries.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"ITagHelper","Name":"vary-by","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryBy\">\r\n            <summary>\r\n            Gets or sets a <see cref=\"T:System.String\" /> to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryBy"}},{"Kind":"ITagHelper","Name":"vary-by-header","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByHeader\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of HTTP request headers to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByHeader"}},{"Kind":"ITagHelper","Name":"vary-by-query","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByQuery\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of query parameters to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByQuery"}},{"Kind":"ITagHelper","Name":"vary-by-route","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByRoute\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of route data parameters to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByRoute"}},{"Kind":"ITagHelper","Name":"vary-by-cookie","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCookie\">\r\n            <summary>\r\n            Gets or sets a comma-delimited set of cookie names to vary the cached result by.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByCookie"}},{"Kind":"ITagHelper","Name":"vary-by-user","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByUser\">\r\n            <summary>\r\n            Gets or sets a value that determines if the cached result is to be varied by the Identity for the logged in\r\n            <see cref=\"P:Microsoft.AspNetCore.Http.HttpContext.User\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByUser"}},{"Kind":"ITagHelper","Name":"vary-by-culture","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.VaryByCulture\">\r\n            <summary>\r\n            Gets or sets a value that determines if the cached result is to be varied by request culture.\r\n            <para>\r\n            Setting this to <c>true</c> would result in the result to be varied by <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />\r\n            and <see cref=\"P:System.Globalization.CultureInfo.CurrentUICulture\" />.\r\n            </para>\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"VaryByCulture"}},{"Kind":"ITagHelper","Name":"expires-on","TypeName":"System.DateTimeOffset?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresOn\">\r\n            <summary>\r\n            Gets or sets the exact <see cref=\"T:System.DateTimeOffset\" /> the cache entry should be evicted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpiresOn"}},{"Kind":"ITagHelper","Name":"expires-after","TypeName":"System.TimeSpan?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresAfter\">\r\n            <summary>\r\n            Gets or sets the duration, from the time the cache entry was added, when it should be evicted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpiresAfter"}},{"Kind":"ITagHelper","Name":"expires-sliding","TypeName":"System.TimeSpan?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.ExpiresSliding\">\r\n            <summary>\r\n            Gets or sets the duration from last access that the cache entry should be evicted.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ExpiresSliding"}},{"Kind":"ITagHelper","Name":"enabled","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelperBase.Enabled\">\r\n            <summary>\r\n            Gets or sets the value which determines if the tag helper is enabled or not.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Enabled"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper","Common.TypeNameIdentifier":"DistributedCacheTagHelper"}},{"HashCode":1995842910,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;environment&gt; elements that conditionally renders\r\n            content based on the current value of <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\r\n            If the environment is not listed in the specified <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Names\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Include\" />,\r\n            or if it is in <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" />, the content will not be rendered.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"environment"}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"names","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Names\">\r\n            <summary>\r\n            A comma separated list of environment names in which the content should be rendered.\r\n            If the current environment is also in the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" /> list, the content will not be rendered.\r\n            </summary>\r\n            <remarks>\r\n            The specified environment names are compared case insensitively to the current value of\r\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Names"}},{"Kind":"ITagHelper","Name":"include","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Include\">\r\n            <summary>\r\n            A comma separated list of environment names in which the content should be rendered.\r\n            If the current environment is also in the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" /> list, the content will not be rendered.\r\n            </summary>\r\n            <remarks>\r\n            The specified environment names are compared case insensitively to the current value of\r\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Include"}},{"Kind":"ITagHelper","Name":"exclude","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\">\r\n            <summary>\r\n            A comma separated list of environment names in which the content will not be rendered.\r\n            </summary>\r\n            <remarks>\r\n            The specified environment names are compared case insensitively to the current value of\r\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Exclude"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper","Common.TypeNameIdentifier":"EnvironmentTagHelper"}},{"HashCode":1113929238,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;button&gt; elements and &lt;input&gt; elements with\r\n            their <c>type</c> attribute set to <c>image</c> or <c>submit</c>.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"button","Attributes":[{"Name":"asp-action"}]},{"TagName":"button","Attributes":[{"Name":"asp-controller"}]},{"TagName":"button","Attributes":[{"Name":"asp-area"}]},{"TagName":"button","Attributes":[{"Name":"asp-page"}]},{"TagName":"button","Attributes":[{"Name":"asp-page-handler"}]},{"TagName":"button","Attributes":[{"Name":"asp-fragment"}]},{"TagName":"button","Attributes":[{"Name":"asp-route"}]},{"TagName":"button","Attributes":[{"Name":"asp-all-route-data"}]},{"TagName":"button","Attributes":[{"Name":"asp-route-","NameComparison":1}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-action"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-controller"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-area"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-page"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-page-handler"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-fragment"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-route"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-all-route-data"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"image","ValueComparison":1},{"Name":"asp-route-","NameComparison":1}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-action"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-controller"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-area"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-page"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-page-handler"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-fragment"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-route"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-all-route-data"}]},{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"type","Value":"submit","ValueComparison":1},{"Name":"asp-route-","NameComparison":1}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-action","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Action\">\r\n            <summary>\r\n            The name of the action method.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Action"}},{"Kind":"ITagHelper","Name":"asp-controller","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Controller\">\r\n            <summary>\r\n            The name of the controller.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Controller"}},{"Kind":"ITagHelper","Name":"asp-area","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Area\">\r\n            <summary>\r\n            The name of the area.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Area"}},{"Kind":"ITagHelper","Name":"asp-page","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Page\">\r\n            <summary>\r\n            The name of the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Page"}},{"Kind":"ITagHelper","Name":"asp-page-handler","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.PageHandler\">\r\n            <summary>\r\n            The name of the page handler.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PageHandler"}},{"Kind":"ITagHelper","Name":"asp-fragment","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Fragment\">\r\n            <summary>\r\n            Gets or sets the URL fragment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Fragment"}},{"Kind":"ITagHelper","Name":"asp-route","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Route\">\r\n            <summary>\r\n            Name of the route.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Action\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Controller\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"ITagHelper","Name":"asp-all-route-data","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","IndexerNamePrefix":"asp-route-","IndexerTypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.RouteValues\">\r\n            <summary>\r\n            Additional parameters for the route.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteValues"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper","Common.TypeNameIdentifier":"FormActionTagHelper"}},{"HashCode":389843017,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;form&gt; elements.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"form"}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-action","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Action\">\r\n            <summary>\r\n            The name of the action method.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Action"}},{"Kind":"ITagHelper","Name":"asp-controller","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Controller\">\r\n            <summary>\r\n            The name of the controller.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Controller"}},{"Kind":"ITagHelper","Name":"asp-area","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Area\">\r\n            <summary>\r\n            The name of the area.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Area"}},{"Kind":"ITagHelper","Name":"asp-page","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Page\">\r\n            <summary>\r\n            The name of the page.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Page"}},{"Kind":"ITagHelper","Name":"asp-page-handler","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.PageHandler\">\r\n            <summary>\r\n            The name of the page handler.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PageHandler"}},{"Kind":"ITagHelper","Name":"asp-antiforgery","TypeName":"System.Boolean?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Antiforgery\">\r\n            <summary>\r\n            Whether the antiforgery token should be generated.\r\n            </summary>\r\n            <value>Defaults to <c>false</c> if user provides an <c>action</c> attribute\r\n            or if the <c>method</c> is <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.FormMethod.Get\" />; <c>true</c> otherwise.</value>\r\n        </member>","Metadata":{"Common.PropertyName":"Antiforgery"}},{"Kind":"ITagHelper","Name":"asp-fragment","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Fragment\">\r\n            <summary>\r\n            Gets or sets the URL fragment.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Fragment"}},{"Kind":"ITagHelper","Name":"asp-route","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Route\">\r\n            <summary>\r\n            Name of the route.\r\n            </summary>\r\n            <remarks>\r\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Action\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Controller\" /> is non-<c>null</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Route"}},{"Kind":"ITagHelper","Name":"asp-all-route-data","TypeName":"System.Collections.Generic.IDictionary<System.String, System.String>","IndexerNamePrefix":"asp-route-","IndexerTypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.RouteValues\">\r\n            <summary>\r\n            Additional parameters for the route.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"RouteValues"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper","Common.TypeNameIdentifier":"FormTagHelper"}},{"HashCode":-281794304,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;img&gt; elements that supports file versioning.\r\n            </summary>\r\n            <remarks>\r\n            The tag helper won't process for cases with just the 'src' attribute.\r\n            </remarks>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"img","TagStructure":2,"Attributes":[{"Name":"asp-append-version"},{"Name":"src"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"src","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper.Src\">\r\n            <summary>\r\n            Source of the image.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Src"}},{"Kind":"ITagHelper","Name":"asp-append-version","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper.AppendVersion\">\r\n            <summary>\r\n            Value indicating if file version should be appended to the src urls.\r\n            </summary>\r\n            <remarks>\r\n            If <c>true</c> then a query string \"v\" with the encoded content of the file is added.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"AppendVersion"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper","Common.TypeNameIdentifier":"ImageTagHelper"}},{"HashCode":1322189092,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;input&gt; elements with an <c>asp-for</c> attribute.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"input","TagStructure":2,"Attributes":[{"Name":"asp-for"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\">\r\n            <summary>\r\n            An expression to be evaluated against the current model.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For"}},{"Kind":"ITagHelper","Name":"asp-format","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\">\r\n            <summary>\r\n            The format string (see https://msdn.microsoft.com/en-us/library/txafckwd.aspx) used to format the\r\n            <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\" /> result. Sets the generated \"value\" attribute to that formatted string.\r\n            </summary>\r\n            <remarks>\r\n            Not used if the provided (see <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" />) or calculated \"type\" attribute value is\r\n            <c>checkbox</c>, <c>password</c>, or <c>radio</c>. That is, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> is used when calling\r\n            <see cref=\"M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateTextBox(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Object,System.String,System.Object)\" />.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Format"}},{"Kind":"ITagHelper","Name":"type","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\">\r\n            <summary>\r\n            The type of the &lt;input&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases. Also used to determine the <see cref=\"T:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator\" />\r\n            helper to call and the default <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> value. A default <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> is not calculated\r\n            if the provided (see <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" />) or calculated \"type\" attribute value is <c>checkbox</c>,\r\n            <c>hidden</c>, <c>password</c>, or <c>radio</c>.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"InputTypeName"}},{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Name\">\r\n            <summary>\r\n            The name of the &lt;input&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\" /> is\r\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"ITagHelper","Name":"value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Value\">\r\n            <summary>\r\n            The value of the &lt;input&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases. Also used to determine the generated \"checked\" attribute\r\n            if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" /> is \"radio\". Must not be <c>null</c> in that case.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Value"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper","Common.TypeNameIdentifier":"InputTagHelper"}},{"HashCode":1530364764,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;label&gt; elements with an <c>asp-for</c> attribute.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"label","Attributes":[{"Name":"asp-for"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper.For\">\r\n            <summary>\r\n            An expression to be evaluated against the current model.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper","Common.TypeNameIdentifier":"LabelTagHelper"}},{"HashCode":1278061783,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;link&gt; elements that supports fallback href paths.\r\n            </summary>\r\n            <remarks>\r\n            The tag helper won't process for cases with just the 'href' attribute.\r\n            </remarks>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-href-include"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-href-exclude"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-href"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-href-include"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-href-exclude"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-test-class"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-test-property"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-fallback-test-value"}]},{"TagName":"link","TagStructure":2,"Attributes":[{"Name":"asp-append-version"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"href","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.Href\">\r\n            <summary>\r\n            Address of the linked resource.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Href"}},{"Kind":"ITagHelper","Name":"asp-href-include","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.HrefInclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of CSS stylesheets to load.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HrefInclude"}},{"Kind":"ITagHelper","Name":"asp-href-exclude","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.HrefExclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of CSS stylesheets to exclude from loading.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.HrefInclude\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"HrefExclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-href","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\">\r\n            <summary>\r\n            The URL of a CSS stylesheet to fallback to in the case the primary one fails.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackHref"}},{"Kind":"ITagHelper","Name":"asp-suppress-fallback-integrity","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.SuppressFallbackIntegrity\">\r\n            <summary>\r\n            Boolean value that determines if an integrity hash will be compared with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SuppressFallbackIntegrity"}},{"Kind":"ITagHelper","Name":"asp-append-version","TypeName":"System.Boolean?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.AppendVersion\">\r\n            <summary>\r\n            Value indicating if file version should be appended to the href urls.\r\n            </summary>\r\n            <remarks>\r\n            If <c>true</c> then a query string \"v\" with the encoded content of the file is added.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"AppendVersion"}},{"Kind":"ITagHelper","Name":"asp-fallback-href-include","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of CSS stylesheets to fallback to in the case the primary\r\n            one fails.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackHrefInclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-href-exclude","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefExclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of CSS stylesheets to exclude from the fallback list, in\r\n            the case the primary one fails.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackHrefExclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-test-class","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\">\r\n            <summary>\r\n            The class name defined in the stylesheet to use for the fallback test.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\" />,\r\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackTestClass"}},{"Kind":"ITagHelper","Name":"asp-fallback-test-property","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\">\r\n            <summary>\r\n            The CSS property name to use for the fallback test.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\" />,\r\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackTestProperty"}},{"Kind":"ITagHelper","Name":"asp-fallback-test-value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\">\r\n            <summary>\r\n            The CSS property value to use for the fallback test.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\" />,\r\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackTestValue"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper","Common.TypeNameIdentifier":"LinkTagHelper"}},{"HashCode":-1638577815,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;option&gt; elements.\r\n            </summary>\r\n            <remarks>\r\n            This <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> works in conjunction with <see cref=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper\" />. It reads elements\r\n            content but does not modify that content. The only modification it makes is to add a <c>selected</c> attribute\r\n            in some cases.\r\n            </remarks>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"option"}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"value","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper.Value\">\r\n            <summary>\r\n            Specifies a value for the &lt;option&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Value"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper","Common.TypeNameIdentifier":"OptionTagHelper"}},{"HashCode":301813300,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper\">\r\n            <summary>\r\n            Renders a partial view.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"partial","TagStructure":2,"Attributes":[{"Name":"name"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Name\">\r\n            <summary>\r\n            The name or path of the partial view that is rendered to the response.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Name"}},{"Kind":"ITagHelper","Name":"for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.For\">\r\n            <summary>\r\n            An expression to be evaluated against the current model. Cannot be used together with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Model\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For"}},{"Kind":"ITagHelper","Name":"model","TypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Model\">\r\n            <summary>\r\n            The model to pass into the partial view. Cannot be used together with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.For\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Model"}},{"Kind":"ITagHelper","Name":"optional","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Optional\">\r\n            <summary>\r\n            When optional, executing the tag helper will no-op if the view cannot be located.\r\n            Otherwise will throw stating the view could not be found.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Optional"}},{"Kind":"ITagHelper","Name":"fallback-name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.FallbackName\">\r\n            <summary>\r\n            View to lookup if the view specified by <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Name\" /> cannot be located.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackName"}},{"Kind":"ITagHelper","Name":"view-data","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary","IndexerNamePrefix":"view-data-","IndexerTypeName":"System.Object","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.ViewData\">\r\n            <summary>\r\n            A <see cref=\"T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary\" /> to pass into the partial view.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"ViewData"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper","Common.TypeNameIdentifier":"PartialTagHelper"}},{"HashCode":-2102000158,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper\">\r\n            <summary>\r\n            A <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> that saves the state of Razor components rendered on the page up to that point.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"persist-component-state","TagStructure":2}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"persist-mode","TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.PersistenceMode?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper.PersistenceMode\">\r\n            <summary>\r\n            Gets or sets the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper.PersistenceMode\" /> for the state to persist.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"PersistenceMode"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper","Common.TypeNameIdentifier":"PersistComponentStateTagHelper"}},{"HashCode":1919440116,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;script&gt; elements that supports fallback src paths.\r\n            </summary>\r\n            <remarks>\r\n            The tag helper won't process for cases with just the 'src' attribute.\r\n            </remarks>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"script","Attributes":[{"Name":"asp-src-include"}]},{"TagName":"script","Attributes":[{"Name":"asp-src-exclude"}]},{"TagName":"script","Attributes":[{"Name":"asp-fallback-src"}]},{"TagName":"script","Attributes":[{"Name":"asp-fallback-src-include"}]},{"TagName":"script","Attributes":[{"Name":"asp-fallback-src-exclude"}]},{"TagName":"script","Attributes":[{"Name":"asp-fallback-test"}]},{"TagName":"script","Attributes":[{"Name":"asp-append-version"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"src","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.Src\">\r\n            <summary>\r\n            Address of the external script to use.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Src"}},{"Kind":"ITagHelper","Name":"asp-src-include","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SrcInclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of JavaScript scripts to load.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SrcInclude"}},{"Kind":"ITagHelper","Name":"asp-src-exclude","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SrcExclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of JavaScript scripts to exclude from loading.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SrcInclude\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SrcExclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-src","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrc\">\r\n            <summary>\r\n            The URL of a Script tag to fallback to in the case the primary one fails.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackSrc"}},{"Kind":"ITagHelper","Name":"asp-suppress-fallback-integrity","TypeName":"System.Boolean","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SuppressFallbackIntegrity\">\r\n            <summary>\r\n            Boolean value that determines if an integrity hash will be compared with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrc\" /> value.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"SuppressFallbackIntegrity"}},{"Kind":"ITagHelper","Name":"asp-append-version","TypeName":"System.Boolean?","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.AppendVersion\">\r\n            <summary>\r\n            Value indicating if file version should be appended to src urls.\r\n            </summary>\r\n            <remarks>\r\n            A query string \"v\" with the encoded content of the file is added.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"AppendVersion"}},{"Kind":"ITagHelper","Name":"asp-fallback-src-include","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrcInclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of JavaScript scripts to fallback to in the case the\r\n            primary one fails.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackSrcInclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-src-exclude","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrcExclude\">\r\n            <summary>\r\n            A comma separated list of globbed file patterns of JavaScript scripts to exclude from the fallback list, in\r\n            the case the primary one fails.\r\n            The glob patterns are assessed relative to the application's 'webroot' setting.\r\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrcInclude\" />.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackSrcExclude"}},{"Kind":"ITagHelper","Name":"asp-fallback-test","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackTestExpression\">\r\n            <summary>\r\n            The script method defined in the primary script to use for the fallback test.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"FallbackTestExpression"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper","Common.TypeNameIdentifier":"ScriptTagHelper"}},{"HashCode":-336972530,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;select&gt; elements with <c>asp-for</c> and/or\r\n            <c>asp-items</c> attribute(s).\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"select","Attributes":[{"Name":"asp-for"}]},{"TagName":"select","Attributes":[{"Name":"asp-items"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.For\">\r\n            <summary>\r\n            An expression to be evaluated against the current model.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For"}},{"Kind":"ITagHelper","Name":"asp-items","TypeName":"System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.Items\">\r\n            <summary>\r\n            A collection of <see cref=\"T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\" /> objects used to populate the &lt;select&gt; element with\r\n            &lt;optgroup&gt; and &lt;option&gt; elements.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"Items"}},{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.Name\">\r\n            <summary>\r\n            The name of the &lt;input&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.For\" /> is\r\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Name"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper","Common.TypeNameIdentifier":"SelectTagHelper"}},{"HashCode":-1473474677,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;textarea&gt; elements with an <c>asp-for</c> attribute.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"textarea","Attributes":[{"Name":"asp-for"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper.For\">\r\n            <summary>\r\n            An expression to be evaluated against the current model.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For"}},{"Kind":"ITagHelper","Name":"name","TypeName":"System.String","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper.Name\">\r\n            <summary>\r\n            The name of the &lt;input&gt; element.\r\n            </summary>\r\n            <remarks>\r\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper.For\" /> is\r\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\r\n            </remarks>\r\n        </member>","Metadata":{"Common.PropertyName":"Name"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper","Common.TypeNameIdentifier":"TextAreaTagHelper"}},{"HashCode":-1713889251,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting any HTML element with an <c>asp-validation-for</c>\r\n            attribute.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"span","Attributes":[{"Name":"asp-validation-for"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-validation-for","TypeName":"Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression","Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper.For\">\r\n            <summary>\r\n            Gets an expression to be evaluated against the current model.\r\n            </summary>\r\n        </member>","Metadata":{"Common.PropertyName":"For"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper","Common.TypeNameIdentifier":"ValidationMessageTagHelper"}},{"HashCode":890700439,"Kind":"ITagHelper","Name":"Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper","AssemblyName":"Microsoft.AspNetCore.Mvc.TagHelpers","Documentation":"<member name=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper\">\r\n            <summary>\r\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting any HTML element with an <c>asp-validation-summary</c>\r\n            attribute.\r\n            </summary>\r\n        </member>","CaseSensitive":false,"TagMatchingRules":[{"TagName":"div","Attributes":[{"Name":"asp-validation-summary"}]}],"BoundAttributes":[{"Kind":"ITagHelper","Name":"asp-validation-summary","TypeName":"Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary","IsEnum":true,"Documentation":"<member name=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper.ValidationSummary\">\r\n            <summary>\r\n            If <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.All\" /> or <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.ModelOnly\" />, appends a validation\r\n            summary. Otherwise (<see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.None\" />, the default), this tag helper does nothing.\r\n            </summary>\r\n            <exception cref=\"T:System.ArgumentException\">\r\n            Thrown if setter is called with an undefined <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper.ValidationSummary\" /> value e.g.\r\n            <c>(ValidationSummary)23</c>.\r\n            </exception>\r\n        </member>","Metadata":{"Common.PropertyName":"ValidationSummary"}}],"Metadata":{"Common.TypeNamespace":"Microsoft.AspNetCore.Mvc.TagHelpers","Runtime.Name":"ITagHelper","Common.TypeName":"Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper","Common.TypeNameIdentifier":"ValidationSummaryTagHelper"}},{"HashCode":68128766,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@bind-","NameComparison":1,"Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-...","TypeName":"System.Collections.Generic.Dictionary<string, object>","IndexerNamePrefix":"@bind-","IndexerTypeName":"System.Object","Documentation":"Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the corresponding bind attribute. For example: <code>@bind-value:format=\"...\"</code> will apply a format string to the value specified in <code>@bind-value=\"...\"</code>. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-...' attribute.","Metadata":{"Common.PropertyName":"Event"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.Fallback":"True","Common.TypeNamespace":"Microsoft.AspNetCore.Components","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"Microsoft.AspNetCore.Components.Bind","Common.ClassifyAttributesOnly":"True","Common.TypeNameIdentifier":"Bind"}},{"HashCode":-933749138,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"False","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":null,"Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-1104133056,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"False","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":null,"Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-337462685,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"checkbox","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"checkbox","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_checked"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_checked"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-checked","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_checked"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"False","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":null,"Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"checked","Components.Bind.TypeAttribute":"checkbox","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-251536517,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"text","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"text","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"False","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":null,"Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.TypeAttribute":"text","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":1104233308,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":null,"Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.TypeAttribute":"number","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":1732425482,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"number","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":null,"Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.TypeAttribute":"number","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-1900373147,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":"yyyy-MM-dd","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.TypeAttribute":"date","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-2098739122,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"date","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":"yyyy-MM-dd","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.TypeAttribute":"date","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-1274234482,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":"yyyy-MM-ddTHH:mm:ss","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.TypeAttribute":"datetime-local","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-483774086,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"datetime-local","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":"yyyy-MM-ddTHH:mm:ss","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.TypeAttribute":"datetime-local","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":614903700,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":"yyyy-MM","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.TypeAttribute":"month","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":2019391292,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"month","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":"yyyy-MM","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.TypeAttribute":"month","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":1620150668,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":"HH:mm:ss","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.TypeAttribute":"time","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-998986924,"Kind":"Components.Bind","Name":"Bind_value","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind-value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"input","Attributes":[{"Name":"type","Value":"time","ValueComparison":1},{"Name":"@bind-value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-value","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind_value"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"True","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":"HH:mm:ss","Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Components.Bind.TypeAttribute":"time","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":1545263755,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"select","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"select","Attributes":[{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"False","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":null,"Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-159836328,"Kind":"Components.Bind","Name":"Bind","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"textarea","Attributes":[{"Name":"@bind","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"textarea","Attributes":[{"Name":"@bind:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind","TypeName":"System.Object","Documentation":"Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Bind"},"BoundAttributeParameters":[{"Name":"format","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}},{"Name":"event","TypeName":"System.String","Documentation":"Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.","Metadata":{"Common.PropertyName":"Event_value"}},{"Name":"culture","TypeName":"System.Globalization.CultureInfo","Documentation":"Specifies the culture to use for conversions.","Metadata":{"Common.PropertyName":"Culture"}},{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]},{"Kind":"Components.Bind","Name":"format-value","TypeName":"System.String","Documentation":"Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.","Metadata":{"Common.PropertyName":"Format_value"}}],"Metadata":{"Components.Bind.ChangeAttribute":"onchange","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Web","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.IsInvariantCulture":"False","Common.TypeName":"Microsoft.AspNetCore.Components.Web.BindAttributes","Components.Bind.Format":null,"Common.ClassifyAttributesOnly":"True","Components.Bind.ValueAttribute":"value","Common.TypeNameIdentifier":"BindAttributes"}},{"HashCode":-1087493363,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Charts.SfAccumulationChart","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"Binds the provided expression to the 'DataSource' property and a change event delegate to the 'DataSourceChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfAccumulationChart","Attributes":[{"Name":"@bind-DataSource","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"SfAccumulationChart","Attributes":[{"Name":"@bind-DataSource:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-DataSource:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-DataSource","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"Binds the provided expression to the 'DataSource' property and a change event delegate to the 'DataSourceChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"DataSource"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"DataSourceChanged","Common.TypeNamespace":"Syncfusion.Blazor.Charts","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"Syncfusion.Blazor.Charts.SfAccumulationChart","Components.Bind.ValueAttribute":"DataSource","Common.TypeNameIdentifier":"SfAccumulationChart"}},{"HashCode":1053613121,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Charts.SfAccumulationChart","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"Binds the provided expression to the 'DataSource' property and a change event delegate to the 'DataSourceChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.SfAccumulationChart","Attributes":[{"Name":"@bind-DataSource","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Syncfusion.Blazor.Charts.SfAccumulationChart","Attributes":[{"Name":"@bind-DataSource:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-DataSource:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-DataSource","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Object>","Documentation":"Binds the provided expression to the 'DataSource' property and a change event delegate to the 'DataSourceChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"DataSource"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"DataSourceChanged","Common.TypeNamespace":"Syncfusion.Blazor.Charts","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"Syncfusion.Blazor.Charts.SfAccumulationChart","Components.Bind.ValueAttribute":"DataSource","Common.TypeNameIdentifier":"SfAccumulationChart"}},{"HashCode":-1271530891,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Charts.Internal.SvgSelectionPath","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"Binds the provided expression to the 'Path' property and a change event delegate to the 'PathChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SvgSelectionPath","Attributes":[{"Name":"@bind-Path","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"SvgSelectionPath","Attributes":[{"Name":"@bind-Path:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Path:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Path","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Path' property and a change event delegate to the 'PathChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Path"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"PathChanged","Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.SvgSelectionPath","Components.Bind.ValueAttribute":"Path","Common.TypeNameIdentifier":"SvgSelectionPath"}},{"HashCode":732388807,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Charts.Internal.SvgSelectionPath","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"Binds the provided expression to the 'Close' property and a change event delegate to the 'CloseChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SvgSelectionPath","Attributes":[{"Name":"@bind-Close","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"SvgSelectionPath","Attributes":[{"Name":"@bind-Close:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Close:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Close","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Charts.Internal.CloseOptions>","Documentation":"Binds the provided expression to the 'Close' property and a change event delegate to the 'CloseChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Close"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"CloseChanged","Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.SvgSelectionPath","Components.Bind.ValueAttribute":"Close","Common.TypeNameIdentifier":"SvgSelectionPath"}},{"HashCode":1439250795,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Charts.Internal.SvgSelectionPath","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"Binds the provided expression to the 'Path' property and a change event delegate to the 'PathChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.SvgSelectionPath","Attributes":[{"Name":"@bind-Path","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Syncfusion.Blazor.Charts.Internal.SvgSelectionPath","Attributes":[{"Name":"@bind-Path:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Path:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Path","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Path' property and a change event delegate to the 'PathChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Path"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"PathChanged","Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.SvgSelectionPath","Components.Bind.ValueAttribute":"Path","Common.TypeNameIdentifier":"SvgSelectionPath"}},{"HashCode":-1968138518,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Charts.Internal.SvgSelectionPath","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"Binds the provided expression to the 'Close' property and a change event delegate to the 'CloseChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.SvgSelectionPath","Attributes":[{"Name":"@bind-Close","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Syncfusion.Blazor.Charts.Internal.SvgSelectionPath","Attributes":[{"Name":"@bind-Close:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Close:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Close","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Charts.Internal.CloseOptions>","Documentation":"Binds the provided expression to the 'Close' property and a change event delegate to the 'CloseChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Close"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"CloseChanged","Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.SvgSelectionPath","Components.Bind.ValueAttribute":"Close","Common.TypeNameIdentifier":"SvgSelectionPath"}},{"HashCode":545967434,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Charts.Internal.SvgSelectionRect","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"Binds the provided expression to the 'DragRect' property and a change event delegate to the 'DragRectChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SvgSelectionRect","Attributes":[{"Name":"@bind-DragRect","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"SvgSelectionRect","Attributes":[{"Name":"@bind-DragRect:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-DragRect:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-DragRect","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DataVizCommon.Rect>","Documentation":"Binds the provided expression to the 'DragRect' property and a change event delegate to the 'DragRectChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"DragRect"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"DragRectChanged","Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.SvgSelectionRect","Components.Bind.ValueAttribute":"DragRect","Common.TypeNameIdentifier":"SvgSelectionRect"}},{"HashCode":1307064385,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Charts.Internal.SvgSelectionRect","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"Binds the provided expression to the 'Close' property and a change event delegate to the 'CloseChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SvgSelectionRect","Attributes":[{"Name":"@bind-Close","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"SvgSelectionRect","Attributes":[{"Name":"@bind-Close:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Close:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Close","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Charts.Internal.CloseOptions>","Documentation":"Binds the provided expression to the 'Close' property and a change event delegate to the 'CloseChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Close"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"CloseChanged","Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.SvgSelectionRect","Components.Bind.ValueAttribute":"Close","Common.TypeNameIdentifier":"SvgSelectionRect"}},{"HashCode":61734525,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Charts.Internal.SvgSelectionRect","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"Binds the provided expression to the 'DragRect' property and a change event delegate to the 'DragRectChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.SvgSelectionRect","Attributes":[{"Name":"@bind-DragRect","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Syncfusion.Blazor.Charts.Internal.SvgSelectionRect","Attributes":[{"Name":"@bind-DragRect:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-DragRect:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-DragRect","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.DataVizCommon.Rect>","Documentation":"Binds the provided expression to the 'DragRect' property and a change event delegate to the 'DragRectChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"DragRect"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"DragRectChanged","Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.SvgSelectionRect","Components.Bind.ValueAttribute":"DragRect","Common.TypeNameIdentifier":"SvgSelectionRect"}},{"HashCode":709074203,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.Charts.Internal.SvgSelectionRect","AssemblyName":"Syncfusion.Blazor.Charts","Documentation":"Binds the provided expression to the 'Close' property and a change event delegate to the 'CloseChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.Charts.Internal.SvgSelectionRect","Attributes":[{"Name":"@bind-Close","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Syncfusion.Blazor.Charts.Internal.SvgSelectionRect","Attributes":[{"Name":"@bind-Close:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Close:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Close","TypeName":"Microsoft.AspNetCore.Components.EventCallback<Syncfusion.Blazor.Charts.Internal.CloseOptions>","Documentation":"Binds the provided expression to the 'Close' property and a change event delegate to the 'CloseChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Close"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"CloseChanged","Common.TypeNamespace":"Syncfusion.Blazor.Charts.Internal","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"Syncfusion.Blazor.Charts.Internal.SvgSelectionRect","Components.Bind.ValueAttribute":"Close","Common.TypeNameIdentifier":"SvgSelectionRect"}},{"HashCode":-430203784,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputCheckbox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputCheckbox","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputCheckbox"}},{"HashCode":-1100620278,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.Boolean>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputCheckbox","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputCheckbox"}},{"HashCode":556281347,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputDate","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputDate","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputDate"}},{"HashCode":1883545775,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputDate","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputDate<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputDate"}},{"HashCode":-138454584,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputNumber","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputNumber","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputNumber"}},{"HashCode":1254467101,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputNumber","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputNumber"}},{"HashCode":-1428121970,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputRadioGroup","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputRadioGroup","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputRadioGroup"}},{"HashCode":1230901276,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputRadioGroup"}},{"HashCode":1067270308,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputSelect"}},{"HashCode":-1105711556,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputSelect","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<TValue>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputSelect"}},{"HashCode":1302743319,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputText","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputText","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputText"}},{"HashCode":-1955468612,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputText","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputText","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputText","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputText"}},{"HashCode":1573018933,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"InputTextArea","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"InputTextArea","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputTextArea"}},{"HashCode":807720999,"Kind":"Components.Bind","Name":"Microsoft.AspNetCore.Components.Forms.InputTextArea","AssemblyName":"Microsoft.AspNetCore.Components.Web","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Attributes":[{"Name":"@bind-Value","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Attributes":[{"Name":"@bind-Value:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-Value:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-Value","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Value"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ValueChanged","Common.TypeNamespace":"Microsoft.AspNetCore.Components.Forms","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Components.Bind.ExpressionAttribute":"ValueExpression","Common.TypeName":"Microsoft.AspNetCore.Components.Forms.InputTextArea","Components.Bind.ValueAttribute":"Value","Common.TypeNameIdentifier":"InputTextArea"}},{"HashCode":646396175,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.SfMediaQuery","AssemblyName":"Syncfusion.Blazor.Core","Documentation":"Binds the provided expression to the 'ActiveBreakpoint' property and a change event delegate to the 'ActiveBreakpointChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"SfMediaQuery","Attributes":[{"Name":"@bind-ActiveBreakpoint","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"SfMediaQuery","Attributes":[{"Name":"@bind-ActiveBreakpoint:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-ActiveBreakpoint:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ActiveBreakpoint","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'ActiveBreakpoint' property and a change event delegate to the 'ActiveBreakpointChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ActiveBreakpoint"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ActiveBreakpointChanged","Common.TypeNamespace":"Syncfusion.Blazor","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"Syncfusion.Blazor.SfMediaQuery","Components.Bind.ValueAttribute":"ActiveBreakpoint","Common.TypeNameIdentifier":"SfMediaQuery"}},{"HashCode":58646771,"Kind":"Components.Bind","Name":"Syncfusion.Blazor.SfMediaQuery","AssemblyName":"Syncfusion.Blazor.Core","Documentation":"Binds the provided expression to the 'ActiveBreakpoint' property and a change event delegate to the 'ActiveBreakpointChanged' property of the component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"Syncfusion.Blazor.SfMediaQuery","Attributes":[{"Name":"@bind-ActiveBreakpoint","Metadata":{"Common.DirectiveAttribute":"True"}}]},{"TagName":"Syncfusion.Blazor.SfMediaQuery","Attributes":[{"Name":"@bind-ActiveBreakpoint:get","Metadata":{"Common.DirectiveAttribute":"True"}},{"Name":"@bind-ActiveBreakpoint:set","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Bind","Name":"@bind-ActiveBreakpoint","TypeName":"Microsoft.AspNetCore.Components.EventCallback<System.String>","Documentation":"Binds the provided expression to the 'ActiveBreakpoint' property and a change event delegate to the 'ActiveBreakpointChanged' property of the component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"ActiveBreakpoint"},"BoundAttributeParameters":[{"Name":"get","TypeName":"System.Object","Documentation":"Specifies the expression to use for binding the value to the attribute.","Metadata":{"Components.Bind.AlternativeNotation":"True","Common.PropertyName":"Get"}},{"Name":"set","TypeName":"System.Delegate","Documentation":"Specifies the expression to use for updating the bound value when a new value is available.","Metadata":{"Common.PropertyName":"Set"}},{"Name":"after","TypeName":"System.Delegate","Documentation":"Specifies an action to run after the new value has been set.","Metadata":{"Common.PropertyName":"After"}}]}],"Metadata":{"Components.Bind.ChangeAttribute":"ActiveBreakpointChanged","Common.TypeNamespace":"Syncfusion.Blazor","Components.NameMatch":"Components.FullyQualifiedNameMatch","Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Bind","Common.TypeName":"Syncfusion.Blazor.SfMediaQuery","Components.Bind.ValueAttribute":"ActiveBreakpoint","Common.TypeNameIdentifier":"SfMediaQuery"}},{"HashCode":1925038139,"Kind":"Components.Ref","Name":"Ref","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Populates the specified field or property with a reference to the element or component.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@ref","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Ref","Name":"@ref","TypeName":"System.Object","Documentation":"Populates the specified field or property with a reference to the element or component.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Ref"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Ref","Common.TypeName":"Microsoft.AspNetCore.Components.Ref","Common.ClassifyAttributesOnly":"True"}},{"HashCode":549539769,"Kind":"Components.Key","Name":"Key","AssemblyName":"Microsoft.AspNetCore.Components","Documentation":"Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.","CaseSensitive":true,"TagMatchingRules":[{"TagName":"*","Attributes":[{"Name":"@key","Metadata":{"Common.DirectiveAttribute":"True"}}]}],"BoundAttributes":[{"Kind":"Components.Key","Name":"@key","TypeName":"System.Object","Documentation":"Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.","Metadata":{"Common.DirectiveAttribute":"True","Common.PropertyName":"Key"}}],"Metadata":{"Runtime.Name":"Components.None","Components.IsSpecialKind":"Components.Key","Common.TypeName":"Microsoft.AspNetCore.Components.Key","Common.ClassifyAttributesOnly":"True"}}],"CSharpLanguageVersion":1000},"RootNamespace":"PassKey.Login.MongoDb.Blazor.Server.UI","Documents":[{"FilePath":"C:\\Users\\NatashaAbel\\source\\repos\\PassKey.Login.MongoDb\\PassKey.Login.MongoDb.Blazor.Server.UI\\App.razor","TargetPath":"App.razor","FileKind":"component"},{"FilePath":"C:\\Users\\NatashaAbel\\source\\repos\\PassKey.Login.MongoDb\\PassKey.Login.MongoDb.Blazor.Server.UI\\Shared\\NavMenu.razor","TargetPath":"Shared\\NavMenu.razor","FileKind":"component"},{"FilePath":"C:\\Users\\NatashaAbel\\source\\repos\\PassKey.Login.MongoDb\\PassKey.Login.MongoDb.Blazor.Server.UI\\_Imports.razor","TargetPath":"_Imports.razor","FileKind":"componentImport"},{"FilePath":"C:\\Users\\NatashaAbel\\source\\repos\\PassKey.Login.MongoDb\\PassKey.Login.MongoDb.Blazor.Server.UI\\Pages\\NavPages\\TimeSheets.razor","TargetPath":"Pages\\NavPages\\TimeSheets.razor","FileKind":"component"},{"FilePath":"C:\\Users\\NatashaAbel\\source\\repos\\PassKey.Login.MongoDb\\PassKey.Login.MongoDb.Blazor.Server.UI\\Pages\\_Host.cshtml","TargetPath":"Pages\\_Host.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\NatashaAbel\\source\\repos\\PassKey.Login.MongoDb\\PassKey.Login.MongoDb.Blazor.Server.UI\\Shared\\SurveyPrompt.razor","TargetPath":"Shared\\SurveyPrompt.razor","FileKind":"component"},{"FilePath":"C:\\Users\\NatashaAbel\\source\\repos\\PassKey.Login.MongoDb\\PassKey.Login.MongoDb.Blazor.Server.UI\\Pages\\Register.razor","TargetPath":"Pages\\Register.razor","FileKind":"component"},{"FilePath":"C:\\Users\\NatashaAbel\\source\\repos\\PassKey.Login.MongoDb\\PassKey.Login.MongoDb.Blazor.Server.UI\\Pages\\Index.razor","TargetPath":"Pages\\Index.razor","FileKind":"component"},{"FilePath":"C:\\Users\\NatashaAbel\\source\\repos\\PassKey.Login.MongoDb\\PassKey.Login.MongoDb.Blazor.Server.UI\\Shared\\EmptyLayout.razor","TargetPath":"Shared\\EmptyLayout.razor","FileKind":"component"},{"FilePath":"C:\\Users\\NatashaAbel\\source\\repos\\PassKey.Login.MongoDb\\PassKey.Login.MongoDb.Blazor.Server.UI\\Pages\\NavPages\\Payments.razor","TargetPath":"Pages\\NavPages\\Payments.razor","FileKind":"component"},{"FilePath":"C:\\Users\\NatashaAbel\\source\\repos\\PassKey.Login.MongoDb\\PassKey.Login.MongoDb.Blazor.Server.UI\\Pages\\NavPages\\Graph.razor","TargetPath":"Pages\\NavPages\\Graph.razor","FileKind":"component"},{"FilePath":"C:\\Users\\NatashaAbel\\source\\repos\\PassKey.Login.MongoDb\\PassKey.Login.MongoDb.Blazor.Server.UI\\Pages\\NavPages\\Expenses.razor","TargetPath":"Pages\\NavPages\\Expenses.razor","FileKind":"component"},{"FilePath":"C:\\Users\\NatashaAbel\\source\\repos\\PassKey.Login.MongoDb\\PassKey.Login.MongoDb.Blazor.Server.UI\\Components\\ModalDialog.razor","TargetPath":"Components\\ModalDialog.razor","FileKind":"component"},{"FilePath":"C:\\Users\\NatashaAbel\\source\\repos\\PassKey.Login.MongoDb\\PassKey.Login.MongoDb.Blazor.Server.UI\\Pages\\NavPages\\Home.razor","TargetPath":"Pages\\NavPages\\Home.razor","FileKind":"component"},{"FilePath":"C:\\Users\\NatashaAbel\\source\\repos\\PassKey.Login.MongoDb\\PassKey.Login.MongoDb.Blazor.Server.UI\\Pages\\_Layout.cshtml","TargetPath":"Pages\\_Layout.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\NatashaAbel\\source\\repos\\PassKey.Login.MongoDb\\PassKey.Login.MongoDb.Blazor.Server.UI\\Pages\\Error.cshtml","TargetPath":"Pages\\Error.cshtml","FileKind":"mvc"},{"FilePath":"C:\\Users\\NatashaAbel\\source\\repos\\PassKey.Login.MongoDb\\PassKey.Login.MongoDb.Blazor.Server.UI\\Shared\\MainLayout.razor","TargetPath":"Shared\\MainLayout.razor","FileKind":"component"},{"FilePath":"C:\\Users\\NatashaAbel\\source\\repos\\PassKey.Login.MongoDb\\PassKey.Login.MongoDb.Blazor.Server.UI\\Pages\\NavPages\\MyAccount.razor","TargetPath":"Pages\\NavPages\\MyAccount.razor","FileKind":"component"}],"SerializationFormat":"0.3"}